=FunctionName: main
=result: 1
=cg_with_asm_annotation
=cg_with_backtracker
=cg_with_rank
=corr_graph main.A7
=src_tfg
=TFG_SSA:
=TFG_LLVM src.llvm.main:
=TFG:
=Nodes: L0%0%d Lentry%1%allocaI3 Lentry%1%allocaI4 Lentry%2%allocaI3 Lentry%2%allocaI4 Lfor.body%1%d Lfor.cond%1%bbentry Lfor.end%1%d E0%0%d
=Edges:
L0%0%d => Lentry%1%allocaI3
Lentry%1%allocaI3 => Lentry%1%allocaI4
Lentry%1%allocaI4 => Lentry%2%allocaI3
Lentry%2%allocaI3 => Lentry%2%allocaI4
Lentry%2%allocaI4 => Lfor.cond%1%bbentry
Lfor.cond%1%bbentry => Lfor.body%1%d
Lfor.cond%1%bbentry => Lfor.end%1%d
Lfor.end%1%d => E0%0%d
Lfor.body%1%d => Lfor.cond%1%bbentry (backedge) 
=graph done
=is_ssa_graph:
1
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d= : BV:32
=src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/ : BV:32
=src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d= : COUNT
=src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=state_end
=PC to var-version map at L0%0%d
=version for src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d= : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%1%allocaI3
=version for src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%1%allocaI4
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%2%allocaI3
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%2%allocaI4
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.body%1%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.cond%1%bbentry
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.end%1%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at E0%0%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d
=Output: symbol.2.0
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: llvm-%ret-reg
1 : input.src.llvm-%conv.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume pred 0
=Comment
symbol1.char0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 1
=Comment
symbol1.char1
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 2
=Comment
symbol1.char4
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 1 { 0x1 } : BV:8
=predicate done
=global assume pred 3
=Comment
symbol1.char2
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 4
=Comment
symbol1.char5
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 5
=Comment
symbol1.char3
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 6
=Comment
symbol1.char6
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 7
=Comment
symbol1.char7
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume predicate_set done
Memlabel map for call-context {*;main}
=memlabel_map.0 for call-context {*;main}
mlloc.src.llvm.main.0 : memlabel-mem--rodata
=memlabel_map.1 for call-context {*;main}
mlloc.src.llvm.main.1 : memlabel-mem--rodata
=memlabel_map.2 for call-context {*;main}
mlloc.src.llvm.main.2 : memlabel-mem--rodata
=memlabel_map.3 for call-context {*;main}
mlloc.src.llvm.main.3 : memlabel-mem--rodata
=memlabel_map.4 for call-context {*;main}
mlloc.src.llvm.main.4 : memlabel-mem--rodata
=memlabel_map.5 for call-context {*;main}
mlloc.src.llvm.main.5 : memlabel-mem--rodata
=memlabel_map.6 for call-context {*;main}
mlloc.src.llvm.main.6 : memlabel-mem--rodata
=memlabel_map.7 for call-context {*;main}
mlloc.src.llvm.main.7 : memlabel-mem--symbol.2.0
=memlabel_map.8 for call-context {*;main}
mlloc.src.llvm.main.8 : memlabel-mem--rodata
=memlabel_map.9 for call-context {*;main}
mlvar.src.llvm.main.0 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.10 for call-context {*;main}
mlvar.src.llvm.main.1 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.11 for call-context {*;main}
mlvar.src.llvm.main.10 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.12 for call-context {*;main}
mlvar.src.llvm.main.11 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.13 for call-context {*;main}
mlvar.src.llvm.main.12 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.14 for call-context {*;main}
mlvar.src.llvm.main.13 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.15 for call-context {*;main}
mlvar.src.llvm.main.14 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.16 for call-context {*;main}
mlvar.src.llvm.main.15 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.17 for call-context {*;main}
mlvar.src.llvm.main.16 : memlabel-mem--rodata
=memlabel_map.18 for call-context {*;main}
mlvar.src.llvm.main.17 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.19 for call-context {*;main}
mlvar.src.llvm.main.18 : memlabel-mem--rodata
=memlabel_map.20 for call-context {*;main}
mlvar.src.llvm.main.19 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.21 for call-context {*;main}
mlvar.src.llvm.main.2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.22 for call-context {*;main}
mlvar.src.llvm.main.20 : memlabel-mem--rodata
=memlabel_map.23 for call-context {*;main}
mlvar.src.llvm.main.21 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.24 for call-context {*;main}
mlvar.src.llvm.main.22 : memlabel-mem--rodata
=memlabel_map.25 for call-context {*;main}
mlvar.src.llvm.main.23 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.26 for call-context {*;main}
mlvar.src.llvm.main.24 : memlabel-mem--rodata
=memlabel_map.27 for call-context {*;main}
mlvar.src.llvm.main.25 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.28 for call-context {*;main}
mlvar.src.llvm.main.26 : memlabel-mem--rodata
=memlabel_map.29 for call-context {*;main}
mlvar.src.llvm.main.27 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.30 for call-context {*;main}
mlvar.src.llvm.main.28 : memlabel-mem--rodata
=memlabel_map.31 for call-context {*;main}
mlvar.src.llvm.main.29 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.32 for call-context {*;main}
mlvar.src.llvm.main.3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.33 for call-context {*;main}
mlvar.src.llvm.main.30 : memlabel-mem--rodata
=memlabel_map.34 for call-context {*;main}
mlvar.src.llvm.main.31 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.35 for call-context {*;main}
mlvar.src.llvm.main.32 : memlabel-mem--symbol.2.0
=memlabel_map.36 for call-context {*;main}
mlvar.src.llvm.main.33 : memlabel-mem--symbol.2.0
=memlabel_map.37 for call-context {*;main}
mlvar.src.llvm.main.34 : memlabel-mem--symbol.2.0
=memlabel_map.38 for call-context {*;main}
mlvar.src.llvm.main.35 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.39 for call-context {*;main}
mlvar.src.llvm.main.36 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.40 for call-context {*;main}
mlvar.src.llvm.main.37 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.41 for call-context {*;main}
mlvar.src.llvm.main.38 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.42 for call-context {*;main}
mlvar.src.llvm.main.39 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.43 for call-context {*;main}
mlvar.src.llvm.main.4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.44 for call-context {*;main}
mlvar.src.llvm.main.40 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.45 for call-context {*;main}
mlvar.src.llvm.main.41 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.46 for call-context {*;main}
mlvar.src.llvm.main.42 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.47 for call-context {*;main}
mlvar.src.llvm.main.43 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.48 for call-context {*;main}
mlvar.src.llvm.main.44 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.49 for call-context {*;main}
mlvar.src.llvm.main.45 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.50 for call-context {*;main}
mlvar.src.llvm.main.46 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.51 for call-context {*;main}
mlvar.src.llvm.main.47 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.52 for call-context {*;main}
mlvar.src.llvm.main.48 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.53 for call-context {*;main}
mlvar.src.llvm.main.49 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.54 for call-context {*;main}
mlvar.src.llvm.main.5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.55 for call-context {*;main}
mlvar.src.llvm.main.50 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.56 for call-context {*;main}
mlvar.src.llvm.main.51 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.57 for call-context {*;main}
mlvar.src.llvm.main.52 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.58 for call-context {*;main}
mlvar.src.llvm.main.53 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.59 for call-context {*;main}
mlvar.src.llvm.main.54 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.60 for call-context {*;main}
mlvar.src.llvm.main.55 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.61 for call-context {*;main}
mlvar.src.llvm.main.56 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.62 for call-context {*;main}
mlvar.src.llvm.main.57 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.63 for call-context {*;main}
mlvar.src.llvm.main.58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.64 for call-context {*;main}
mlvar.src.llvm.main.59 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.65 for call-context {*;main}
mlvar.src.llvm.main.6 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.66 for call-context {*;main}
mlvar.src.llvm.main.60 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.67 for call-context {*;main}
mlvar.src.llvm.main.61 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.68 for call-context {*;main}
mlvar.src.llvm.main.62 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.69 for call-context {*;main}
mlvar.src.llvm.main.63 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.70 for call-context {*;main}
mlvar.src.llvm.main.64 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.71 for call-context {*;main}
mlvar.src.llvm.main.65 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.72 for call-context {*;main}
mlvar.src.llvm.main.66 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.73 for call-context {*;main}
mlvar.src.llvm.main.67 : memlabel-mem--symbol.2.0
=memlabel_map.74 for call-context {*;main}
mlvar.src.llvm.main.68 : memlabel-mem--symbol.2.0
=memlabel_map.75 for call-context {*;main}
mlvar.src.llvm.main.69 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.76 for call-context {*;main}
mlvar.src.llvm.main.7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.77 for call-context {*;main}
mlvar.src.llvm.main.8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.78 for call-context {*;main}
mlvar.src.llvm.main.9 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Edge: L0%0%d => Lentry%1%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=src.llvm-%a.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  %a = alloca [2 x %struct.S], align 4)*  %a = alloca [2 x %struct.S], align 4)*  %a = alloca [2 x %struct.S], align 4)
tfg_edge_comment end

=Edge: Lentry%1%allocaI3 => Lentry%1%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-mem.Lentry%1%allocaI4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%1%allocaI4
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
8 : ite(1, 6, 7) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  %a = alloca [2 x %struct.S], align 4
tfg_edge_comment end

=Edge: Lentry%1%allocaI4 => Lentry%2%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%d.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:((  %a = alloca [2 x %struct.S], align 4*  %d = alloca %struct.S, align 4)*(  %d = alloca %struct.S, align 4*  %d = alloca %struct.S, align 4))
tfg_edge_comment end

=Edge: Lentry%2%allocaI3 => Lentry%2%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-mem.Lentry%2%allocaI4
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%2%allocaI4
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
8 : ite(1, 6, 7) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:  %d = alloca %struct.S, align 4
tfg_edge_comment end

=Edge: Lentry%2%allocaI4 => Lfor.cond%1%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : symbol.1 : BV:32
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.0 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 0 { 0x0 } : BV:8
8 : 1 { 0x1 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : store(1, 2, 3, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : mlvar.src.llvm.main.1 : MEMLABEL
12 : 1 { 0x1 +1.11e129 } : BV:32
13 : bvadd(4, 12) : BV:32
14 : store(10, 2, 11, 13, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
15 : mlvar.src.llvm.main.2 : MEMLABEL
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(4, 16) : BV:32
18 : store(14, 2, 15, 17, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
19 : mlvar.src.llvm.main.3 : MEMLABEL
20 : 3 { 0x3 +1.35e129 } : BV:32
21 : bvadd(4, 20) : BV:32
22 : store(18, 2, 19, 21, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : mlvar.src.llvm.main.4 : MEMLABEL
24 : 4 { 0x4 +1.47e129 } : BV:32
25 : bvadd(4, 24) : BV:32
26 : store(22, 2, 23, 25, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : mlvar.src.llvm.main.5 : MEMLABEL
28 : 5 { 0x5 +1.59e129 } : BV:32
29 : bvadd(4, 28) : BV:32
30 : store(26, 2, 27, 29, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
31 : mlvar.src.llvm.main.6 : MEMLABEL
32 : 6 { 0x6 +1.71e129 } : BV:32
33 : bvadd(4, 32) : BV:32
34 : store(30, 2, 31, 33, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
35 : mlvar.src.llvm.main.7 : MEMLABEL
36 : 7 { 0x7 +1.83e129 } : BV:32
37 : bvadd(4, 36) : BV:32
38 : store(34, 2, 35, 37, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.8 : MEMLABEL
40 : 8 { 0x8 +1.95e129 } : BV:32
41 : bvadd(4, 40) : BV:32
42 : store(38, 2, 39, 41, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
43 : mlvar.src.llvm.main.9 : MEMLABEL
44 : 9 { 0x9 +1.107e129 } : BV:32
45 : bvadd(4, 44) : BV:32
46 : store(42, 2, 43, 45, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
47 : mlvar.src.llvm.main.10 : MEMLABEL
48 : 10 { 0xa +1.119e129 } : BV:32
49 : bvadd(4, 48) : BV:32
50 : store(46, 2, 47, 49, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
51 : mlvar.src.llvm.main.11 : MEMLABEL
52 : 11 { 0xb +1.131e129 } : BV:32
53 : bvadd(4, 52) : BV:32
54 : store(50, 2, 51, 53, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
55 : mlvar.src.llvm.main.12 : MEMLABEL
56 : 12 { 0xc +1.143e129 } : BV:32
57 : bvadd(4, 56) : BV:32
58 : store(54, 2, 55, 57, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
59 : mlvar.src.llvm.main.13 : MEMLABEL
60 : 13 { 0xd +1.154e129 } : BV:32
61 : bvadd(4, 60) : BV:32
62 : store(58, 2, 59, 61, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
63 : mlvar.src.llvm.main.14 : MEMLABEL
64 : 14 { 0xe +1.166e129 } : BV:32
65 : bvadd(4, 64) : BV:32
66 : store(62, 2, 63, 65, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.15 : MEMLABEL
68 : 15 { 0xf +1.178e129 } : BV:32
69 : bvadd(4, 68) : BV:32
70 : store(66, 2, 67, 69, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
71 : mlvar.src.llvm.main.17 : MEMLABEL
72 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
73 : bvadd(72, 5) : BV:32
74 : mlvar.src.llvm.main.16 : MEMLABEL
75 : symbol.1 : BV:32
76 : bvadd(75, 5) : BV:32
77 : select(70, 2, 74, 76, 8, 9) : BV:8
78 : store(70, 2, 71, 73, 77, 8, 9) : ARRAY[BV:32 -> BV:8]
79 : mlvar.src.llvm.main.19 : MEMLABEL
80 : bvadd(72, 12) : BV:32
81 : mlvar.src.llvm.main.18 : MEMLABEL
82 : bvadd(75, 12) : BV:32
83 : select(78, 2, 81, 82, 8, 9) : BV:8
84 : store(78, 2, 79, 80, 83, 8, 9) : ARRAY[BV:32 -> BV:8]
85 : mlvar.src.llvm.main.21 : MEMLABEL
86 : bvadd(72, 16) : BV:32
87 : mlvar.src.llvm.main.20 : MEMLABEL
88 : bvadd(75, 16) : BV:32
89 : select(84, 2, 87, 88, 8, 9) : BV:8
90 : store(84, 2, 85, 86, 89, 8, 9) : ARRAY[BV:32 -> BV:8]
91 : mlvar.src.llvm.main.23 : MEMLABEL
92 : bvadd(72, 20) : BV:32
93 : mlvar.src.llvm.main.22 : MEMLABEL
94 : bvadd(75, 20) : BV:32
95 : select(90, 2, 93, 94, 8, 9) : BV:8
96 : store(90, 2, 91, 92, 95, 8, 9) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.25 : MEMLABEL
98 : bvadd(72, 24) : BV:32
99 : mlvar.src.llvm.main.24 : MEMLABEL
100 : bvadd(75, 24) : BV:32
101 : select(96, 2, 99, 100, 8, 9) : BV:8
102 : store(96, 2, 97, 98, 101, 8, 9) : ARRAY[BV:32 -> BV:8]
103 : mlvar.src.llvm.main.27 : MEMLABEL
104 : bvadd(72, 28) : BV:32
105 : mlvar.src.llvm.main.26 : MEMLABEL
106 : bvadd(75, 28) : BV:32
107 : select(102, 2, 105, 106, 8, 9) : BV:8
108 : store(102, 2, 103, 104, 107, 8, 9) : ARRAY[BV:32 -> BV:8]
109 : mlvar.src.llvm.main.29 : MEMLABEL
110 : bvadd(72, 32) : BV:32
111 : mlvar.src.llvm.main.28 : MEMLABEL
112 : bvadd(75, 32) : BV:32
113 : select(108, 2, 111, 112, 8, 9) : BV:8
114 : store(108, 2, 109, 110, 113, 8, 9) : ARRAY[BV:32 -> BV:8]
115 : mlvar.src.llvm.main.31 : MEMLABEL
116 : bvadd(72, 36) : BV:32
117 : mlvar.src.llvm.main.30 : MEMLABEL
118 : bvadd(75, 36) : BV:32
119 : select(114, 2, 117, 118, 8, 9) : BV:8
120 : store(114, 2, 115, 116, 119, 8, 9) : ARRAY[BV:32 -> BV:8]
121 : mlvar.src.llvm.main.32 : MEMLABEL
122 : symbol.2 : BV:32
123 : 4 { 0x4 +1.0e1025 } : INT
124 : store(120, 2, 121, 122, 5, 123, 9) : ARRAY[BV:32 -> BV:8]
=src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=EdgeAssume.1
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : islangaligned(4, 2) : BOOL
6 : symbol.1 : BV:32
7 : islangaligned(6, 2) : BOOL
8 : and(5, 7) : BOOL
9 : and(3, 8) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:2:(((((((((((((((((((((((((  %d = alloca %struct.S, align 4*(  %0 = bitcast [2 x %struct.S]* %a to i8*, !dbg !24*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24))*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*(((  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  %1 = bitcast %struct.S* %d to i8*, !dbg !26)*(badref*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*((((  store i32 0, i32* @b, align 4, !dbg !27*  br label %for.cond, !dbg !29)*  br label %for.cond, !dbg !29)*  br label %for.cond, !dbg !29)*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge))))
tfg_edge_comment end

=Edge: Lfor.cond%1%bbentry => Lfor.body%1%d
=Edge.EdgeCond: 
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=Edge.StateTo: 
=src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*(  %2 = load i32, i32* @b, align 4, !dbg !30*  %2 = load i32, i32* @b, align 4, !dbg !30))*  %cmp = icmp slt i32 %2, 2, !dbg !32)*((  br i1 %cmp, label %for.body, label %for.end, !dbg !33*  br i1 %cmp, label %for.body, label %for.end, !dbg !33)*  br i1 %cmp, label %for.body, label %for.end, !dbg !33))
tfg_edge_comment end

=Edge: Lfor.cond%1%bbentry => Lfor.end%1%d
=Edge.EdgeCond: 
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
10 : not(9) : BOOL
=Edge.StateTo: 
=src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*(  %2 = load i32, i32* @b, align 4, !dbg !30*  %2 = load i32, i32* @b, align 4, !dbg !30))*  %cmp = icmp slt i32 %2, 2, !dbg !32)*((  br i1 %cmp, label %for.body, label %for.end, !dbg !33*  br i1 %cmp, label %for.body, label %for.end, !dbg !33)*  br i1 %cmp, label %for.body, label %for.end, !dbg !33))
tfg_edge_comment end

=Edge: Lfor.end%1%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%9.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
=src.llvm-%cmp2.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
=src.llvm-%conv.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : bool_to_bv(17) : BV:1
19 : 31 { 0x1f +1.0e1025 } : INT
20 : bvzero_ext(18, 19) : BV:32
=src.llvm-%f1.E0%0%d
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-%ret-reg.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : bool_to_bv(17) : BV:1
19 : 31 { 0x1f +1.0e1025 } : INT
20 : bvzero_ext(18, 19) : BV:32
=src.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvadd(1, 5) : BV:32
7 : isgepoffset(6, 4) : BOOL
8 : bvslt(2, 2) : BOOL
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvsign_ext(2, 9) : BV:64
11 : bvzero_ext(3, 9) : BV:64
12 : bvmul(10, 11) : BV:64
13 : 63 { 0x3f +1.0e1025 } : INT
14 : bvextract(12, 13, 9) : BV:32
15 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
16 : eq(14, 15) : BOOL
17 : eq(14, 2) : BOOL
18 : ite(8, 16, 17) : BOOL
19 : 8 { 0x8 +1.0e1025 } : INT
20 : isindexforsize(18, 19) : BOOL
21 : and(7, 20) : BOOL
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(5, 22) : BV:32
24 : bvadd(1, 23) : BV:32
25 : isgepoffset(24, 22) : BOOL
26 : and(21, 25) : BOOL
27 : 4 { 0x4 +1.0e1025 } : INT
28 : islangaligned(24, 27) : BOOL
29 : and(26, 28) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44*  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44)*(  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44*  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44))*(((  %9 = load i32, i32* %f1, align 4, !dbg !44*  %9 = load i32, i32* %f1, align 4, !dbg !44)*  %cmp2 = icmp ne i32 %9, 1, !dbg !45)*  %conv = zext i1 %cmp2 to i32, !dbg !45))*  ret i32 %conv, !dbg !46)
tfg_edge_comment end

=Edge: Lfor.body%1%d => Lfor.cond%1%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.68 : MEMLABEL
118 : mlvar.src.llvm.main.67 : MEMLABEL
119 : select(116, 2, 118, 10, 11, 12) : BV:32
120 : bvadd(119, 26) : BV:32
121 : store(116, 2, 117, 10, 120, 11, 12) : ARRAY[BV:32 -> BV:8]
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
6 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
7 : mlvar.src.llvm.main.34 : MEMLABEL
8 : symbol.2 : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(5, 6, 7, 8, 9, 10) : BV:32
12 : 8 { 0x8 +1.95e129 } : BV:32
13 : bvmul(11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.34 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 8 { 0x8 +1.95e129 } : BV:32
9 : bvmul(7, 8) : BV:32
=src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.34 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.67 : MEMLABEL
118 : select(116, 2, 117, 10, 11, 12) : BV:32
=src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.67 : MEMLABEL
118 : select(116, 2, 117, 10, 11, 12) : BV:32
119 : bvadd(118, 26) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=EdgeAssume.1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(4, 8) : BV:32
10 : isgepoffset(9, 7) : BOOL
11 : bvslt(5, 5) : BOOL
12 : 32 { 0x20 +1.0e1025 } : INT
13 : bvsign_ext(5, 12) : BV:64
14 : bvzero_ext(6, 12) : BV:64
15 : bvmul(13, 14) : BV:64
16 : 63 { 0x3f +1.0e1025 } : INT
17 : bvextract(15, 16, 12) : BV:32
18 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
19 : eq(17, 18) : BOOL
20 : eq(17, 5) : BOOL
21 : ite(11, 19, 20) : BOOL
22 : 16 { 0x10 +1.0e1025 } : INT
23 : isindexforsize(21, 22) : BOOL
24 : and(10, 23) : BOOL
25 : and(3, 24) : BOOL
26 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
27 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
28 : mlvar.src.llvm.main.34 : MEMLABEL
29 : 0 { 0x0 } : BOOL
30 : select(26, 27, 28, 1, 2, 29) : BV:32
31 : 8 { 0x8 +1.95e129 } : BV:32
32 : bvmul(30, 31) : BV:32
33 : bvadd(8, 32) : BV:32
34 : bvadd(4, 33) : BV:32
35 : isgepoffset(34, 32) : BOOL
36 : bvsign_ext(30, 12) : BV:64
37 : bvzero_ext(31, 12) : BV:64
38 : bvmul(36, 37) : BV:64
39 : bvextract(38, 16, 12) : BV:32
40 : eq(39, 5) : BOOL
41 : 8 { 0x8 +1.0e1025 } : INT
42 : isindexforsize(40, 41) : BOOL
43 : and(35, 42) : BOOL
44 : 1 { 0x1 +1.0e1025 } : INT
45 : islangaligned(34, 44) : BOOL
46 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
47 : islangaligned(46, 44) : BOOL
48 : and(45, 47) : BOOL
49 : and(43, 48) : BOOL
50 : and(25, 49) : BOOL
51 : bvmul(5, 31) : BV:32
52 : bvadd(8, 51) : BV:32
53 : bvadd(4, 52) : BV:32
54 : isgepoffset(53, 51) : BOOL
55 : bvmul(13, 37) : BV:64
56 : bvextract(55, 16, 12) : BV:32
57 : eq(56, 5) : BOOL
58 : isindexforsize(57, 41) : BOOL
59 : and(54, 58) : BOOL
60 : islangaligned(53, 44) : BOOL
61 : and(47, 60) : BOOL
62 : and(59, 61) : BOOL
63 : and(24, 62) : BOOL
64 : and(50, 63) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(((((((((((((((((((  %3 = load i32, i32* @b, align 4, !dbg !34*  %3 = load i32, i32* @b, align 4, !dbg !34)*  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36)*(  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36*(((  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36*  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36)*  %4 = bitcast %struct.S* %arrayidx to i8*, !dbg !37)*(  %5 = bitcast %struct.S* %d to i8*, !dbg !37*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37))))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*(((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38)*(  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38*(((  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38*  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38)*  %6 = bitcast %struct.S* %d to i8*, !dbg !38)*(  %7 = bitcast %struct.S* %arrayidx1 to i8*, !dbg !38*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)))))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*(((((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  br label %for.inc, !dbg !39)*  br label %for.inc, !dbg !39)*  br label %for.inc, !dbg !39)*(((  %8 = load i32, i32* @b, align 4, !dbg !40*  %8 = load i32, i32* @b, align 4, !dbg !40)*  %inc = add nsw i32 %8, 1, !dbg !40)*((((  store i32 %inc, i32* @b, align 4, !dbg !40*  br label %for.cond, !dbg !41, !llvm.loop !42)*  br label %for.cond, !dbg !41, !llvm.loop !42)*  br label %for.cond, !dbg !41, !llvm.loop !42)*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge)))))
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=start_pc_precondition.0
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.1
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=graph_with_precondition_done

=Locs in src.llvm.main
=Loc 36 in src.llvm.main.
REGMEM
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 38 in src.llvm.main.
REGMEM
src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=Loc 39 in src.llvm.main.
REGMEM
src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=Loc 40 in src.llvm.main.
REGMEM
src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=Loc 41 in src.llvm.main.
REGMEM
src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=Loc 47 in src.llvm.main.
REGMEM
src.local_alloc_count.=L0%0%d=
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=Loc 51 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=Loc 56 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=Loc 59 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 60 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 61 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 62 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 63 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 64 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 65 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 66 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 76 in src.llvm.main.
REGMEM
src.llvm-%a.Lentry%1%allocaI3
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=Loc 77 in src.llvm.main.
REGMEM
src.llvm-%d.Lentry%2%allocaI3
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=Loc 78 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=Loc 79 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=Loc 80 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=Loc 81 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=Loc 82 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=Loc 83 in src.llvm.main.
REGMEM
src.llvm-%9.E0%0%d
1 : input.src.llvm-%9.E0%0%d : BV:32
=Loc 84 in src.llvm.main.
REGMEM
src.llvm-%cmp2.E0%0%d
1 : input.src.llvm-%cmp2.E0%0%d : BOOL
=Loc 85 in src.llvm.main.
REGMEM
src.llvm-%conv.E0%0%d
1 : input.src.llvm-%conv.E0%0%d : BV:32
=Loc 86 in src.llvm.main.
REGMEM
src.llvm-%f1.E0%0%d
1 : input.src.llvm-%f1.E0%0%d : BV:32
=Loc 87 in src.llvm.main.
REGMEM
src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=Loc 88 in src.llvm.main.
REGMEM
src.llvm-%ret-reg.E0%0%d
1 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=Loc 89 in src.llvm.main.
REGMEM
src.llvm-indir_tgt.E0%0%d
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=Loc 90 in src.llvm.main.
REGMEM
src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=Loc 91 in src.llvm.main.
REGMEM
src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=Loc 92 in src.llvm.main.
REGMEM
src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=Loc 93 in src.llvm.main.
REGMEM
src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=Loc 94 in src.llvm.main.
REGMEM
src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=Loc 95 in src.llvm.main.
REGMEM
src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=Loc 96 in src.llvm.main.
REGMEM
src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=Loc 97 in src.llvm.main.
REGMEM
src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=Loc 98 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 99 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 100 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 101 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=Loc 102 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=Loc 103 in src.llvm.main.
REGMEM
src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=Loc 104 in src.llvm.main.
REGMEM
src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=Loc 105 in src.llvm.main.
REGMEM
src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=Loc 106 in src.llvm.main.
REGMEM
src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=Loc 107 in src.llvm.main.
REGMEM
src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=Loc 108 in src.llvm.main.
REGMEM
src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=Loc 109 in src.llvm.main.
REGMEM
src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=Loc 110 in src.llvm.main.
REGMEM
src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=Loc 111 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 112 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 113 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 114 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=Loc 115 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=Loc 116 in src.llvm.main.
REGMEM
src.llvm-%inc.Lfor.cond%1%bbentry
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=Loc 117 in src.llvm.main.
REGMEM
src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=Loc 118 in src.llvm.main.
REGMEM
src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=Loc 119 in src.llvm.main.
REGMEM
src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=Loc 120 in src.llvm.main.
REGMEM
src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=Loc 121 in src.llvm.main.
REGMEM
src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=Loc 122 in src.llvm.main.
REGMEM
src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=Loc 123 in src.llvm.main.
REGMEM
src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=Loc 124 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=Loc 125 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=Loc 126 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=Loc 127 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=Loc 128 in src.llvm.main.
REGMEM
src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=Loc 129 in src.llvm.main.
REGMEM
src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=Loc 130 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=Loc 131 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=Loc 132 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=Loc 133 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=Loc 134 in src.llvm.main.
REGMEM
src.cur_rounding_mode.Lentry%1%allocaI3
1 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=Loc 135 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 136 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 137 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 138 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 139 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 140 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 141 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 142 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 143 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 144 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 145 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 146 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 147 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 148 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 149 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 150 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 151 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 152 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 153 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 154 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 155 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 156 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 157 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 158 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 159 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.0
=addr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 160 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.1
=addr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 161 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.2
=addr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 162 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.3
=addr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 163 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.4
=addr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 164 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.5
=addr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 165 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.6
=addr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 166 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.7
=addr
1 : symbol.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 167 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.8
=addr
1 : symbol.1 : BV:32
=nbytes
1
=bigendian
false
=Locs end
=Liveness in src.llvm.main
=live locs at L0%0%d
47, 59, 60, 61, 62, 63, 64, 65, 66, 
=live locs at Lentry%1%allocaI3
59, 60, 61, 62, 63, 64, 65, 66, 117, 119, 122, 123, 
=live locs at Lentry%1%allocaI4
119, 122, 135, 136, 137, 138, 139, 140, 141, 142, 
=live locs at Lentry%2%allocaI3
118, 122, 128, 129, 135, 136, 137, 138, 139, 140, 141, 142, 
=live locs at Lentry%2%allocaI4
122, 128, 143, 144, 145, 146, 147, 148, 149, 150, 
=live locs at Lfor.body%1%d
122, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at Lfor.cond%1%bbentry
122, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at Lfor.end%1%d
128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at E0%0%d
85[f], 152, 156, 157, 166, 

=Definedness in src.llvm.main
=loc definedness at L0%0%d
51, 56, 61, 62, 63, 64, 65
=loc definedness at Lentry%1%allocaI3
51, 56, 61, 62, 63, 64, 65, 76, 117, 119, 122, 123, 126, 132, 134
=loc definedness at Lentry%1%allocaI4
51, 56, 61, 62, 63, 64, 65, 76, 117, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142
=loc definedness at Lentry%2%allocaI3
51, 56, 61, 62, 63, 64, 65, 76, 77, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142
=loc definedness at Lentry%2%allocaI4
51, 56, 61, 62, 63, 64, 65, 76, 77, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
=loc definedness at Lfor.body%1%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 90, 91, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at Lfor.cond%1%bbentry
51, 56, 61, 62, 63, 64, 65, 76, 77, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at Lfor.end%1%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 92, 93, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at E0%0%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167

=Branch affecting variable locs in src.llvm.main
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at Lentry%1%allocaI3

=branch affecting variable locs at Lentry%1%allocaI4

=branch affecting variable locs at Lentry%2%allocaI3

=branch affecting variable locs at Lentry%2%allocaI4

=branch affecting variable locs at Lfor.body%1%d
166
=branch affecting variable locs at Lfor.cond%1%bbentry
166
=branch affecting variable locs at Lfor.end%1%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.llvm.main
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 76 {input.src.llvm-%a.Lentry%1%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 117 {input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 119 {input.src.local_alloc_count.Lentry%1%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 122 {input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 123 {input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 126 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 132 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 134 {input.src.cur_rounding_mode.Lentry%1%allocaI3 }
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 124 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 125 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 }
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 127 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 135 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 136 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 137 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 138 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 139 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 140 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 141 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 142 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 77 {input.src.llvm-%d.Lentry%2%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 118 {input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 120 {input.src.local_alloc_count.Lentry%2%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 128 {input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 129 {input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 130 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 131 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 }
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 133 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 143 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 144 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 145 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 146 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 147 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 148 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 149 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 150 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 94 {input.src.llvm-%0.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 95 {input.src.llvm-%1.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 96 {input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry }
1 : symbol.1 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 97 {input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 121 {input.src.local_alloc_count.Lfor.cond%1%bbentry }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 151 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 152 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 153 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 } : BV:8
6 : 1 { 0x1 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 1 { 0x1 +1.11e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : store(8, 2, 3, 10, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
12 : 2 { 0x2 +1.23e129 } : BV:32
13 : bvadd(12, 4) : BV:32
14 : store(11, 2, 3, 13, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
15 : 3 { 0x3 +1.35e129 } : BV:32
16 : bvadd(15, 4) : BV:32
17 : store(14, 2, 3, 16, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
18 : 4 { 0x4 +1.47e129 } : BV:32
19 : bvadd(18, 4) : BV:32
20 : store(17, 2, 3, 19, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
21 : 5 { 0x5 +1.59e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : store(20, 2, 3, 22, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
24 : 6 { 0x6 +1.71e129 } : BV:32
25 : bvadd(24, 4) : BV:32
26 : store(23, 2, 3, 25, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
27 : 7 { 0x7 +1.83e129 } : BV:32
28 : bvadd(27, 4) : BV:32
29 : store(26, 2, 3, 28, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
30 : 8 { 0x8 +1.95e129 } : BV:32
31 : bvadd(30, 4) : BV:32
32 : store(29, 2, 3, 31, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
33 : 9 { 0x9 +1.107e129 } : BV:32
34 : bvadd(33, 4) : BV:32
35 : store(32, 2, 3, 34, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
36 : 10 { 0xa +1.119e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : store(35, 2, 3, 37, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
39 : 11 { 0xb +1.131e129 } : BV:32
40 : bvadd(39, 4) : BV:32
41 : store(38, 2, 3, 40, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
42 : 12 { 0xc +1.143e129 } : BV:32
43 : bvadd(42, 4) : BV:32
44 : store(41, 2, 3, 43, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
45 : 13 { 0xd +1.154e129 } : BV:32
46 : bvadd(45, 4) : BV:32
47 : store(44, 2, 3, 46, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
48 : 14 { 0xe +1.166e129 } : BV:32
49 : bvadd(48, 4) : BV:32
50 : store(47, 2, 3, 49, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
51 : 15 { 0xf +1.178e129 } : BV:32
52 : bvadd(51, 4) : BV:32
53 : store(50, 2, 3, 52, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
54 : memmask(53, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 154 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : memlabel-mem--rodata : MEMLABEL
6 : symbol.1 : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 5, 6, 7, 8) : BV:8
10 : store(1, 2, 3, 4, 9, 7, 8) : ARRAY[BV:32 -> BV:8]
11 : 1 { 0x1 +1.11e129 } : BV:32
12 : bvadd(11, 4) : BV:32
13 : bvadd(6, 11) : BV:32
14 : select(1, 2, 5, 13, 7, 8) : BV:8
15 : store(10, 2, 3, 12, 14, 7, 8) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 4) : BV:32
18 : bvadd(6, 16) : BV:32
19 : select(1, 2, 5, 18, 7, 8) : BV:8
20 : store(15, 2, 3, 17, 19, 7, 8) : ARRAY[BV:32 -> BV:8]
21 : 3 { 0x3 +1.35e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : bvadd(6, 21) : BV:32
24 : select(1, 2, 5, 23, 7, 8) : BV:8
25 : store(20, 2, 3, 22, 24, 7, 8) : ARRAY[BV:32 -> BV:8]
26 : 4 { 0x4 +1.47e129 } : BV:32
27 : bvadd(26, 4) : BV:32
28 : bvadd(6, 26) : BV:32
29 : select(1, 2, 5, 28, 7, 8) : BV:8
30 : store(25, 2, 3, 27, 29, 7, 8) : ARRAY[BV:32 -> BV:8]
31 : 5 { 0x5 +1.59e129 } : BV:32
32 : bvadd(31, 4) : BV:32
33 : bvadd(6, 31) : BV:32
34 : select(1, 2, 5, 33, 7, 8) : BV:8
35 : store(30, 2, 3, 32, 34, 7, 8) : ARRAY[BV:32 -> BV:8]
36 : 6 { 0x6 +1.71e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : bvadd(6, 36) : BV:32
39 : select(1, 2, 5, 38, 7, 8) : BV:8
40 : store(35, 2, 3, 37, 39, 7, 8) : ARRAY[BV:32 -> BV:8]
41 : 7 { 0x7 +1.83e129 } : BV:32
42 : bvadd(41, 4) : BV:32
43 : bvadd(6, 41) : BV:32
44 : select(1, 2, 5, 43, 7, 8) : BV:8
45 : store(40, 2, 3, 42, 44, 7, 8) : ARRAY[BV:32 -> BV:8]
46 : memmask(45, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 155 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 156 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 157 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 158 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 159 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 7), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 160 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 6), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 161 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 5), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 162 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 4), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 163 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 3), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 164 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 2), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 165 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 1), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 166 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false) }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 167 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, symbol.1, 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 97 {input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 98 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 99 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry }
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 100 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 101 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 102 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry }
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 103 {input.src.llvm-%3.Lfor.cond%1%bbentry }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 104 {input.src.llvm-%4.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 105 {input.src.llvm-%5.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 106 {input.src.llvm-%6.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 107 {input.src.llvm-%7.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 108 {input.src.llvm-%8.Lfor.cond%1%bbentry }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 109 {input.src.llvm-%arrayidx.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 110 {input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 111 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 112 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 113 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 114 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 115 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 116 {input.src.llvm-%inc.Lfor.cond%1%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 152 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(1, 2, 3, 4, 6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : store(1, 2, 3, 4, 9, 6, 7) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 153 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : memlabel-mem--symbol.2.0 : MEMLABEL
7 : symbol.2 : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(1, 2, 6, 7, 8, 9) : BV:32
11 : bvmul(5, 10) : BV:32
12 : bvadd(4, 11) : BV:32
13 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
14 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 13, 14, 15, 9) : BV:8
17 : store(1, 2, 3, 12, 16, 15, 9) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 4, 11) : BV:32
20 : bvadd(18, 14) : BV:32
21 : select(1, 2, 13, 20, 15, 9) : BV:8
22 : store(17, 2, 3, 19, 21, 15, 9) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 4, 11) : BV:32
25 : bvadd(23, 14) : BV:32
26 : select(1, 2, 13, 25, 15, 9) : BV:8
27 : store(22, 2, 3, 24, 26, 15, 9) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 4, 11) : BV:32
30 : bvadd(28, 14) : BV:32
31 : select(1, 2, 13, 30, 15, 9) : BV:8
32 : store(27, 2, 3, 29, 31, 15, 9) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 4, 11) : BV:32
35 : bvadd(33, 14) : BV:32
36 : select(1, 2, 13, 35, 15, 9) : BV:8
37 : store(32, 2, 3, 34, 36, 15, 9) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 4, 11) : BV:32
40 : bvadd(38, 14) : BV:32
41 : select(1, 2, 13, 40, 15, 9) : BV:8
42 : store(37, 2, 3, 39, 41, 15, 9) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 4, 11) : BV:32
45 : bvadd(43, 14) : BV:32
46 : select(1, 2, 13, 45, 15, 9) : BV:8
47 : store(42, 2, 3, 44, 46, 15, 9) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 4, 11) : BV:32
50 : bvadd(48, 14) : BV:32
51 : select(1, 2, 13, 50, 15, 9) : BV:8
52 : store(47, 2, 3, 49, 51, 15, 9) : ARRAY[BV:32 -> BV:8]
53 : memmask(52, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 154 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
7 : 8 { 0x8 +1.95e129 } : BV:32
8 : memlabel-mem--symbol.2.0 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(1, 2, 8, 9, 10, 11) : BV:32
13 : bvmul(7, 12) : BV:32
14 : bvadd(6, 13) : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 3, 4, 15, 11) : BV:8
17 : store(1, 2, 5, 14, 16, 15, 11) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 6, 13) : BV:32
20 : bvadd(18, 4) : BV:32
21 : select(1, 2, 3, 20, 15, 11) : BV:8
22 : store(17, 2, 5, 19, 21, 15, 11) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 6, 13) : BV:32
25 : bvadd(23, 4) : BV:32
26 : select(1, 2, 3, 25, 15, 11) : BV:8
27 : store(22, 2, 5, 24, 26, 15, 11) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 6, 13) : BV:32
30 : bvadd(28, 4) : BV:32
31 : select(1, 2, 3, 30, 15, 11) : BV:8
32 : store(27, 2, 5, 29, 31, 15, 11) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 6, 13) : BV:32
35 : bvadd(33, 4) : BV:32
36 : select(1, 2, 3, 35, 15, 11) : BV:8
37 : store(32, 2, 5, 34, 36, 15, 11) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 6, 13) : BV:32
40 : bvadd(38, 4) : BV:32
41 : select(1, 2, 3, 40, 15, 11) : BV:8
42 : store(37, 2, 5, 39, 41, 15, 11) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 6, 13) : BV:32
45 : bvadd(43, 4) : BV:32
46 : select(1, 2, 3, 45, 15, 11) : BV:8
47 : store(42, 2, 5, 44, 46, 15, 11) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 6, 13) : BV:32
50 : bvadd(48, 4) : BV:32
51 : select(1, 2, 3, 50, 15, 11) : BV:8
52 : store(47, 2, 5, 49, 51, 15, 11) : ARRAY[BV:32 -> BV:8]
53 : select(52, 2, 5, 6, 15, 11) : BV:8
54 : store(1, 2, 3, 4, 53, 15, 11) : ARRAY[BV:32 -> BV:8]
55 : bvadd(18, 6) : BV:32
56 : select(52, 2, 5, 55, 15, 11) : BV:8
57 : store(54, 2, 3, 20, 56, 15, 11) : ARRAY[BV:32 -> BV:8]
58 : bvadd(23, 6) : BV:32
59 : select(52, 2, 5, 58, 15, 11) : BV:8
60 : store(57, 2, 3, 25, 59, 15, 11) : ARRAY[BV:32 -> BV:8]
61 : bvadd(28, 6) : BV:32
62 : select(52, 2, 5, 61, 15, 11) : BV:8
63 : store(60, 2, 3, 30, 62, 15, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(33, 6) : BV:32
65 : select(52, 2, 5, 64, 15, 11) : BV:8
66 : store(63, 2, 3, 35, 65, 15, 11) : ARRAY[BV:32 -> BV:8]
67 : bvadd(38, 6) : BV:32
68 : select(52, 2, 5, 67, 15, 11) : BV:8
69 : store(66, 2, 3, 40, 68, 15, 11) : ARRAY[BV:32 -> BV:8]
70 : bvadd(43, 6) : BV:32
71 : select(52, 2, 5, 70, 15, 11) : BV:8
72 : store(69, 2, 3, 45, 71, 15, 11) : ARRAY[BV:32 -> BV:8]
73 : bvadd(48, 6) : BV:32
74 : select(52, 2, 5, 73, 15, 11) : BV:8
75 : store(72, 2, 3, 50, 74, 15, 11) : ARRAY[BV:32 -> BV:8]
76 : memmask(75, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 166 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false) }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry done
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d for loc_id 90 {input.src.llvm-%2.Lfor.body%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d for loc_id 91 {input.src.llvm-%cmp.Lfor.body%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d done
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d for loc_id 92 {input.src.llvm-%2.Lfor.end%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d for loc_id 93 {input.src.llvm-%cmp.Lfor.end%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d done
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 78 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 79 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 80 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 81 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 82 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 83 {input.src.llvm-%9.E0%0%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 84 {input.src.llvm-%cmp2.E0%0%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 85 {input.src.llvm-%conv.E0%0%d }
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 86 {input.src.llvm-%f1.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 87 {input.src.llvm-%hidden-reg.E0%0%d }
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 88 {input.src.llvm-%ret-reg.E0%0%d }
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 89 {input.src.llvm-indir_tgt.E0%0%d }
1 : retaddr_const : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%1%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%1%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%2%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%2%allocaI4:
vacuous mls at Lfor.body%1%d:
vacuous mls at Lfor.cond%1%bbentry:
vacuous mls at Lfor.end%1%d:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at Lentry%1%allocaI3:
non-vacuous mls at Lentry%1%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
non-vacuous mls at Lentry%2%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
non-vacuous mls at Lentry%2%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.body%1%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.cond%1%bbentry: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.end%1%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at E0%0%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in src.llvm.main
=Alias analysis result in src.llvm.main at call-context {*;main}
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 36 (input.src.llvm-%hidden-reg)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 38 (input.src.llvm-callee-save.0)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 39 (input.src.llvm-callee-save.1)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 40 (input.src.llvm-callee-save.2)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 41 (input.src.llvm-callee-save.3)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 47 (input.src.local_alloc_count.=L0%0%d=)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 51 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 56 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 59 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 60 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 61 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 62 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 63 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 64 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 65 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 66 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 76 (input.src.llvm-%a.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 77 (input.src.llvm-%d.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 78 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 79 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 80 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 81 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 82 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 83 (input.src.llvm-%9.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 84 (input.src.llvm-%cmp2.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 85 (input.src.llvm-%conv.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 86 (input.src.llvm-%f1.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 87 (input.src.llvm-%hidden-reg.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 88 (input.src.llvm-%ret-reg.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 89 (input.src.llvm-indir_tgt.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 90 (input.src.llvm-%2.Lfor.body%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 91 (input.src.llvm-%cmp.Lfor.body%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 92 (input.src.llvm-%2.Lfor.end%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 93 (input.src.llvm-%cmp.Lfor.end%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 94 (input.src.llvm-%0.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 95 (input.src.llvm-%1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 96 (input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(symbol.1.1, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 97 (input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 98 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 99 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 100 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 101 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 102 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 103 (input.src.llvm-%3.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 104 (input.src.llvm-%4.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 105 (input.src.llvm-%5.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 106 (input.src.llvm-%6.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 107 (input.src.llvm-%7.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 108 (input.src.llvm-%8.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 109 (input.src.llvm-%arrayidx.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 110 (input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 111 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 112 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 113 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 114 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 115 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 116 (input.src.llvm-%inc.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 117 (input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 118 (input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 119 (input.src.local_alloc_count.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 120 (input.src.local_alloc_count.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 121 (input.src.local_alloc_count.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 122 (input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 123 (input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 124 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 125 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 126 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 127 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 128 (input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 129 (input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 130 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 131 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 132 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 133 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 134 (input.src.cur_rounding_mode.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 135 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 136 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 137 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 138 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 139 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 140 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 141 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 142 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 143 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 144 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 145 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 146 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 147 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 148 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 149 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 150 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 151 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 152 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 153 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 154 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 155 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 156 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 157 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 158 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 159 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 7), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 160 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 6), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 161 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 5), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 162 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 4), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 163 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 3), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 164 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 2), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 165 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 1), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 166 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 167 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, symbol.1, 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis results in src.llvm.main done
=Available expressions in src.llvm.main
=avail_exprs begin
=loc 36
=loc_expr
140620 : input.src.llvm-%hidden-reg : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 38
=loc_expr
140621 : input.src.llvm-callee-save.0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 39
=loc_expr
140623 : input.src.llvm-callee-save.1 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 40
=loc_expr
140625 : input.src.llvm-callee-save.2 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 41
=loc_expr
140627 : input.src.llvm-callee-save.3 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 47
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 51
=loc_expr
140281 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 56
=loc_expr
140283 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 78
=loc_expr
141155 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 79
=loc_expr
141156 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 80
=loc_expr
141157 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 81
=loc_expr
141158 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 82
=loc_expr
141159 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 83
=loc_expr
141160 : input.src.llvm-%9.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=avail_exprs_val.end
=loc 84
=loc_expr
141161 : input.src.llvm-%cmp2.E0%0%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=avail_exprs_val.end
=loc 85
=loc_expr
141146 : input.src.llvm-%conv.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=avail_exprs_val.end
=loc 86
=loc_expr
141162 : input.src.llvm-%f1.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 87
=loc_expr
141163 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=avail_exprs_val.end
=loc 88
=loc_expr
141164 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=avail_exprs_val.end
=loc 89
=loc_expr
141165 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 92
=loc_expr
141168 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=avail_exprs_val.end
=loc 93
=loc_expr
141169 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=avail_exprs_val.end
=loc 94
=loc_expr
141170 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 95
=loc_expr
141171 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 96
=loc_expr
141172 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : symbol.1 : BV:32
=avail_exprs_val.end
=loc 98
=loc_expr
141173 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 101
=loc_expr
141176 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 105
=loc_expr
141180 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 106
=loc_expr
141181 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 107
=loc_expr
141182 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 110
=loc_expr
141185 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 111
=loc_expr
141186 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 112
=loc_expr
141187 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 113
=loc_expr
141188 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 114
=loc_expr
141189 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 115
=loc_expr
141190 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 117
=loc_expr
140960 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.end
=loc 118
=loc_expr
140971 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=avail_exprs_val.end
=loc 119
=loc_expr
140978 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.end
=loc 120
=loc_expr
141057 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=avail_exprs_val.end
=loc 121
=loc_expr
141192 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=avail_exprs_val.end
=loc 123
=loc_expr
140959 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 16 { 0x10 +1.190e129 } : BV:32
=avail_exprs_val.end
=loc 124
=loc_expr
141147 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 125
=loc_expr
141149 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 126
=loc_expr
140963 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 127
=loc_expr
141148 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 129
=loc_expr
140970 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=avail_exprs_val.end
=loc 130
=loc_expr
141151 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 131
=loc_expr
141152 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 132
=loc_expr
140974 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 133
=loc_expr
141150 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 134
=loc_expr
141193 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=avail_exprs_val.end
=loc 135
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141194 : memmask(140967, 140968, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 136
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
141195 : memmask(140967, 140968, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 137
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
141196 : memmask(140967, 140968, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 138
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
141197 : memmask(140967, 140968, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 139
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141198 : memmask(140967, 140968, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 140
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141199 : memmask(140967, 140968, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 141
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141200 : memmask(140967, 140968, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 142
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141201 : memmask(140967, 140968, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 143
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141202 : memmask(140999, 140983, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 144
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
141203 : memmask(140999, 140983, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 145
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
141204 : memmask(140999, 140983, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 146
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
141205 : memmask(140999, 140983, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 147
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141206 : memmask(140999, 140983, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 148
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141207 : memmask(140999, 140983, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 149
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141208 : memmask(140999, 140983, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 150
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141209 : memmask(140999, 140983, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 151
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141210 : memmask(140982, 140983, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 155
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141213 : memmask(140982, 140983, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 156
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141144 : memmask(140982, 140983, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 157
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141145 : memmask(140982, 140983, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 158
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141214 : memmask(140982, 140983, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 159
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140317 : 7 { 0x7 +1.83e129 } : BV:32
140318 : bvadd(258, 140317) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141471 : select(140982, 140983, 140291, 140318, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 160
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140314 : 6 { 0x6 +1.71e129 } : BV:32
140315 : bvadd(258, 140314) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141473 : select(140982, 140983, 140291, 140315, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 161
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140311 : 5 { 0x5 +1.59e129 } : BV:32
140312 : bvadd(258, 140311) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141474 : select(140982, 140983, 140291, 140312, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 162
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140307 : 4 { 0x4 +1.47e129 } : BV:32
140308 : bvadd(258, 140307) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141475 : select(140982, 140983, 140291, 140308, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 163
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140304 : 3 { 0x3 +1.35e129 } : BV:32
140305 : bvadd(258, 140304) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141476 : select(140982, 140983, 140291, 140305, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 164
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140301 : 2 { 0x2 +1.23e129 } : BV:32
140302 : bvadd(258, 140301) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141477 : select(140982, 140983, 140291, 140302, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 165
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140298 : 1 { 0x1 +1.11e129 } : BV:32
140299 : bvadd(258, 140298) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141478 : select(140982, 140983, 140291, 140299, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 167
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141480 : select(140982, 140983, 140291, 258, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.llvm.main
=loc 78 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=loc 78 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 79 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=loc 79 spreled-expr
140307 : 4 { 0x4 +1.47e129 } : BV:32
=loc 81 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=loc 81 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 82 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=loc 82 spreled-expr
140307 : 4 { 0x4 +1.47e129 } : BV:32
=loc 89 expr
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=loc 89 spreled-expr
140267 : retaddr_const : BV:32
=loc 96 expr
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=loc 96 spreled-expr
258 : symbol.1 : BV:32
=loc 98 expr
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 98 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 101 expr
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=loc 101 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 111 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 111 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 112 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 112 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 114 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=loc 114 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 115 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=loc 115 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 117 expr
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=loc 117 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=loc 118 expr
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=loc 118 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
=loc 119 expr
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=loc 119 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=loc 120 expr
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=loc 120 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
=loc 121 expr
1 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=loc 121 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
141460 : increment_count(141268) : COUNT
=loc 123 expr
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=loc 123 spreled-expr
140323 : 16 { 0x10 +1.190e129 } : BV:32
=loc 126 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=loc 126 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 127 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=loc 127 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 129 expr
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=loc 129 spreled-expr
140334 : 8 { 0x8 +1.95e129 } : BV:32
=loc 132 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=loc 132 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 133 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=loc 133 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 134 expr
1 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=loc 134 spreled-expr
140322 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%allocaI3=>Lentry%1%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%allocaI4=>Lentry%2%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%2%allocaI3=>Lentry%2%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%d=>Lfor.cond%1%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%bbentry=>Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%bbentry=>Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
10 : not(9) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>Lentry%1%allocaI3
=src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=src.llvm-%a.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%allocaI3=>Lentry%1%allocaI4
=src.llvm-mem.Lentry%1%allocaI4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%1%allocaI4
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%allocaI4=>Lentry%2%allocaI3
=src.llvm-%d.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%2%allocaI3=>Lentry%2%allocaI4
=src.llvm-mem.Lentry%2%allocaI4
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%2%allocaI4
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : symbol.1 : BV:32
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 } : BV:8
6 : 1 { 0x1 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 1 { 0x1 +1.11e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : store(8, 2, 3, 10, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
12 : 2 { 0x2 +1.23e129 } : BV:32
13 : bvadd(12, 4) : BV:32
14 : store(11, 2, 3, 13, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
15 : 3 { 0x3 +1.35e129 } : BV:32
16 : bvadd(15, 4) : BV:32
17 : store(14, 2, 3, 16, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
18 : 4 { 0x4 +1.47e129 } : BV:32
19 : bvadd(18, 4) : BV:32
20 : store(17, 2, 3, 19, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
21 : 5 { 0x5 +1.59e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : store(20, 2, 3, 22, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
24 : 6 { 0x6 +1.71e129 } : BV:32
25 : bvadd(24, 4) : BV:32
26 : store(23, 2, 3, 25, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
27 : 7 { 0x7 +1.83e129 } : BV:32
28 : bvadd(27, 4) : BV:32
29 : store(26, 2, 3, 28, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
30 : 8 { 0x8 +1.95e129 } : BV:32
31 : bvadd(30, 4) : BV:32
32 : store(29, 2, 3, 31, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
33 : 9 { 0x9 +1.107e129 } : BV:32
34 : bvadd(33, 4) : BV:32
35 : store(32, 2, 3, 34, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
36 : 10 { 0xa +1.119e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : store(35, 2, 3, 37, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
39 : 11 { 0xb +1.131e129 } : BV:32
40 : bvadd(39, 4) : BV:32
41 : store(38, 2, 3, 40, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
42 : 12 { 0xc +1.143e129 } : BV:32
43 : bvadd(42, 4) : BV:32
44 : store(41, 2, 3, 43, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
45 : 13 { 0xd +1.154e129 } : BV:32
46 : bvadd(45, 4) : BV:32
47 : store(44, 2, 3, 46, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
48 : 14 { 0xe +1.166e129 } : BV:32
49 : bvadd(48, 4) : BV:32
50 : store(47, 2, 3, 49, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
51 : 15 { 0xf +1.178e129 } : BV:32
52 : bvadd(51, 4) : BV:32
53 : store(50, 2, 3, 52, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
54 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
55 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
56 : memlabel-mem--rodata : MEMLABEL
57 : symbol.1 : BV:32
58 : select(1, 2, 56, 57, 6, 7) : BV:8
59 : store(53, 2, 54, 55, 58, 6, 7) : ARRAY[BV:32 -> BV:8]
60 : bvadd(9, 55) : BV:32
61 : bvadd(57, 9) : BV:32
62 : select(1, 2, 56, 61, 6, 7) : BV:8
63 : store(59, 2, 54, 60, 62, 6, 7) : ARRAY[BV:32 -> BV:8]
64 : bvadd(12, 55) : BV:32
65 : bvadd(57, 12) : BV:32
66 : select(1, 2, 56, 65, 6, 7) : BV:8
67 : store(63, 2, 54, 64, 66, 6, 7) : ARRAY[BV:32 -> BV:8]
68 : bvadd(15, 55) : BV:32
69 : bvadd(57, 15) : BV:32
70 : select(1, 2, 56, 69, 6, 7) : BV:8
71 : store(67, 2, 54, 68, 70, 6, 7) : ARRAY[BV:32 -> BV:8]
72 : bvadd(18, 55) : BV:32
73 : bvadd(57, 18) : BV:32
74 : select(1, 2, 56, 73, 6, 7) : BV:8
75 : store(71, 2, 54, 72, 74, 6, 7) : ARRAY[BV:32 -> BV:8]
76 : bvadd(21, 55) : BV:32
77 : bvadd(57, 21) : BV:32
78 : select(1, 2, 56, 77, 6, 7) : BV:8
79 : store(75, 2, 54, 76, 78, 6, 7) : ARRAY[BV:32 -> BV:8]
80 : bvadd(24, 55) : BV:32
81 : bvadd(57, 24) : BV:32
82 : select(1, 2, 56, 81, 6, 7) : BV:8
83 : store(79, 2, 54, 80, 82, 6, 7) : ARRAY[BV:32 -> BV:8]
84 : bvadd(27, 55) : BV:32
85 : bvadd(57, 27) : BV:32
86 : select(1, 2, 56, 85, 6, 7) : BV:8
87 : store(83, 2, 54, 84, 86, 6, 7) : ARRAY[BV:32 -> BV:8]
88 : memlabel-mem--symbol.2.0 : MEMLABEL
89 : symbol.2 : BV:32
90 : 0 { 0x0 +1.0e129 } : BV:32
91 : 4 { 0x4 +1.0e1025 } : INT
92 : store(87, 2, 88, 89, 90, 91, 7) : ARRAY[BV:32 -> BV:8]
=src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%d=>Lfor.cond%1%bbentry
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : memlabel-mem--symbol.2.0 : MEMLABEL
7 : symbol.2 : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(1, 2, 6, 7, 8, 9) : BV:32
11 : bvmul(5, 10) : BV:32
12 : bvadd(4, 11) : BV:32
13 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
14 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 13, 14, 15, 9) : BV:8
17 : store(1, 2, 3, 12, 16, 15, 9) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 4, 11) : BV:32
20 : bvadd(18, 14) : BV:32
21 : select(1, 2, 13, 20, 15, 9) : BV:8
22 : store(17, 2, 3, 19, 21, 15, 9) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 4, 11) : BV:32
25 : bvadd(23, 14) : BV:32
26 : select(1, 2, 13, 25, 15, 9) : BV:8
27 : store(22, 2, 3, 24, 26, 15, 9) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 4, 11) : BV:32
30 : bvadd(28, 14) : BV:32
31 : select(1, 2, 13, 30, 15, 9) : BV:8
32 : store(27, 2, 3, 29, 31, 15, 9) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 4, 11) : BV:32
35 : bvadd(33, 14) : BV:32
36 : select(1, 2, 13, 35, 15, 9) : BV:8
37 : store(32, 2, 3, 34, 36, 15, 9) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 4, 11) : BV:32
40 : bvadd(38, 14) : BV:32
41 : select(1, 2, 13, 40, 15, 9) : BV:8
42 : store(37, 2, 3, 39, 41, 15, 9) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 4, 11) : BV:32
45 : bvadd(43, 14) : BV:32
46 : select(1, 2, 13, 45, 15, 9) : BV:8
47 : store(42, 2, 3, 44, 46, 15, 9) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 4, 11) : BV:32
50 : bvadd(48, 14) : BV:32
51 : select(1, 2, 13, 50, 15, 9) : BV:8
52 : store(47, 2, 3, 49, 51, 15, 9) : ARRAY[BV:32 -> BV:8]
53 : select(52, 2, 3, 4, 15, 9) : BV:8
54 : store(52, 2, 13, 14, 53, 15, 9) : ARRAY[BV:32 -> BV:8]
55 : bvadd(18, 4) : BV:32
56 : select(52, 2, 3, 55, 15, 9) : BV:8
57 : store(54, 2, 13, 20, 56, 15, 9) : ARRAY[BV:32 -> BV:8]
58 : bvadd(23, 4) : BV:32
59 : select(52, 2, 3, 58, 15, 9) : BV:8
60 : store(57, 2, 13, 25, 59, 15, 9) : ARRAY[BV:32 -> BV:8]
61 : bvadd(28, 4) : BV:32
62 : select(52, 2, 3, 61, 15, 9) : BV:8
63 : store(60, 2, 13, 30, 62, 15, 9) : ARRAY[BV:32 -> BV:8]
64 : bvadd(33, 4) : BV:32
65 : select(52, 2, 3, 64, 15, 9) : BV:8
66 : store(63, 2, 13, 35, 65, 15, 9) : ARRAY[BV:32 -> BV:8]
67 : bvadd(38, 4) : BV:32
68 : select(52, 2, 3, 67, 15, 9) : BV:8
69 : store(66, 2, 13, 40, 68, 15, 9) : ARRAY[BV:32 -> BV:8]
70 : bvadd(43, 4) : BV:32
71 : select(52, 2, 3, 70, 15, 9) : BV:8
72 : store(69, 2, 13, 45, 71, 15, 9) : ARRAY[BV:32 -> BV:8]
73 : bvadd(48, 4) : BV:32
74 : select(52, 2, 3, 73, 15, 9) : BV:8
75 : store(72, 2, 13, 50, 74, 15, 9) : ARRAY[BV:32 -> BV:8]
76 : bvadd(18, 10) : BV:32
77 : store(75, 2, 6, 7, 76, 8, 9) : ARRAY[BV:32 -> BV:8]
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%inc.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%bbentry=>Lfor.body%1%d
=src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%bbentry=>Lfor.end%1%d
=src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%d=>E0%0%d
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%9.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=src.llvm-%cmp2.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=src.llvm-%conv.E0%0%d
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=src.llvm-%f1.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=src.llvm-%ret-reg.E0%0%d
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=src.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>Lentry%1%allocaI3
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>Lentry%1%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI3=>Lentry%1%allocaI4
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI4=>Lentry%2%allocaI3
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI3=>Lentry%2%allocaI4
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume# 0
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : islangaligned(4, 2) : BOOL
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : islangaligned(6, 2) : BOOL
8 : and(3, 5, 7) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume# 1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : islangaligned(4, 5) : BOOL
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : islangaligned(7, 5) : BOOL
9 : 0 { 0x0 +1.0e129 } : BV:32
10 : isgepoffset(4, 9) : BOOL
11 : 8 { 0x8 +1.95e129 } : BV:32
12 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
13 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
14 : memlabel-mem--symbol.2.0 : MEMLABEL
15 : 0 { 0x0 } : BOOL
16 : select(12, 13, 14, 1, 2, 15) : BV:32
17 : bvmul(11, 16) : BV:32
18 : bvadd(4, 17) : BV:32
19 : isgepoffset(18, 17) : BOOL
20 : 8 { 0x8 +1.0e1025 } : BV:64
21 : 32 { 0x20 +1.0e1025 } : INT
22 : bvsign_ext(16, 21) : BV:64
23 : bvmul(20, 22) : BV:64
24 : 63 { 0x3f +1.0e1025 } : INT
25 : bvextract(23, 24, 21) : BV:32
26 : eq(9, 25) : BOOL
27 : 8 { 0x8 +1.0e1025 } : INT
28 : isindexforsize(26, 27) : BOOL
29 : islangaligned(18, 5) : BOOL
30 : and(3, 6, 8, 10, 19, 28, 29) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry assume# 1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d assume# 0
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : isgepoffset(1, 2) : BOOL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : bvadd(4, 1) : BV:32
6 : isgepoffset(5, 4) : BOOL
7 : 4 { 0x4 +1.0e1025 } : INT
8 : islangaligned(5, 7) : BOOL
9 : and(3, 6, 8) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
70
=String-contents:
C_SYMBOL1 : 0 : \0\0\0\0\1\0\0\0
=Nextpc-map:
=Nextpc-map done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>Lentry%1%allocaI3
tfg.assumes_around_edge at L0%0%d=>Lentry%1%allocaI3 done
tfg.assumes_around_edge at Lentry%1%allocaI3=>Lentry%1%allocaI4
tfg.assumes_around_edge at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
tfg.assumes_around_edge at Lentry%1%allocaI4=>Lentry%2%allocaI3
tfg.assumes_around_edge at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
tfg.assumes_around_edge at Lentry%2%allocaI3=>Lentry%2%allocaI4
tfg.assumes_around_edge at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.ec
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.pred
=Comment
undef-behavioursome.edge.Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=LhsExpr
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140799 : islangaligned(258, 140294) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
141472 : and(140799, 141059, 141060) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.ec
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.pred
=Comment
undef-behaviour-align-assume.edge.Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.ec
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.pred
=Comment
undef-behavioursome.edge.Lfor.body%1%d=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141807 : isgepoffset(140958, 140292) : BOOL
140334 : 8 { 0x8 +1.95e129 } : BV:32
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140295 : 0 { 0x0 } : BOOL
141479 : select(140982, 140983, 140284, 259, 140450, 140295) : BV:32
141542 : bvmul(140334, 141479) : BV:32
141544 : bvadd(140958, 141542) : BV:32
141822 : isgepoffset(141544, 141542) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
141796 : bvsign_ext(141479, 140464) : BV:64
141830 : bvmul(140803, 141796) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
141829 : bvextract(141830, 140468, 140464) : BV:32
141834 : eq(140292, 141829) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
141836 : isindexforsize(141834, 140487) : BOOL
141841 : islangaligned(141544, 140294) : BOOL
141870 : and(140452, 141059, 141060, 141807, 141822, 141836, 141841) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.ec
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.body%1%d=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry done
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.ec
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.cond%1%bbentry=>Lfor.body%1%d
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d done
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.ec
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.cond%1%bbentry=>Lfor.end%1%d
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d done
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.ec
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.pred
=Comment
undef-behavioursome.edge.Lfor.end%1%d=>E0%0%d
=LhsExpr
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
142012 : isgepoffset(140969, 140292) : BOOL
140307 : 4 { 0x4 +1.47e129 } : BV:32
141345 : bvadd(140307, 140969) : BV:32
142017 : isgepoffset(141345, 140307) : BOOL
140450 : 4 { 0x4 +1.0e1025 } : INT
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=suffixpaths for src.llvm.main
=suffixpath_at_L0%0%d for src.llvm.main
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_Lentry%1%allocaI3 for src.llvm.main
=suffixpath_at_Lentry%1%allocaI3.graph_edge_composition
(L0%0%d=>Lentry%1%allocaI3)
=suffixpath_at_Lentry%1%allocaI4 for src.llvm.main
=suffixpath_at_Lentry%1%allocaI4.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*(Lentry%1%allocaI3=>Lentry%1%allocaI4))
=suffixpath_at_Lentry%2%allocaI3 for src.llvm.main
=suffixpath_at_Lentry%2%allocaI3.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*(Lentry%1%allocaI4=>Lentry%2%allocaI3)))
=suffixpath_at_Lentry%2%allocaI4 for src.llvm.main
=suffixpath_at_Lentry%2%allocaI4.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*(Lentry%2%allocaI3=>Lentry%2%allocaI4))))
=suffixpath_at_Lfor.body%1%d for src.llvm.main
=suffixpath_at_Lfor.body%1%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))))))
=suffixpath_at_Lfor.cond%1%bbentry for src.llvm.main
=suffixpath_at_Lfor.cond%1%bbentry.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)))))
=suffixpath_at_Lfor.end%1%d for src.llvm.main
=suffixpath_at_Lfor.end%1%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))
=suffixpath_at_E0%0%d for src.llvm.main
=suffixpath_at_E0%0%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.end%1%d)*(Lfor.end%1%d=>E0%0%d)))))))
=suffixpaths for src.llvm.main done
=PC_to_linename:
=pc
Lentry%3%d
=linename
line 19
=pc
Lentry%4%d
=linename
line 19
=pc
Lentry%5%d
=linename
line 20
=pc
Lentry%6%d
=linename
line 20
=pc
Lentry%7%d
=linename
line 21
=pc
Lentry%8%d
=linename
line 21
=pc
Lfor.body%1%d
=linename
line 22
=pc
Lfor.body%2%d
=linename
line 22
=pc
Lfor.body%3%d
=linename
line 22
=pc
Lfor.body%4%d
=linename
line 22
=pc
Lfor.body%5%d
=linename
line 22
=pc
Lfor.body%6%d
=linename
line 23
=pc
Lfor.body%7%d
=linename
line 23
=pc
Lfor.body%8%d
=linename
line 23
=pc
Lfor.body%9%d
=linename
line 23
=pc
Lfor.body%10%d
=linename
line 24
=pc
Lfor.cond%1%d
=linename
line 21
=pc
Lfor.cond%2%d
=linename
line 21
=pc
Lfor.cond%3%d
=linename
line 21
=pc
Lfor.end%1%d
=linename
line 25
=pc
Lfor.end%2%d
=linename
line 25
=pc
Lfor.end%3%d
=linename
line 25
=pc
Lfor.end%4%d
=linename
line 25
=pc
Lfor.end%5%d
=linename
line 25
=pc
Lfor.inc%1%d
=linename
line 21
=pc
Lfor.inc%2%d
=linename
line 21
=pc
Lfor.inc%3%d
=linename
line 21
=pc
Lfor.inc%4%d
=linename
line 21
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%3%d
=column_name
 at column 12
=pc
Lentry%4%d
=column_name
 at column 12
=pc
Lentry%5%d
=column_name
 at column 12
=pc
Lentry%6%d
=column_name
 at column 12
=pc
Lentry%7%d
=column_name
 at column 10
=pc
Lentry%8%d
=column_name
 at column 8
=pc
Lfor.body%1%d
=column_name
 at column 7
=pc
Lfor.body%2%d
=column_name
 at column 5
=pc
Lfor.body%3%d
=column_name
 at column 12
=pc
Lfor.body%4%d
=column_name
 at column 12
=pc
Lfor.body%5%d
=column_name
 at column 12
=pc
Lfor.body%6%d
=column_name
 at column 9
=pc
Lfor.body%7%d
=column_name
 at column 9
=pc
Lfor.body%8%d
=column_name
 at column 9
=pc
Lfor.body%9%d
=column_name
 at column 9
=pc
Lfor.body%10%d
=column_name
 at column 3
=pc
Lfor.cond%1%d
=column_name
 at column 15
=pc
Lfor.cond%2%d
=column_name
 at column 17
=pc
Lfor.cond%3%d
=column_name
 at column 3
=pc
Lfor.end%1%d
=column_name
 at column 12
=pc
Lfor.end%2%d
=column_name
 at column 12
=pc
Lfor.end%3%d
=column_name
 at column 15
=pc
Lfor.end%4%d
=column_name
 at column 15
=pc
Lfor.end%5%d
=column_name
 at column 3
=pc
Lfor.inc%1%d
=column_name
 at column 23
=pc
Lfor.inc%2%d
=column_name
 at column 23
=pc
Lfor.inc%3%d
=column_name
 at column 23
=pc
Lfor.inc%4%d
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%3%d
=line_and_column
line 19
=pc
Lentry%4%d
=line_and_column
line 19
=pc
Lentry%5%d
=line_and_column
line 20
=pc
Lentry%6%d
=line_and_column
line 20
=pc
Lentry%7%d
=line_and_column
(line 21 at column 10)
=pc
Lentry%8%d
=line_and_column
(line 21 at column 8)
=pc
Lfor.body%1%d
=line_and_column
(line 22 at column 7)
=pc
Lfor.body%2%d
=line_and_column
(line 22 at column 5)
=pc
Lfor.body%3%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%4%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%5%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%6%d
=line_and_column
line 23
=pc
Lfor.body%7%d
=line_and_column
line 23
=pc
Lfor.body%8%d
=line_and_column
line 23
=pc
Lfor.body%9%d
=line_and_column
line 23
=pc
Lfor.body%10%d
=line_and_column
line 24
=pc
Lfor.cond%1%d
=line_and_column
(line 21 at column 15)
=pc
Lfor.cond%2%d
=line_and_column
(line 21 at column 17)
=pc
Lfor.cond%3%d
=line_and_column
(line 21 at column 3)
=pc
Lfor.end%1%d
=line_and_column
(line 25 at column 12)
=pc
Lfor.end%2%d
=line_and_column
(line 25 at column 12)
=pc
Lfor.end%3%d
=line_and_column
(line 25 at column 15)
=pc
Lfor.end%4%d
=line_and_column
(line 25 at column 15)
=pc
Lfor.end%5%d
=line_and_column
(line 25 at column 3)
=pc
Lfor.inc%1%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%2%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%3%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%4%d
=line_and_column
(line 21 at column 3)
=PC_to_line_and_column done
=SourceToLLVMVarnames:
a : src.llvm-%a
d : src.llvm-%d
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.local_size.=Lentry%1%d= : L0%0%d : 16
input.src.local_alloc_count.=Lentry%1%d= : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.local_size.=Lentry%2%d= : L0%0%d : 8
input.src.local_alloc_count.=Lentry%2%d= : L0%0%d : input.src.local_alloc_count
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : L0%0%d : (input.src.local./*___y___main__x__=Lentry%1%d=/ + 15)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : L0%0%d : (input.src.local./*___y___main__x__=Lentry%2%d=/ + 7)
input.src.llvm-%conv : L0%0%d : 0..input.src.llvm-%cmp2
src.llvm-%a : Lentry%3%bbentry : a
src.llvm-%d : Lentry%5%bbentry : d
input.src.local_alloc_count.=L0%0%d= : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr : L0%0%d : @__const.main.d
input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset : L0%0%d : input.src.llvm-%a
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : L0%0%d : true
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : L0%0%d : true
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset : L0%0%d : 4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset : L0%0%d : (input.src.llvm-%d + 4)
input.src.llvm-%9 : L0%0%d : SRCMEM[input.src.llvm-%f1]_4
input.src.llvm-%cmp2 : L0%0%d : not(1 = input.src.llvm-%9)
input.src.llvm-%hidden-reg : L0%0%d : input.src.llvm-%hidden-reg
input.src.llvm-callee-save.0 : L0%0%d : input.src.llvm-callee-save.0
input.src.llvm-callee-save.1 : L0%0%d : input.src.llvm-callee-save.1
input.src.llvm-callee-save.2 : L0%0%d : input.src.llvm-callee-save.2
input.src.llvm-callee-save.3 : L0%0%d : input.src.llvm-callee-save.3
input.src.llvm-%a : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/
input.src.llvm-%d : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/
input.src.llvm-%0 : L0%0%d : input.src.llvm-%a
input.src.llvm-%1 : L0%0%d : input.src.llvm-%d
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%arrayidx : L0%0%d : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset
input.src.llvm-%4 : L0%0%d : input.src.llvm-%arrayidx
input.src.llvm-%5 : L0%0%d : input.src.llvm-%d
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset : L0%0%d : 0
input.src.llvm-%arrayidx1 : L0%0%d : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset
input.src.llvm-%6 : L0%0%d : input.src.llvm-%d
input.src.llvm-%7 : L0%0%d : input.src.llvm-%arrayidx1
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset : L0%0%d : 4
input.src.llvm-%f1 : L0%0%d : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset
input.src.llvm-%ret-reg : L0%0%d : input.src.llvm-%conv
input.src.llvm-indir_tgt : L0%0%d : return-address
input.src.cur_rounding_mode : L0%0%d : ROUND_to_nearest_ties_to_even
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : L0%0%d : 8
input.src.local_alloc_count.Lentry%2%allocaI3 : L0%0%d : increment_count(input.src.local_alloc_count.=L0%0%d=)
input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : L0%0%d : increment_count(input.src.local_alloc_count.=L0%0%d=)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : L0%0%d : (7 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : L0%0%d : false
input.src.local_alloc_count.Lentry%1%allocaI3 : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : L0%0%d : 16
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : L0%0%d : false
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : L0%0%d : (15 + input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : L0%0%d : 0
input.src.llvm-%2.Lfor.end%1%d : L0%0%d : input.src.llvm-mem.Lfor.cond%1%bbentry[@b]_4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : L0%0%d : 4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : L0%0%d : (4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : L0%0%d : 0
input.src.llvm-%cmp.Lfor.end%1%d : L0%0%d : (input.src.llvm-mem.Lfor.cond%1%bbentry[@b]_4 <_s 2)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : L0%0%d : 4
input.src.llvm-%0.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%9.E0%0%d : L0%0%d : input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4
input.src.llvm-%cmp2.E0%0%d : L0%0%d : not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%1.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : L0%0%d : @__const.main.d
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%f1.E0%0%d : L0%0%d : (4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.llvm-%hidden-reg.E0%0%d : L0%0%d : bvxor(input.src.llvm-%hidden-reg, input.src.llvm-callee-save.0, input.src.llvm-callee-save.1, input.src.llvm-callee-save.2, input.src.llvm-callee-save.3)
input.src.llvm-%ret-reg.E0%0%d : L0%0%d : 0..not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-indir_tgt.E0%0%d : L0%0%d : return-address
input.src.llvm-%5.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%6.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%7.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%conv.E0%0%d : L0%0%d : 0..not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.local_alloc_count.Lfor.cond%1%bbentry : L0%0%d : increment_count(increment_count(input.src.local_alloc_count.=L0%0%d=))
input.src.cur_rounding_mode.Lentry%1%allocaI3 : L0%0%d : ROUND_to_nearest_ties_to_even
=InputLLVMToSourceVarnames done
=PotentialSCEVRelations:
=src.llvm-%a
=src.llvm-%a loop pc: L0%0%d
=src.llvm-%a val_scevb
=src.llvm-%a val_scevb scev
=src.llvm-%a val_scevb scev loop: L0%0%d
=src.llvm-%a val_scevb scev scev_overflow_flag: 
=src.llvm-%a val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%a val_scevb scev scev_expr done
=src.llvm-%a val_scevb unsigned lower bound: 32:0
=src.llvm-%a val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%a val_scevb signed lower bound: 32:2147483648
=src.llvm-%a val_scevb signed upper bound: 32:2147483645
=src.llvm-%a atuse_scevb
=src.llvm-%a atuse_scevb scev
=src.llvm-%a atuse_scevb scev loop: L0%0%d
=src.llvm-%a atuse_scevb scev scev_overflow_flag: 
=src.llvm-%a atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%a atuse_scevb scev scev_expr done
=src.llvm-%a atuse_scevb unsigned lower bound: 32:0
=src.llvm-%a atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%a atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%a atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%a atexit_scev nullptr
=src.llvm-%d
=src.llvm-%d loop pc: L0%0%d
=src.llvm-%d val_scevb
=src.llvm-%d val_scevb scev
=src.llvm-%d val_scevb scev loop: L0%0%d
=src.llvm-%d val_scevb scev scev_overflow_flag: 
=src.llvm-%d val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%d val_scevb scev scev_expr done
=src.llvm-%d val_scevb unsigned lower bound: 32:0
=src.llvm-%d val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%d val_scevb signed lower bound: 32:2147483648
=src.llvm-%d val_scevb signed upper bound: 32:2147483645
=src.llvm-%d atuse_scevb
=src.llvm-%d atuse_scevb scev
=src.llvm-%d atuse_scevb scev loop: L0%0%d
=src.llvm-%d atuse_scevb scev scev_overflow_flag: 
=src.llvm-%d atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%d atuse_scevb scev scev_expr done
=src.llvm-%d atuse_scevb unsigned lower bound: 32:0
=src.llvm-%d atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%d atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%d atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%d atexit_scev nullptr
=src.llvm-%0
=src.llvm-%0 loop pc: L0%0%d
=src.llvm-%0 val_scevb
=src.llvm-%0 val_scevb scev
=src.llvm-%0 val_scevb scev loop: L0%0%d
=src.llvm-%0 val_scevb scev scev_overflow_flag: 
=src.llvm-%0 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%0 val_scevb scev scev_expr done
=src.llvm-%0 val_scevb unsigned lower bound: 32:0
=src.llvm-%0 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%0 val_scevb signed lower bound: 32:2147483648
=src.llvm-%0 val_scevb signed upper bound: 32:2147483645
=src.llvm-%0 atuse_scevb
=src.llvm-%0 atuse_scevb scev
=src.llvm-%0 atuse_scevb scev loop: L0%0%d
=src.llvm-%0 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%0 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%0 atuse_scevb scev scev_expr done
=src.llvm-%0 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%0 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%0 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%0 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%0 atexit_scev nullptr
=src.llvm-%1
=src.llvm-%1 loop pc: L0%0%d
=src.llvm-%1 val_scevb
=src.llvm-%1 val_scevb scev
=src.llvm-%1 val_scevb scev loop: L0%0%d
=src.llvm-%1 val_scevb scev scev_overflow_flag: 
=src.llvm-%1 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%1 val_scevb scev scev_expr done
=src.llvm-%1 val_scevb unsigned lower bound: 32:0
=src.llvm-%1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%1 val_scevb signed lower bound: 32:2147483648
=src.llvm-%1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%1 atuse_scevb
=src.llvm-%1 atuse_scevb scev
=src.llvm-%1 atuse_scevb scev loop: L0%0%d
=src.llvm-%1 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%1 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%1 atuse_scevb scev scev_expr done
=src.llvm-%1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%1 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%1 atexit_scev nullptr
=src.llvm-%2
=src.llvm-%2 loop pc: Lfor.cond%1%d
=src.llvm-%2 val_scevb
=src.llvm-%2 val_scevb scev
=src.llvm-%2 val_scevb scev loop: L0%0%d
=src.llvm-%2 val_scevb scev scev_overflow_flag: 
=src.llvm-%2 val_scevb scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 val_scevb scev scev_expr done
=src.llvm-%2 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%2 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%2 val_scevb signed lower bound: 32:4294967295
=src.llvm-%2 val_scevb signed upper bound: 32:4294967295
=src.llvm-%2 atuse_scevb
=src.llvm-%2 atuse_scevb scev
=src.llvm-%2 atuse_scevb scev loop: L0%0%d
=src.llvm-%2 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%2 atuse_scevb scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 atuse_scevb scev scev_expr done
=src.llvm-%2 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%2 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%2 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%2 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%2 atexit_scev
=src.llvm-%2 atexit_scev loop: L0%0%d
=src.llvm-%2 atexit_scev scev_overflow_flag: 
=src.llvm-%2 atexit_scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 atexit_scev scev_expr done
=src.llvm-%3
=src.llvm-%3 loop pc: Lfor.cond%1%d
=src.llvm-%3 val_scevb
=src.llvm-%3 val_scevb scev
=src.llvm-%3 val_scevb scev loop: L0%0%d
=src.llvm-%3 val_scevb scev scev_overflow_flag: 
=src.llvm-%3 val_scevb scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 val_scevb scev scev_expr done
=src.llvm-%3 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%3 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%3 val_scevb signed lower bound: 32:4294967295
=src.llvm-%3 val_scevb signed upper bound: 32:4294967295
=src.llvm-%3 atuse_scevb
=src.llvm-%3 atuse_scevb scev
=src.llvm-%3 atuse_scevb scev loop: L0%0%d
=src.llvm-%3 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%3 atuse_scevb scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 atuse_scevb scev scev_expr done
=src.llvm-%3 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%3 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%3 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%3 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%3 atexit_scev
=src.llvm-%3 atexit_scev loop: L0%0%d
=src.llvm-%3 atexit_scev scev_overflow_flag: 
=src.llvm-%3 atexit_scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 atexit_scev scev_expr done
=src.llvm-%arrayidx
=src.llvm-%arrayidx loop pc: Lfor.cond%1%d
=src.llvm-%arrayidx val_scevb
=src.llvm-%arrayidx val_scevb scev
=src.llvm-%arrayidx val_scevb scev loop: L0%0%d
=src.llvm-%arrayidx val_scevb scev scev_overflow_flag: nsw
=src.llvm-%arrayidx val_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx val_scevb scev scev_expr done
=src.llvm-%arrayidx val_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx val_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx val_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx atuse_scevb
=src.llvm-%arrayidx atuse_scevb scev
=src.llvm-%arrayidx atuse_scevb scev loop: L0%0%d
=src.llvm-%arrayidx atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%arrayidx atuse_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx atuse_scevb scev scev_expr done
=src.llvm-%arrayidx atuse_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx atexit_scev
=src.llvm-%arrayidx atexit_scev loop: L0%0%d
=src.llvm-%arrayidx atexit_scev scev_overflow_flag: nsw
=src.llvm-%arrayidx atexit_scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx atexit_scev scev_expr done
=src.llvm-%4
=src.llvm-%4 loop pc: Lfor.cond%1%d
=src.llvm-%4 val_scevb
=src.llvm-%4 val_scevb scev
=src.llvm-%4 val_scevb scev loop: L0%0%d
=src.llvm-%4 val_scevb scev scev_overflow_flag: nsw
=src.llvm-%4 val_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 val_scevb scev scev_expr done
=src.llvm-%4 val_scevb unsigned lower bound: 32:0
=src.llvm-%4 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%4 val_scevb signed lower bound: 32:2147483648
=src.llvm-%4 val_scevb signed upper bound: 32:2147483645
=src.llvm-%4 atuse_scevb
=src.llvm-%4 atuse_scevb scev
=src.llvm-%4 atuse_scevb scev loop: L0%0%d
=src.llvm-%4 atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%4 atuse_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 atuse_scevb scev scev_expr done
=src.llvm-%4 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%4 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%4 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%4 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%4 atexit_scev
=src.llvm-%4 atexit_scev loop: L0%0%d
=src.llvm-%4 atexit_scev scev_overflow_flag: nsw
=src.llvm-%4 atexit_scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 atexit_scev scev_expr done
=src.llvm-%5
=src.llvm-%5 loop pc: Lfor.cond%1%d
=src.llvm-%5 val_scevb
=src.llvm-%5 val_scevb scev
=src.llvm-%5 val_scevb scev loop: L0%0%d
=src.llvm-%5 val_scevb scev scev_overflow_flag: 
=src.llvm-%5 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 val_scevb scev scev_expr done
=src.llvm-%5 val_scevb unsigned lower bound: 32:0
=src.llvm-%5 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%5 val_scevb signed lower bound: 32:2147483648
=src.llvm-%5 val_scevb signed upper bound: 32:2147483645
=src.llvm-%5 atuse_scevb
=src.llvm-%5 atuse_scevb scev
=src.llvm-%5 atuse_scevb scev loop: L0%0%d
=src.llvm-%5 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%5 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 atuse_scevb scev scev_expr done
=src.llvm-%5 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%5 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%5 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%5 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%5 atexit_scev
=src.llvm-%5 atexit_scev loop: L0%0%d
=src.llvm-%5 atexit_scev scev_overflow_flag: 
=src.llvm-%5 atexit_scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 atexit_scev scev_expr done
=src.llvm-%arrayidx1
=src.llvm-%arrayidx1 loop pc: Lfor.cond%1%d
=src.llvm-%arrayidx1 val_scevb
=src.llvm-%arrayidx1 val_scevb scev
=src.llvm-%arrayidx1 val_scevb scev loop: L0%0%d
=src.llvm-%arrayidx1 val_scevb scev scev_overflow_flag: 
=src.llvm-%arrayidx1 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 val_scevb scev scev_expr done
=src.llvm-%arrayidx1 val_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx1 val_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx1 atuse_scevb
=src.llvm-%arrayidx1 atuse_scevb scev
=src.llvm-%arrayidx1 atuse_scevb scev loop: L0%0%d
=src.llvm-%arrayidx1 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%arrayidx1 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 atuse_scevb scev scev_expr done
=src.llvm-%arrayidx1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx1 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx1 atexit_scev
=src.llvm-%arrayidx1 atexit_scev loop: L0%0%d
=src.llvm-%arrayidx1 atexit_scev scev_overflow_flag: 
=src.llvm-%arrayidx1 atexit_scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 atexit_scev scev_expr done
=src.llvm-%6
=src.llvm-%6 loop pc: Lfor.cond%1%d
=src.llvm-%6 val_scevb
=src.llvm-%6 val_scevb scev
=src.llvm-%6 val_scevb scev loop: L0%0%d
=src.llvm-%6 val_scevb scev scev_overflow_flag: 
=src.llvm-%6 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 val_scevb scev scev_expr done
=src.llvm-%6 val_scevb unsigned lower bound: 32:0
=src.llvm-%6 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%6 val_scevb signed lower bound: 32:2147483648
=src.llvm-%6 val_scevb signed upper bound: 32:2147483645
=src.llvm-%6 atuse_scevb
=src.llvm-%6 atuse_scevb scev
=src.llvm-%6 atuse_scevb scev loop: L0%0%d
=src.llvm-%6 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%6 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 atuse_scevb scev scev_expr done
=src.llvm-%6 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%6 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%6 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%6 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%6 atexit_scev
=src.llvm-%6 atexit_scev loop: L0%0%d
=src.llvm-%6 atexit_scev scev_overflow_flag: 
=src.llvm-%6 atexit_scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 atexit_scev scev_expr done
=src.llvm-%7
=src.llvm-%7 loop pc: Lfor.cond%1%d
=src.llvm-%7 val_scevb
=src.llvm-%7 val_scevb scev
=src.llvm-%7 val_scevb scev loop: L0%0%d
=src.llvm-%7 val_scevb scev scev_overflow_flag: 
=src.llvm-%7 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 val_scevb scev scev_expr done
=src.llvm-%7 val_scevb unsigned lower bound: 32:0
=src.llvm-%7 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%7 val_scevb signed lower bound: 32:2147483648
=src.llvm-%7 val_scevb signed upper bound: 32:2147483645
=src.llvm-%7 atuse_scevb
=src.llvm-%7 atuse_scevb scev
=src.llvm-%7 atuse_scevb scev loop: L0%0%d
=src.llvm-%7 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%7 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 atuse_scevb scev scev_expr done
=src.llvm-%7 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%7 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%7 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%7 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%7 atexit_scev
=src.llvm-%7 atexit_scev loop: L0%0%d
=src.llvm-%7 atexit_scev scev_overflow_flag: 
=src.llvm-%7 atexit_scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 atexit_scev scev_expr done
=src.llvm-%8
=src.llvm-%8 loop pc: Lfor.cond%1%d
=src.llvm-%8 val_scevb
=src.llvm-%8 val_scevb scev
=src.llvm-%8 val_scevb scev loop: L0%0%d
=src.llvm-%8 val_scevb scev scev_overflow_flag: 
=src.llvm-%8 val_scevb scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 val_scevb scev scev_expr done
=src.llvm-%8 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%8 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%8 val_scevb signed lower bound: 32:4294967295
=src.llvm-%8 val_scevb signed upper bound: 32:4294967295
=src.llvm-%8 atuse_scevb
=src.llvm-%8 atuse_scevb scev
=src.llvm-%8 atuse_scevb scev loop: L0%0%d
=src.llvm-%8 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%8 atuse_scevb scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 atuse_scevb scev scev_expr done
=src.llvm-%8 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%8 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%8 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%8 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%8 atexit_scev
=src.llvm-%8 atexit_scev loop: L0%0%d
=src.llvm-%8 atexit_scev scev_overflow_flag: 
=src.llvm-%8 atexit_scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 atexit_scev scev_expr done
=src.llvm-%inc
=src.llvm-%inc loop pc: Lfor.cond%1%d
=src.llvm-%inc val_scevb
=src.llvm-%inc val_scevb scev
=src.llvm-%inc val_scevb scev loop: L0%0%d
=src.llvm-%inc val_scevb scev scev_overflow_flag: 
=src.llvm-%inc val_scevb scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc val_scevb scev scev_expr done
=src.llvm-%inc val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%inc val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%inc val_scevb signed lower bound: 32:4294967295
=src.llvm-%inc val_scevb signed upper bound: 32:4294967295
=src.llvm-%inc atuse_scevb
=src.llvm-%inc atuse_scevb scev
=src.llvm-%inc atuse_scevb scev loop: L0%0%d
=src.llvm-%inc atuse_scevb scev scev_overflow_flag: 
=src.llvm-%inc atuse_scevb scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc atuse_scevb scev scev_expr done
=src.llvm-%inc atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%inc atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%inc atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%inc atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%inc atexit_scev
=src.llvm-%inc atexit_scev loop: L0%0%d
=src.llvm-%inc atexit_scev scev_overflow_flag: 
=src.llvm-%inc atexit_scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc atexit_scev scev_expr done
=src.llvm-%f1
=src.llvm-%f1 loop pc: L0%0%d
=src.llvm-%f1 val_scevb
=src.llvm-%f1 val_scevb scev
=src.llvm-%f1 val_scevb scev loop: L0%0%d
=src.llvm-%f1 val_scevb scev scev_overflow_flag: nsw
=src.llvm-%f1 val_scevb scev scev_expr
11 : 00000000000000000000000000000100b
2 : input.src.llvm-%d : BV32
12 : scev_op_add(11, 2) : loop L0%0%d : nsw
=src.llvm-%f1 val_scevb scev scev_expr done
=src.llvm-%f1 val_scevb unsigned lower bound: 32:0
=src.llvm-%f1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%f1 val_scevb signed lower bound: 32:2147483652
=src.llvm-%f1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%f1 atuse_scevb
=src.llvm-%f1 atuse_scevb scev
=src.llvm-%f1 atuse_scevb scev loop: L0%0%d
=src.llvm-%f1 atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%f1 atuse_scevb scev scev_expr
11 : 00000000000000000000000000000100b
2 : input.src.llvm-%d : BV32
12 : scev_op_add(11, 2) : loop L0%0%d : nsw
=src.llvm-%f1 atuse_scevb scev scev_expr done
=src.llvm-%f1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%f1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%f1 atuse_scevb signed lower bound: 32:2147483652
=src.llvm-%f1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%f1 atexit_scev nullptr
=src.llvm-%9
=src.llvm-%9 loop pc: L0%0%d
=src.llvm-%9 val_scevb
=src.llvm-%9 val_scevb scev
=src.llvm-%9 val_scevb scev loop: L0%0%d
=src.llvm-%9 val_scevb scev scev_overflow_flag: 
=src.llvm-%9 val_scevb scev scev_expr
13 : input.src.llvm-%9 : BV32
=src.llvm-%9 val_scevb scev scev_expr done
=src.llvm-%9 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%9 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%9 val_scevb signed lower bound: 32:4294967295
=src.llvm-%9 val_scevb signed upper bound: 32:4294967295
=src.llvm-%9 atuse_scevb
=src.llvm-%9 atuse_scevb scev
=src.llvm-%9 atuse_scevb scev loop: L0%0%d
=src.llvm-%9 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%9 atuse_scevb scev scev_expr
13 : input.src.llvm-%9 : BV32
=src.llvm-%9 atuse_scevb scev scev_expr done
=src.llvm-%9 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%9 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%9 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%9 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%9 atexit_scev nullptr
=src.llvm-%conv
=src.llvm-%conv loop pc: L0%0%d
=src.llvm-%conv val_scevb
=src.llvm-%conv val_scevb scev
=src.llvm-%conv val_scevb scev loop: L0%0%d
=src.llvm-%conv val_scevb scev scev_overflow_flag: 
=src.llvm-%conv val_scevb scev scev_expr
14 : input.src.llvm-%cmp2 : BV1
15 : scev_op_zeroext(14) : loop L0%0%d : 
=src.llvm-%conv val_scevb scev scev_expr done
=src.llvm-%conv val_scevb unsigned lower bound: 32:0
=src.llvm-%conv val_scevb unsigned upper bound: 32:2
=src.llvm-%conv val_scevb signed lower bound: 32:0
=src.llvm-%conv val_scevb signed upper bound: 32:2
=src.llvm-%conv atuse_scevb
=src.llvm-%conv atuse_scevb scev
=src.llvm-%conv atuse_scevb scev loop: L0%0%d
=src.llvm-%conv atuse_scevb scev scev_overflow_flag: 
=src.llvm-%conv atuse_scevb scev scev_expr
14 : input.src.llvm-%cmp2 : BV1
15 : scev_op_zeroext(14) : loop L0%0%d : 
=src.llvm-%conv atuse_scevb scev scev_expr done
=src.llvm-%conv atuse_scevb unsigned lower bound: 32:0
=src.llvm-%conv atuse_scevb unsigned upper bound: 32:2
=src.llvm-%conv atuse_scevb signed lower bound: 32:0
=src.llvm-%conv atuse_scevb signed upper bound: 32:2
=src.llvm-%conv atexit_scev nullptr
=PotentialSCEVRelations done
=ReachingDefinitionsForLocs:
=Reaching Definitions at L0%0%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns done
=Reaching Definitions at Lentry%1%allocaI3
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 11 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 12 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 12 edges done
=reaching defns done
=Reaching Definitions at Lentry%1%allocaI4
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 11 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 13 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 15 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 15 edges done
=reaching defns done
=Reaching Definitions at Lentry%2%allocaI3
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 17 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 18 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 18 edges done
=reaching defns done
=Reaching Definitions at Lentry%2%allocaI4
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 17 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 20 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 21 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 21 edges done
=reaching defns done
=Reaching Definitions at Lfor.body%1%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 25 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 26 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 47 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 48 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns done
=Reaching Definitions at Lfor.cond%1%bbentry
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 25 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 26 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 47 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 48 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns done
=Reaching Definitions at Lfor.end%1%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=reaching defns for expr 25 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=reaching defns for expr 26 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 47 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 48 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns for expr 56
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 56 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 56 edges done
=reaching defns for expr 57
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 57 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 57 edges done
=reaching defns done
=Reaching Definitions at E0%0%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.llvm-%conv.E0%0%d : BV:32
=reaching defns for expr 15 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 18 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 21 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 22 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 23 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=reaching defns for expr 24 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=reaching defns for expr 25 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=reaching defns for expr 26 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=reaching defns for expr 27 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=reaching defns for expr 28 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%9.E0%0%d : BV:32
=reaching defns for expr 29 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%cmp2.E0%0%d : BOOL
=reaching defns for expr 30 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%f1.E0%0%d : BV:32
=reaching defns for expr 31 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=reaching defns for expr 32 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=reaching defns for expr 33 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=reaching defns for expr 34 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 35 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 36 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=reaching defns for expr 37 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=reaching defns for expr 38 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 47 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 48 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 49 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 50 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 51 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 52 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 53 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 54 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 55 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns for expr 56
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 56 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 56 edges done
=reaching defns for expr 57
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 57 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 57 edges done
=reaching defns for expr 58
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 58 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 58 edges done
=reaching defns for expr 59
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 59 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 59 edges done
=reaching defns for expr 60
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 60 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 60 edges done
=reaching defns for expr 61
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 61 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 61 edges done
=reaching defns for expr 62
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 62 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 62 edges done
=reaching defns for expr 63
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 63 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 63 edges done
=reaching defns for expr 64
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 64 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 64 edges done
=reaching defns for expr 65
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 65 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 65 edges done
=reaching defns for expr 66
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 66 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 66 edges done
=reaching defns for expr 67
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 67 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 67 edges done
=reaching defns for expr 68
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 68 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 68 edges done
=reaching defns for expr 69
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 69 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 69 edges done
=reaching defns done
=ReachingDefinitionsForLocs done
=TFG_LLVM_done
=TFG_SSA_done
=dst_tfg
=TFG_SSA:
=TFG:
=Nodes: L0%0%d L0%1%spver L0%2%d L0%2%spver L0%2%allocaI1 L0%2%allocaI2 L0%2%allocaI3 L0%2%allocaI4 L1%1%d L3%1%spver L4%1%d E0%0%d
=Edges:
L0%0%d => L0%1%spver
L0%1%spver => L0%2%d
L0%2%d => L0%2%spver
L1%1%d => L3%1%spver
L3%1%spver => L4%1%d
L4%1%d => E0%0%d
L0%2%allocaI1 => L0%2%allocaI2
L0%2%allocaI2 => L1%1%d
L0%2%spver => L0%2%allocaI3
L0%2%allocaI3 => L0%2%allocaI4
L0%2%allocaI4 => L0%2%allocaI1
=graph done
=is_ssa_graph:
1
=StartState:
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:79
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:79
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:79
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:79
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:79
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:79
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:79
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:79
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:3
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:2
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:16
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:48
=dst.exreg.23.0
1 : input.dst.exreg.23.0 : BV:11
=dst.exreg.24.0
1 : input.dst.exreg.24.0 : BV:2
=dst.exreg.25.0
1 : input.dst.exreg.25.0 : BV:1
=dst.exreg.26.0
1 : input.dst.exreg.26.0 : BV:1
=dst.exreg.27.0
1 : input.dst.exreg.27.0 : BV:1
=dst.exreg.28.0
1 : input.dst.exreg.28.0 : BV:1
=dst.exreg.29.0
1 : input.dst.exreg.29.0 : BV:16
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.fpstack
1 : input.dst.fpstack : ARRAY[BV:3 -> FLOAT:79]
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=state_end
=PC to var-version map at L0%0%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=version for dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=var-version done
=PC to var-version map at L0%1%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=var-version done
=PC to var-version map at L0%2%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI1
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI2
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI3
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI4
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L1%1%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=var-version done
=PC to var-version map at L3%1%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=var-version done
=PC to var-version map at L4%1%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=var-version done
=PC to var-version map at E0%0%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=var-version done
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d
=Output: symbol.2.0
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: llvm-indir_tgt
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;main}
=memlabel_map.0 for call-context {*;main}
mlloc.dst.0 : memlabel-mem--esp
=memlabel_map.1 for call-context {*;main}
mlloc.dst.1 : memlabel-mem--esp
=memlabel_map.2 for call-context {*;main}
mlloc.dst.2 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.3 for call-context {*;main}
mlloc.dst.3 : memlabel-mem--symbol.2.0
=memlabel_map.4 for call-context {*;main}
mlloc.dst.4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.5 for call-context {*;main}
mlloc.dst.5 : memlabel-mem--symbol.2.0
=memlabel_map.6 for call-context {*;main}
mlloc.dst.6 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.7 for call-context {*;main}
mlloc.dst.7 : memlabel-mem--esp
=memlabel_map.8 for call-context {*;main}
mlloc.dst.8 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.9 for call-context {*;main}
mlvar.dst.0 : memlabel-mem--symbol.2.0
=memlabel_map.10 for call-context {*;main}
mlvar.dst.1 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.11 for call-context {*;main}
mlvar.dst.2 : memlabel-mem--esp
=Edge: L0%0%d => L0%1%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.3.L0%1%spver
1 : callee_save_const.2 : BV:32
=dst.exreg.0.4.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.0.5.L0%1%spver
1 : callee_save_const.0 : BV:32
=dst.exreg.0.6.L0%1%spver
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7.L0%1%spver
1 : callee_save_const.3 : BV:32
=dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.mem.L0%1%spver
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4 : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvsub(1, 2) : BV:32
4 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
5 : bvule(3, 4) : BOOL
6 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
8 : region_agrees_with_memlabel(6, 2, 3, 7) : BOOL
9 : bvule(2, 1) : BOOL
10 : and(8, 9) : BOOL
11 : implies(5, 10) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*dst_tfg_add_stack_pointer_translation_at_function_entry)
tfg_edge_comment end

=Edge: L0%1%spver => L0%2%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L0%2%d
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.mem.L0%2%d
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%d
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L0%2%d => L0%2%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.10.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 { 0x0 } : BV:31
13 : 1 { 0x1 } : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 { 0x0 } : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 { 0x0 } : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 { 0x0 } : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 { 0x0 } : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 { 0x0 } : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.14.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 { 0x0 } : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 { 0x0 } : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.15.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.16.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 { 0x0 } : BV:31
13 : 1 { 0x1 } : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 1 { 0x1 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.4.L0%2%d : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 { 0x1 } : BV:1
10 : 0 { 0x0 } : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 { 0x5 +1.0e1025 } : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 { 0x0 +1.0e129 } : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 { 0x0 +1.0e1025 } : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 { 0x4 +1.0e1025 } : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 { 0x3 +1.0e1025 } : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 { 0xc +1.0e1025 } : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 { 0x0 } : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 { 0xa +1.0e1025 } : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 { 0x8 +1.0e1025 } : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 { 0x6 +1.0e1025 } : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 { 0x7 +1.0e1025 } : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 { 0xb +1.0e1025 } : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 { 0x9 +1.0e1025 } : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
=dst.exreg.7.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 { 0x0 } : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvsub(1, 14) : BV:32
16 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
17 : bvule(15, 16) : BOOL
18 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
19 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
20 : region_agrees_with_memlabel(18, 14, 15, 19) : BOOL
21 : bvule(14, 1) : BOOL
22 : and(20, 21) : BOOL
23 : implies(17, 22) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented
tfg_edge_comment end

=Edge: L1%1%d => L3%1%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.0.L3%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.exreg.0.4.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.10.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 { 0x0 } : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 { 0x20 +1.0e1025 } : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 { 0x1 } : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 { 0x0 } : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 { 0x1 } : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : 32 { 0x20 +1.0e1025 } : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 { 0x1 } : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.14.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 { 0x1 } : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 16, 28) : BV:1
=dst.exreg.15.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 { 0x20 +1.0e1025 } : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 { 0x1 } : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 { 0x0 } : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.exreg.16.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 { 0x0 } : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 1 { 0x1 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.4.L1%1%d : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 { 0x20 +1.0e1025 } : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 { 0x5 +1.0e1025 } : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 { 0x0 +1.0e1025 } : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 { 0x4 +1.0e1025 } : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 { 0x3 +1.0e1025 } : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 { 0xc +1.0e1025 } : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 { 0xa +1.0e1025 } : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 { 0x8 +1.0e1025 } : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 { 0x6 +1.0e1025 } : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 { 0x7 +1.0e1025 } : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 { 0x0 +1.0e129 } : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 { 0xb +1.0e1025 } : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 { 0x9 +1.0e1025 } : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
=dst.exreg.7.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : 1 { 0x1 } : BV:1
13 : 0 { 0x0 } : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 { 0x1 } : BV:1
14 : 0 { 0x0 } : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 { 0x20 +1.0e1025 } : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 { 0x1 } : BV:1
10 : eq(8, 9) : BOOL
11 : 0 { 0x0 } : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.mem.L3%1%spver
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvsub(1, 9) : BV:32
11 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
12 : bvule(10, 11) : BOOL
13 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
14 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
15 : region_agrees_with_memlabel(13, 9, 10, 14) : BOOL
16 : bvule(9, 1) : BOOL
17 : and(15, 16) : BOOL
18 : implies(12, 17) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented)
tfg_edge_comment end

=Edge: L3%1%spver => L4%1%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L4%1%d
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=dst.mem.L4%1%d
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L4%1%d
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L4%1%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.E0%0%d
1 : input.dst.exreg.0.4.L4%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.1 : MEMLABEL
4 : input.dst.exreg.0.4.L4%1%d : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented
tfg_edge_comment end

=Edge: L0%2%allocaI1 => L0%2%allocaI2
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.mem.L0%2%allocaI2
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI2
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
8 : ite(1, 6, 7) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI2 => L1%1%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L0%2%spver => L0%2%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-size-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI3 => L0%2%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.mem.L0%2%allocaI4
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
5 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI4
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
8 : ite(1, 6, 7) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI4 => L0%2%allocaI1
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-size-edge-added-by-us
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in dst
=Loc 100004 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 100017 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 100024 in dst.
REGMEM
dst.sp=L0%0%d=sp
1 : input.dst.sp=L0%0%d=sp : BV:32
=Loc 100026 in dst.
REGMEM
dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=Loc 100027 in dst.
REGMEM
dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=Loc 100028 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=Loc 100029 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=Loc 100030 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=Loc 100031 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=Loc 100034 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100035 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100036 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100037 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100038 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100039 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100040 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100041 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100044 in dst.
REGMEM
dst.exreg.0.4.L0%2%d
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=Loc 100045 in dst.
REGMEM
dst.exreg.0.4.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=Loc 100046 in dst.
REGMEM
dst.exreg.10.0.L0%2%spver
1 : input.dst.exreg.10.0.L0%2%spver : BV:1
=Loc 100047 in dst.
REGMEM
dst.exreg.11.0.L0%2%spver
1 : input.dst.exreg.11.0.L0%2%spver : BV:1
=Loc 100048 in dst.
REGMEM
dst.exreg.12.0.L0%2%spver
1 : input.dst.exreg.12.0.L0%2%spver : BV:1
=Loc 100049 in dst.
REGMEM
dst.exreg.13.0.L0%2%spver
1 : input.dst.exreg.13.0.L0%2%spver : BV:1
=Loc 100050 in dst.
REGMEM
dst.exreg.14.0.L0%2%spver
1 : input.dst.exreg.14.0.L0%2%spver : BV:1
=Loc 100051 in dst.
REGMEM
dst.exreg.15.0.L0%2%spver
1 : input.dst.exreg.15.0.L0%2%spver : BV:1
=Loc 100052 in dst.
REGMEM
dst.exreg.16.0.L0%2%spver
1 : input.dst.exreg.16.0.L0%2%spver : BV:1
=Loc 100053 in dst.
REGMEM
dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
=Loc 100054 in dst.
REGMEM
dst.exreg.7.0.L0%2%spver
1 : input.dst.exreg.7.0.L0%2%spver : BV:1
=Loc 100055 in dst.
REGMEM
dst.exreg.8.0.L0%2%spver
1 : input.dst.exreg.8.0.L0%2%spver : BV:1
=Loc 100056 in dst.
REGMEM
dst.exreg.9.0.L0%2%spver
1 : input.dst.exreg.9.0.L0%2%spver : BV:1
=Loc 100057 in dst.
REGMEM
dst.exreg.0.4.L1%1%d
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=Loc 100058 in dst.
REGMEM
dst.exreg.0.4.L4%1%d
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=Loc 100059 in dst.
REGMEM
dst.exreg.0.4.E0%0%d
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=Loc 100060 in dst.
REGMEM
dst.exreg.0.3.L0%1%spver
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=Loc 100061 in dst.
REGMEM
dst.exreg.0.4.L0%1%spver
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=Loc 100062 in dst.
REGMEM
dst.exreg.0.5.L0%1%spver
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=Loc 100063 in dst.
REGMEM
dst.exreg.0.6.L0%1%spver
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=Loc 100064 in dst.
REGMEM
dst.exreg.0.7.L0%1%spver
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=Loc 100065 in dst.
REGMEM
dst.exreg.18.0.L0%1%spver
1 : input.dst.exreg.18.0.L0%1%spver : BV:2
=Loc 100066 in dst.
REGMEM
dst.exreg.24.0.L0%1%spver
1 : input.dst.exreg.24.0.L0%1%spver : BV:2
=Loc 100067 in dst.
REGMEM
dst.exreg.0.0.L3%1%spver
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=Loc 100068 in dst.
REGMEM
dst.exreg.0.4.L3%1%spver
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=Loc 100069 in dst.
REGMEM
dst.exreg.10.0.L3%1%spver
1 : input.dst.exreg.10.0.L3%1%spver : BV:1
=Loc 100070 in dst.
REGMEM
dst.exreg.11.0.L3%1%spver
1 : input.dst.exreg.11.0.L3%1%spver : BV:1
=Loc 100071 in dst.
REGMEM
dst.exreg.12.0.L3%1%spver
1 : input.dst.exreg.12.0.L3%1%spver : BV:1
=Loc 100072 in dst.
REGMEM
dst.exreg.13.0.L3%1%spver
1 : input.dst.exreg.13.0.L3%1%spver : BV:1
=Loc 100073 in dst.
REGMEM
dst.exreg.14.0.L3%1%spver
1 : input.dst.exreg.14.0.L3%1%spver : BV:1
=Loc 100074 in dst.
REGMEM
dst.exreg.15.0.L3%1%spver
1 : input.dst.exreg.15.0.L3%1%spver : BV:1
=Loc 100075 in dst.
REGMEM
dst.exreg.16.0.L3%1%spver
1 : input.dst.exreg.16.0.L3%1%spver : BV:1
=Loc 100076 in dst.
REGMEM
dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L3%1%spver : BV:32
=Loc 100077 in dst.
REGMEM
dst.exreg.7.0.L3%1%spver
1 : input.dst.exreg.7.0.L3%1%spver : BV:1
=Loc 100078 in dst.
REGMEM
dst.exreg.8.0.L3%1%spver
1 : input.dst.exreg.8.0.L3%1%spver : BV:1
=Loc 100079 in dst.
REGMEM
dst.exreg.9.0.L3%1%spver
1 : input.dst.exreg.9.0.L3%1%spver : BV:1
=Loc 100080 in dst.
REGMEM
dst.llvm-indir_tgt.E0%0%d
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=Loc 100081 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=Loc 100082 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=Loc 100083 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=Loc 100084 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=Loc 100085 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=Loc 100086 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=Loc 100087 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=Loc 100088 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=Loc 100089 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=Loc 100090 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=Loc 100091 in dst.
REGMEM
dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=Loc 100092 in dst.
REGMEM
dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=Loc 100093 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=Loc 100094 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=Loc 100095 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=Loc 100096 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=Loc 100097 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=Loc 100098 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=Loc 100099 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=Loc 100100 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=Loc 100101 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=Loc 100102 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=Loc 100103 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=Loc 100104 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=Loc 100105 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=Loc 100106 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=Loc 100107 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=Loc 100108 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=Loc 100109 in dst.
REGMEM
dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=Loc 100110 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100111 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100112 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100113 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100114 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100115 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100116 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100117 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100118 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100119 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100120 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100121 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100122 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100123 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100124 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100125 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100126 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100127 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100128 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100129 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100130 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100131 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100132 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100133 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100134 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100135 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100136 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100137 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100138 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100139 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100140 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100141 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100142 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100143 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100144 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100145 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100146 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100147 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100148 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100149 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100150 in dst.
SLOT
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.0
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100151 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.1
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100152 in dst.
SLOT
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.2
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100153 in dst.
SLOT
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.3
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 100154 in dst.
SLOT
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.4
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100155 in dst.
SLOT
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.5
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 100156 in dst.
SLOT
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.6
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100157 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=Loc 100158 in dst.
REGMEM
src.local_alloc_count.=L0%0%d=
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=Loc 100159 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=Loc 100160 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=Loc 100161 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=Loc 100162 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100163 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100164 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100165 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100166 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100167 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100168 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100169 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100170 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.7
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100171 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=Loc 100172 in dst.
REGMEM
dst.local./*___y___main__x__=Lentry%2%d=/
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=Loc 100173 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=Loc 100174 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=Loc 100175 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=Loc 100176 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100177 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100178 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100179 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100180 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100181 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100182 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100183 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100184 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.8
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Locs end
=Liveness in dst
=live locs at L0%0%d
100024[f], 100034, 100035, 100036, 100037, 100038, 100039, 100040, 100041, 100158, 100172[f], 
=live locs at L0%1%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100091[f], 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100150, 100158, 100172[f], 
=live locs at L0%2%d
100024[f], 100044[f], 100060[f], 100062[f], 100063[f], 100064[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100158, 100172[f], 
=live locs at L0%2%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100158, 100172[f], 
=live locs at L0%2%allocaI1
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100158, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171[f], 100172[f], 
=live locs at L0%2%allocaI2
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184, 
=live locs at L0%2%allocaI3
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100157[f], 100158, 100172[f], 
=live locs at L0%2%allocaI4
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100158, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100172[f], 
=live locs at L1%1%d
100024[f], 100057[f], 100060[f], 100062[f], 100063[f], 100064[f], 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100152, 
=live locs at L3%1%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100109[f], 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100153, 100154, 
=live locs at L4%1%d
100058[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100155, 100156, 
=live locs at E0%0%d
100059[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100080[f], 100143, 100147, 100148, 100155, 

=Definedness in dst
=loc definedness at L0%0%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040
=loc definedness at L0%1%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100085, 100089, 100091, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100150
=loc definedness at L0%2%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151
=loc definedness at L0%2%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151
=loc definedness at L0%2%allocaI1
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171
=loc definedness at L0%2%allocaI2
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L0%2%allocaI3
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157
=loc definedness at L0%2%allocaI4
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170
=loc definedness at L1%1%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100150, 100151, 100152, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L3%1%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100150, 100151, 100152, 100153, 100154, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L4%1%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100058, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100101, 100102, 100103, 100104, 100105, 100106, 100107, 100108, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100150, 100151, 100152, 100153, 100154, 100155, 100156, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at E0%0%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100058, 100059, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100080, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100101, 100102, 100103, 100104, 100105, 100106, 100107, 100108, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100150, 100151, 100152, 100153, 100154, 100155, 100156, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184

=Branch affecting variable locs in dst
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at L0%1%spver

=branch affecting variable locs at L0%2%d

=branch affecting variable locs at L0%2%spver

=branch affecting variable locs at L0%2%allocaI1

=branch affecting variable locs at L0%2%allocaI2

=branch affecting variable locs at L0%2%allocaI3

=branch affecting variable locs at L0%2%allocaI4

=branch affecting variable locs at L1%1%d

=branch affecting variable locs at L3%1%spver

=branch affecting variable locs at L4%1%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in dst
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100060 {input.dst.exreg.0.3.L0%1%spver }
1 : callee_save_const.2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100061 {input.dst.exreg.0.4.L0%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100062 {input.dst.exreg.0.5.L0%1%spver }
1 : callee_save_const.0 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100063 {input.dst.exreg.0.6.L0%1%spver }
1 : callee_save_const.1 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100064 {input.dst.exreg.0.7.L0%1%spver }
1 : callee_save_const.3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100065 {input.dst.exreg.18.0.L0%1%spver }
1 : 0 { 0x0 } : BV:2
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100066 {input.dst.exreg.24.0.L0%1%spver }
1 : 0 { 0x0 } : BV:2
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100085 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100089 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100091 {input.dst.sp=L0%1%spver=sp.L0%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100110 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--rodata) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100111 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.2.0) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100112 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100113 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100114 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.1.1) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100115 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.3.0) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100116 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--heap) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100117 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100150 {select(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : retaddr_const : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver done
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100044 {input.dst.exreg.0.4.L0%2%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100081 {input.dst.local_size.=Lentry%1%d=.L0%2%d }
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100082 {input.dst.local_size.=Lentry%2%d=.L0%2%d }
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100083 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100084 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100086 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100087 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100088 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100090 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100118 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100119 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100120 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100121 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100122 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100123 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100124 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100125 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100151 {select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100045 {input.dst.exreg.0.4.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100046 {input.dst.exreg.10.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100047 {input.dst.exreg.11.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100048 {input.dst.exreg.12.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100049 {input.dst.exreg.13.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100050 {input.dst.exreg.14.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100051 {input.dst.exreg.15.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100052 {input.dst.exreg.16.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100053 {input.dst.exreg.6.0.L0%2%spver }
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100054 {input.dst.exreg.7.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100055 {input.dst.exreg.8.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100056 {input.dst.exreg.9.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100092 {input.dst.sp=L0%2%spver=sp.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver done
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3 for loc_id 100157 {input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100057 {input.dst.exreg.0.4.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100093 {input.dst.local_size.=Lentry%1%d=.L1%1%d }
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100094 {input.dst.local_size.=Lentry%2%d=.L1%1%d }
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100095 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100096 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100097 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100098 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100099 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100100 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100126 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100127 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100128 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100129 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100130 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100131 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100132 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100133 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100152 {select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100173 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 }
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100174 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 }
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100175 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100176 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100177 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100178 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100179 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100180 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100181 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100182 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100183 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100184 {select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
11 : input.dst.sp=L0%0%d=sp : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(9, 6, 10, 11, 12, 13) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100057 {input.dst.exreg.0.4.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100093 {input.dst.local_size.=Lentry%1%d=.L1%1%d }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100094 {input.dst.local_size.=Lentry%2%d=.L1%1%d }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100095 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100096 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100097 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100098 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100099 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100100 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100126 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100127 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100128 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100129 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100130 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100131 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100132 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100133 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100152 {select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100159 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100160 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100161 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100162 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100163 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100164 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 8, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100165 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100166 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100167 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100168 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100169 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100170 {select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(1, 8, 9, 4, 10, 11) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1 for loc_id 100171 {input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1 done
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100067 {input.dst.exreg.0.0.L3%1%spver }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100068 {input.dst.exreg.0.4.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100069 {input.dst.exreg.10.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100070 {input.dst.exreg.11.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100071 {input.dst.exreg.12.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100072 {input.dst.exreg.13.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100073 {input.dst.exreg.14.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100074 {input.dst.exreg.15.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100075 {input.dst.exreg.16.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100076 {input.dst.exreg.6.0.L3%1%spver }
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100077 {input.dst.exreg.7.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100078 {input.dst.exreg.8.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100079 {input.dst.exreg.9.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100109 {input.dst.sp=L3%1%spver=sp.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100134 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100135 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100136 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100137 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100138 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100139 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100140 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100141 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100153 {select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false) }
1 : 2 { 0x2 +1.23e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100154 {select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver done
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100058 {input.dst.exreg.0.4.L4%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100101 {input.dst.local_size.=Lentry%1%d=.L4%1%d }
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100102 {input.dst.local_size.=Lentry%2%d=.L4%1%d }
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100103 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100104 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100105 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100106 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100107 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100108 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100142 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100143 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100144 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100145 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100146 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100147 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100148 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100149 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100155 {select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100156 {select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d done
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d for loc_id 100059 {input.dst.exreg.0.4.E0%0%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d for loc_id 100080 {input.dst.llvm-indir_tgt.E0%0%d }
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
=graph_with_ml_contiguity_info non-vacuous mls
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in dst
=Alias analysis result in dst at call-context {*;main}
=Alias analysis result in dst at call-context {*;main} for loc 100004 (input.dst.exreg.0.4)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100017 (input.dst.exreg.6.0)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100024 (input.dst.sp=L0%0%d=sp)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100026 (input.dst.local_size.=Lentry%1%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100027 (input.dst.local_size.=Lentry%2%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100028 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100029 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100030 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100031 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100034 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100035 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100036 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100037 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100038 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100039 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100040 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100041 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100044 (input.dst.exreg.0.4.L0%2%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100045 (input.dst.exreg.0.4.L0%2%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100046 (input.dst.exreg.10.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100047 (input.dst.exreg.11.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100048 (input.dst.exreg.12.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100049 (input.dst.exreg.13.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100050 (input.dst.exreg.14.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100051 (input.dst.exreg.15.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100052 (input.dst.exreg.16.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100053 (input.dst.exreg.6.0.L0%2%spver)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100054 (input.dst.exreg.7.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100055 (input.dst.exreg.8.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100056 (input.dst.exreg.9.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100057 (input.dst.exreg.0.4.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100058 (input.dst.exreg.0.4.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100059 (input.dst.exreg.0.4.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100060 (input.dst.exreg.0.3.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100061 (input.dst.exreg.0.4.L0%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100062 (input.dst.exreg.0.5.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100063 (input.dst.exreg.0.6.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100064 (input.dst.exreg.0.7.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100065 (input.dst.exreg.18.0.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100066 (input.dst.exreg.24.0.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100067 (input.dst.exreg.0.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100068 (input.dst.exreg.0.4.L3%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100069 (input.dst.exreg.10.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100070 (input.dst.exreg.11.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100071 (input.dst.exreg.12.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100072 (input.dst.exreg.13.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100073 (input.dst.exreg.14.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100074 (input.dst.exreg.15.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100075 (input.dst.exreg.16.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100076 (input.dst.exreg.6.0.L3%1%spver)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100077 (input.dst.exreg.7.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100078 (input.dst.exreg.8.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100079 (input.dst.exreg.9.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100080 (input.dst.llvm-indir_tgt.E0%0%d)
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100081 (input.dst.local_size.=Lentry%1%d=.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100082 (input.dst.local_size.=Lentry%2%d=.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100083 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100084 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100085 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100086 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100087 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100088 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100089 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100090 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100091 (input.dst.sp=L0%1%spver=sp.L0%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100092 (input.dst.sp=L0%2%spver=sp.L0%2%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100093 (input.dst.local_size.=Lentry%1%d=.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100094 (input.dst.local_size.=Lentry%2%d=.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100095 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100096 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100097 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100098 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100099 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100100 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100101 (input.dst.local_size.=Lentry%1%d=.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100102 (input.dst.local_size.=Lentry%2%d=.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100103 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100104 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100105 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100106 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100107 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100108 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100109 (input.dst.sp=L3%1%spver=sp.L3%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100110 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100111 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100112 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100113 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100114 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100115 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100116 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100117 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100118 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100119 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100120 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100121 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100122 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100123 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100124 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100125 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100126 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100127 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100128 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100129 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100130 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100131 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100132 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100133 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100134 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100135 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100136 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100137 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100138 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100139 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100140 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100141 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100142 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100143 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100144 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100145 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100146 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100147 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100148 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100149 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100150 (select(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100151 (select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100152 (select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100153 (select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100154 (select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100155 (select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100156 (select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100157 (input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100158 (input.src.local_alloc_count.=L0%0%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100159 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100160 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100161 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100162 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100163 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100164 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100165 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100166 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100167 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100168 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100169 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100170 (select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100171 (input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100172 (input.dst.local./*___y___main__x__=Lentry%2%d=/)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100173 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100174 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100175 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100176 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100177 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100178 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100179 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100180 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100181 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100182 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100183 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100184 (select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis results in dst done
=Available expressions in dst
=avail_exprs begin
=loc 100004
=loc_expr
142038 : input.dst.exreg.0.4 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100017
=loc_expr
142088 : input.dst.exreg.6.0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100024
=loc_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100026
=loc_expr
142120 : input.dst.local_size.=Lentry%1%d= : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100027
=loc_expr
142123 : input.dst.local_size.=Lentry%2%d= : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100028
=loc_expr
142122 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100029
=loc_expr
142121 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100030
=loc_expr
142126 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100031
=loc_expr
142125 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100044
=loc_expr
142827 : input.dst.exreg.0.4.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100045
=loc_expr
143031 : input.dst.exreg.0.4.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100046
=loc_expr
143042 : input.dst.exreg.10.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=avail_exprs_val.end
=loc 100047
=loc_expr
143043 : input.dst.exreg.11.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=avail_exprs_val.end
=loc 100048
=loc_expr
143044 : input.dst.exreg.12.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=avail_exprs_val.end
=loc 100049
=loc_expr
143045 : input.dst.exreg.13.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=avail_exprs_val.end
=loc 100050
=loc_expr
143046 : input.dst.exreg.14.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=avail_exprs_val.end
=loc 100051
=loc_expr
143047 : input.dst.exreg.15.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100052
=loc_expr
143048 : input.dst.exreg.16.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=avail_exprs_val.end
=loc 100053
=loc_expr
142972 : input.dst.exreg.6.0.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=avail_exprs_val.end
=loc 100054
=loc_expr
143049 : input.dst.exreg.7.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100055
=loc_expr
143050 : input.dst.exreg.8.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100056
=loc_expr
143051 : input.dst.exreg.9.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100057
=loc_expr
142941 : input.dst.exreg.0.4.L1%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100058
=loc_expr
142934 : input.dst.exreg.0.4.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100059
=loc_expr
143041 : input.dst.exreg.0.4.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100060
=loc_expr
143026 : input.dst.exreg.0.3.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.2 : BV:32
=avail_exprs_val.end
=loc 100061
=loc_expr
143027 : input.dst.exreg.0.4.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100062
=loc_expr
143028 : input.dst.exreg.0.5.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.0 : BV:32
=avail_exprs_val.end
=loc 100063
=loc_expr
143029 : input.dst.exreg.0.6.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.1 : BV:32
=avail_exprs_val.end
=loc 100064
=loc_expr
143030 : input.dst.exreg.0.7.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.3 : BV:32
=avail_exprs_val.end
=loc 100065
=loc_expr
143052 : input.dst.exreg.18.0.L0%1%spver : BV:2
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:2
=avail_exprs_val.end
=loc 100066
=loc_expr
143053 : input.dst.exreg.24.0.L0%1%spver : BV:2
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:2
=avail_exprs_val.end
=loc 100067
=loc_expr
143025 : input.dst.exreg.0.0.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100068
=loc_expr
143032 : input.dst.exreg.0.4.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100069
=loc_expr
143054 : input.dst.exreg.10.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100070
=loc_expr
143055 : input.dst.exreg.11.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=avail_exprs_val.end
=loc 100071
=loc_expr
143056 : input.dst.exreg.12.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100072
=loc_expr
143057 : input.dst.exreg.13.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100073
=loc_expr
143058 : input.dst.exreg.14.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100074
=loc_expr
143059 : input.dst.exreg.15.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100075
=loc_expr
143060 : input.dst.exreg.16.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100076
=loc_expr
143061 : input.dst.exreg.6.0.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=avail_exprs_val.end
=loc 100077
=loc_expr
143062 : input.dst.exreg.7.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100078
=loc_expr
143063 : input.dst.exreg.8.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100079
=loc_expr
143064 : input.dst.exreg.9.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100081
=loc_expr
142914 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=avail_exprs_val.end
=loc 100082
=loc_expr
142915 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=avail_exprs_val.end
=loc 100083
=loc_expr
142917 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=avail_exprs_val.end
=loc 100084
=loc_expr
142918 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.end
=loc 100085
=loc_expr
142825 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100086
=loc_expr
142919 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100087
=loc_expr
142920 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=avail_exprs_val.end
=loc 100088
=loc_expr
142921 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.end
=loc 100089
=loc_expr
142826 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100090
=loc_expr
142922 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100091
=loc_expr
142823 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100092
=loc_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100101
=loc_expr
143033 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100102
=loc_expr
143036 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100103
=loc_expr
143035 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100104
=loc_expr
143034 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100106
=loc_expr
143039 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100107
=loc_expr
143038 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100109
=loc_expr
142923 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100110
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143065 : memmask(142824, 142113, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100111
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143066 : memmask(142824, 142113, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100112
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
143067 : memmask(142824, 142113, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100113
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
143068 : memmask(142824, 142113, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100114
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143069 : memmask(142824, 142113, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100115
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143070 : memmask(142824, 142113, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100116
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143071 : memmask(142824, 142113, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100117
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
143072 : memmask(142824, 142113, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100118
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143073 : memmask(142916, 142906, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100119
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143074 : memmask(142916, 142906, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100120
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
143075 : memmask(142916, 142906, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100121
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
143076 : memmask(142916, 142906, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100122
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143077 : memmask(142916, 142906, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100123
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143078 : memmask(142916, 142906, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100124
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143079 : memmask(142916, 142906, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100125
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
143080 : memmask(142916, 142906, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100126
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143081 : memmask(143013, 142927, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100127
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143082 : memmask(143013, 142927, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100130
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143085 : memmask(143013, 142927, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100131
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143086 : memmask(143013, 142927, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100132
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143087 : memmask(143013, 142927, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100134
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143089 : memmask(142926, 142927, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100135
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143090 : memmask(142926, 142927, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100138
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143093 : memmask(142926, 142927, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100139
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143094 : memmask(142926, 142927, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100140
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143095 : memmask(142926, 142927, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100142
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143097 : memmask(142938, 142939, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100143
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143021 : memmask(142938, 142939, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100146
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143100 : memmask(142938, 142939, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100147
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143022 : memmask(142938, 142939, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100148
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143023 : memmask(142938, 142939, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100150
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
140269 : input.dst.sp=L0%0%d=sp : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143140 : select(142824, 142113, 140656, 140269, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 100151
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
140269 : input.dst.sp=L0%0%d=sp : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143117 : select(142916, 142906, 140656, 140269, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 100153
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
65795 : dst_symbol_addr.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143843 : select(142926, 142927, 140284, 65795, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 2 { 0x2 +1.23e129 } : BV:32
=avail_exprs_val.end
=loc 100155
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
65795 : dst_symbol_addr.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143867 : select(142938, 142939, 140284, 65795, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 2 { 0x2 +1.23e129 } : BV:32
=avail_exprs_val.end
=loc 100157
=loc_expr
145241 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 16 { 0x10 +1.190e129 } : BV:32
=avail_exprs_val.end
=loc 100158
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100159
=loc_expr
145600 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100160
=loc_expr
145601 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100161
=loc_expr
145602 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 100162
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
145606 : memmask(145257, 145258, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100163
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
145607 : memmask(145257, 145258, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100164
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
145608 : memmask(145257, 145258, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 8, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100165
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
145609 : memmask(145257, 145258, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100166
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
145610 : memmask(145257, 145258, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100167
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
145611 : memmask(145257, 145258, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100168
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
145612 : memmask(145257, 145258, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100169
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
145613 : memmask(145257, 145258, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100171
=loc_expr
145259 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=avail_exprs_val.end
=loc 100172
=loc_expr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100173
=loc_expr
145603 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=avail_exprs_val.end
=loc 100174
=loc_expr
145604 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100175
=loc_expr
145605 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 100176
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
145659 : memmask(145305, 145307, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100177
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
145660 : memmask(145305, 145307, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100178
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
145661 : memmask(145305, 145307, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100179
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
145662 : memmask(145305, 145307, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100180
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
145663 : memmask(145305, 145307, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100181
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
145664 : memmask(145305, 145307, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100182
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
145665 : memmask(145305, 145307, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100183
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
145666 : memmask(145305, 145307, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=avail_exprs end
=sprel_map in dst
=loc 100044 expr
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=loc 100044 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100045 expr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=loc 100045 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100057 expr
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=loc 100057 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100058 expr
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=loc 100058 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100059 expr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=loc 100059 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
140307 : 4 { 0x4 +1.47e129 } : BV:32
143891 : bvadd(140269, 140307) : BV:32
=loc 100060 expr
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=loc 100060 spreled-expr
140131 : callee_save_const.2 : BV:32
=loc 100061 expr
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=loc 100061 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100062 expr
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=loc 100062 spreled-expr
140129 : callee_save_const.0 : BV:32
=loc 100063 expr
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=loc 100063 spreled-expr
140130 : callee_save_const.1 : BV:32
=loc 100064 expr
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=loc 100064 spreled-expr
140132 : callee_save_const.3 : BV:32
=loc 100065 expr
1 : input.dst.exreg.18.0.L0%1%spver : BV:2
=loc 100065 spreled-expr
142131 : 0 { 0x0 } : BV:2
=loc 100066 expr
1 : input.dst.exreg.24.0.L0%1%spver : BV:2
=loc 100066 spreled-expr
142131 : 0 { 0x0 } : BV:2
=loc 100067 expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=loc 100067 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100068 expr
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=loc 100068 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100085 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=loc 100085 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100086 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=loc 100086 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100089 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=loc 100089 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100090 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=loc 100090 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100091 expr
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=loc 100091 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100092 expr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=loc 100092 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100109 expr
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=loc 100109 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100150 expr
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100150 spreled-expr
140267 : retaddr_const : BV:32
=loc 100151 expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100151 spreled-expr
140267 : retaddr_const : BV:32
=loc 100153 expr
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100153 spreled-expr
140301 : 2 { 0x2 +1.23e129 } : BV:32
=loc 100155 expr
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100155 spreled-expr
140301 : 2 { 0x2 +1.23e129 } : BV:32
=loc 100157 expr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=loc 100157 spreled-expr
140323 : 16 { 0x10 +1.190e129 } : BV:32
=loc 100159 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=loc 100159 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100160 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=loc 100160 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
145630 : bvadd(140269, 140470) : BV:32
=loc 100161 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=loc 100161 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 100171 expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=loc 100171 spreled-expr
140334 : 8 { 0x8 +1.95e129 } : BV:32
=loc 100175 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=loc 100175 spreled-expr
140295 : 0 { 0x0 } : BOOL
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L0%1%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%spver=>L0%2%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%d=>L0%2%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%spver=>L0%2%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%spver=>L1%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI1=>L0%2%allocaI2
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI2=>L1%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI3=>L0%2%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI4=>L0%2%allocaI1
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%d=>L3%1%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%spver=>L4%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L0%1%spver
=dst.exreg.0.3.L0%1%spver
1 : callee_save_const.2 : BV:32
=dst.exreg.0.4.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.0.5.L0%1%spver
1 : callee_save_const.0 : BV:32
=dst.exreg.0.6.L0%1%spver
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7.L0%1%spver
1 : callee_save_const.3 : BV:32
=dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.mem.L0%1%spver
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%spver=>L0%2%d
=dst.exreg.0.4.L0%2%d
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.mem.L0%2%d
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%d
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%d=>L0%2%spver
=dst.exreg.0.4.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=dst.exreg.15.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%spver=>L0%2%allocaI3
=dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%spver=>L1%1%d
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI1=>L0%2%allocaI2
=dst.mem.L0%2%allocaI2
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI2
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI2=>L1%1%d
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI3=>L0%2%allocaI4
=dst.mem.L0%2%allocaI4
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI4
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.dst.sp=L0%0%d=sp : BV:32
4 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : alloca(1, 2, 5, 6) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI4=>L0%2%allocaI1
=dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%d=>L3%1%spver
=dst.exreg.0.0.L3%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.exreg.0.4.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.10.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=dst.exreg.11.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=dst.exreg.12.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=dst.exreg.13.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=dst.exreg.14.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=dst.exreg.15.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=dst.exreg.16.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=dst.mem.L3%1%spver
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%spver=>L4%1%d
=dst.exreg.0.4.L4%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=dst.mem.L4%1%d
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L4%1%d
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%d=>E0%0%d
=dst.exreg.0.4.E0%0%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver assume# 0
1 : input.dst.exreg.0.4 : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
7 : bvule(5, 6) : BOOL
8 : bvule(2, 1) : BOOL
9 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
10 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
11 : region_agrees_with_memlabel(9, 2, 5, 10) : BOOL
12 : and(8, 11) : BOOL
13 : implies(7, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver done
=graph_with_simplified_assets.simplified_assumes at L0%1%spver=>L0%2%d
=graph_with_simplified_assets.simplified_assumes at L0%1%spver=>L0%2%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver assume# 0
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
7 : region_agrees_with_memlabel(1, 4, 5, 6) : BOOL
8 : bvule(4, 2) : BOOL
9 : and(7, 8) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver done
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L0%2%allocaI3
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L0%2%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L1%1%d
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L1%1%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI1=>L0%2%allocaI2
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI1=>L0%2%allocaI2 done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI2=>L1%1%d
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI2=>L1%1%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI3=>L0%2%allocaI4
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI3=>L0%2%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI4=>L0%2%allocaI1
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI4=>L0%2%allocaI1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver assume# 0
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver done
=graph_with_simplified_assets.simplified_assumes at L3%1%spver=>L4%1%d
=graph_with_simplified_assets.simplified_assumes at L3%1%spver=>L4%1%d done
=graph_with_simplified_assets.simplified_assumes at L4%1%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L4%1%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
3
=String-contents:
=Nextpc-map:
=Nextpc-map done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L0%1%spver
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.ec
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.pred
=Comment
undef-behavioursome.edge.L0%0%d=>L0%1%spver
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L0%0%d=>L0%1%spver done
tfg.assumes_around_edge at L0%1%spver=>L0%2%d
tfg.assumes_around_edge at L0%1%spver=>L0%2%d done
tfg.assumes_around_edge at L0%2%d=>L0%2%spver
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.ec
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.pred
=Comment
undef-behavioursome.edge.L0%2%d=>L0%2%spver
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L0%2%d=>L0%2%spver done
tfg.assumes_around_edge at L0%2%spver=>L0%2%allocaI3
tfg.assumes_around_edge at L0%2%spver=>L0%2%allocaI3 done
tfg.assumes_around_edge at L0%2%spver=>L1%1%d
tfg.assumes_around_edge at L0%2%spver=>L1%1%d done
tfg.assumes_around_edge at L0%2%allocaI1=>L0%2%allocaI2
tfg.assumes_around_edge at L0%2%allocaI1=>L0%2%allocaI2 done
tfg.assumes_around_edge at L0%2%allocaI2=>L1%1%d
tfg.assumes_around_edge at L0%2%allocaI2=>L1%1%d done
tfg.assumes_around_edge at L0%2%allocaI3=>L0%2%allocaI4
tfg.assumes_around_edge at L0%2%allocaI3=>L0%2%allocaI4 done
tfg.assumes_around_edge at L0%2%allocaI4=>L0%2%allocaI1
tfg.assumes_around_edge at L0%2%allocaI4=>L0%2%allocaI1 done
tfg.assumes_around_edge at L1%1%d=>L3%1%spver
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.ec
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.pred
=Comment
undef-behavioursome.edge.L1%1%d=>L3%1%spver
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L1%1%d=>L3%1%spver done
tfg.assumes_around_edge at L3%1%spver=>L4%1%d
tfg.assumes_around_edge at L3%1%spver=>L4%1%d done
tfg.assumes_around_edge at L4%1%d=>E0%0%d
tfg.assumes_around_edge at L4%1%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=PCLocalSprelAssumptionsBegin:
=PC: L0%1%d
=local.=Lentry%1%d=
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=PCLocalSprelAssumptionsEnd
=sp_version_relations begin
=loc 100044
=loc_expr
142827 : input.dst.exreg.0.4.L0%2%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100045
=loc_expr
143031 : input.dst.exreg.0.4.L0%2%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100057
=loc_expr
142941 : input.dst.exreg.0.4.L1%1%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100058
=loc_expr
142934 : input.dst.exreg.0.4.L4%1%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100059
=loc_expr
143041 : input.dst.exreg.0.4.E0%0%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4
=sp_version_relations_val.end
=loc 100061
=loc_expr
143027 : input.dst.exreg.0.4.L0%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100068
=loc_expr
143032 : input.dst.exreg.0.4.L3%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100091
=loc_expr
142823 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100092
=loc_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100109
=loc_expr
142923 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100158
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=sp_version_relations_val.m_is_top 1
=sp_version_relations_val.end
=loc 100159
=loc_expr
145600 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=spv_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100160
=loc_expr
145601 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967295
=spv_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_relation
SP_RELATION_STATUS_GT
=sp_version_relations_val.end
=loc 100172
=loc_expr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=sp_version_relations_val.m_is_top 1
=sp_version_relations_val.end
=sp_version_relations end
=AllocaSpvToMemlabel Begin:
=spv:
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=AllocaSpvToMemlabel End
=TFG_SSA_done
=eqcheck_info
=eqcheck
=proof_filename eq.proof.ALL
=function_name main
=asm_filename emi9f.fixed.s
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: subl $0x10,%exvr0.4d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: movl $0x0,%exvr0.0d #
.i2: movl $0x2,%exvr5.3w:C_SYMBOL0 #
.i3: addl $0x10,%exvr0.4d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x3
2 : 0x8
3 : 0x12
4 : 0x15
=dst_insn_pcs done
=xml_output_format text-color
=use_only_relocatable_memlabels 0
=run_safety_check 1
=debug_header_pc_lsprels
=PC: L0%1%d
=local.=Lentry%1%d=
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%d_L0%0%d Lentry%1%allocaI3_L0%2%allocaI3 Lentry%1%allocaI4_L0%2%allocaI4 Lentry%2%allocaI3_L0%2%allocaI1 Lentry%2%allocaI4_L0%2%allocaI2 E0%0%d_E0%0%d
=Edges:
L0%0%d_L0%0%d => Lentry%1%allocaI3_L0%2%allocaI3
Lentry%1%allocaI3_L0%2%allocaI3 => Lentry%1%allocaI4_L0%2%allocaI4
Lentry%1%allocaI4_L0%2%allocaI4 => Lentry%2%allocaI3_L0%2%allocaI1
Lentry%2%allocaI3_L0%2%allocaI1 => Lentry%2%allocaI4_L0%2%allocaI2
Lentry%2%allocaI4_L0%2%allocaI2 => E0%0%d_E0%0%d
=graph done
=is_ssa_graph:
0
=StartState:
=state_end
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d_E0%0%d
=Node outputs done for E0%0%d_E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume pred 0
=Comment
symbol1.char0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 1
=Comment
symbol1.char1
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 2
=Comment
symbol1.char4
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 1 { 0x1 } : BV:8
=predicate done
=global assume pred 3
=Comment
symbol1.char2
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 4
=Comment
symbol1.char5
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 5
=Comment
symbol1.char3
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 6
=Comment
symbol1.char6
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 7
=Comment
symbol1.char7
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume predicate_set done
=Edge: L0%0%d_L0%0%d => Lentry%1%allocaI3_L0%2%allocaI3
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%d to Lentry%1%allocaI3 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(L0%0%d=>Lentry%1%allocaI3)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%d to L0%2%allocaI3 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L0%0%d=>L0%1%spver)*((L0%1%spver=>L0%2%d)*((L0%2%d=>L0%2%spver)*(L0%2%spver=>L0%2%allocaI3))))
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
7 : input.dst.sp=L0%0%d=sp : BV:32
8 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
9 : bvadd(7, 8) : BV:32
10 : eq(6, 9) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%1%allocaI3_L0%2%allocaI3 => Lentry%1%allocaI4_L0%2%allocaI4
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%1%allocaI3 to Lentry%1%allocaI4 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%1%allocaI3=>Lentry%1%allocaI4)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI3 to L0%2%allocaI4 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI3=>L0%2%allocaI4)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%1%allocaI4_L0%2%allocaI4 => Lentry%2%allocaI3_L0%2%allocaI1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%1%allocaI4 to Lentry%2%allocaI3 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%1%allocaI4=>Lentry%2%allocaI3)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI4 to L0%2%allocaI1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI4=>L0%2%allocaI1)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
8 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
9 : eq(7, 8) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%2%allocaI3_L0%2%allocaI1 => Lentry%2%allocaI4_L0%2%allocaI2
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%2%allocaI3 to Lentry%2%allocaI4 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI1 to L0%2%allocaI2 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.cg_edge_assumesAssume.1
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=Edge.cg_edge_assumesAssume.2
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Edge.cg_edge_assumesAssume.3
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : memlabel-mem--heap : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%2%allocaI4_L0%2%allocaI2 => E0%0%d_E0%0%d
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%2%allocaI4 to E0%0%d at unroll 3 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))*(Lfor.end%1%d=>E0%0%d))
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI2 to E0%0%d at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*((L1%1%d=>L3%1%spver)*((L3%1%spver=>L4%1%d)*(L4%1%d=>E0%0%d))))
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumes.Assumes.end

=graph_with_predicates_done

=start_pc_preconditions
=start_pc_precondition.0
=Comment
precond-mem.alloc
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.1
=Comment
precond-mlasserts
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.2
=Comment
precond-memmask-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.3
=Comment
precond-memmask-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.4
=Comment
precond-memmask-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.5
=Comment
precond-memmask-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.6
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.7
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=graph_with_precondition_done

=Locs in main.A7
=Locs end
=Liveness in main.A7
=live locs at L0%0%d_L0%0%d

=live locs at Lentry%1%allocaI3_L0%2%allocaI3

=live locs at Lentry%1%allocaI4_L0%2%allocaI4

=live locs at Lentry%2%allocaI3_L0%2%allocaI1

=live locs at Lentry%2%allocaI4_L0%2%allocaI2

=live locs at E0%0%d_E0%0%d


=Definedness in main.A7

=Branch affecting variable locs in main.A7

=Relevant Memlabels in main.A7
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
=graph_with_ml_contiguity_info non-vacuous mls
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in main.A7
=Alias analysis results in main.A7 done
=Available expressions in main.A7
=avail_exprs begin
=avail_exprs end
=sprel_map in main.A7
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=graph_arg_regs
=graph_arg_regs done
=rodata_map begin
=rodata_map end

=concrete_assertion_submap
=from
1 : symbol.1 : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : symbol.2 : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : symbol.3 : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : dst_symbol_addr.1 : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : dst_symbol_addr.2 : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : dst_symbol_addr.3 : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : input.memlabel-mem--rodata_begin : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : input.memlabel-mem--rodata_end : BV:32
=to
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=from
1 : rodata.size : BV:32
=to
1 : 8 { 0x8 +1.95e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.2.0_begin : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.2.0_end : BV:32
=to
1 : 3 { 0x3 +1.35e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.1.1_begin : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.1.1_end : BV:32
=to
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.3.0_begin : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.3.0_end : BV:32
=to
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=submap done

=use_concrete_assertion : 1
=Memlabel assertions done
=graph_with_proofs done
=global counterexamples for reason inductive-invariants
=global nodece 0
=global nodece 0 nodece z3.ce3.fuzzed.num_edges_traversed0
=global nodece 0 nodece_path
=global nodece 0 nodece_path.graph_edge_composition
(epsilon)
=global nodece 0 nodece_cached_counterexample
=counter_example_begin z3.ce3.fuzzed 651ce53213c4ee6b937d945b9704ea3
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4169682956 { 0xf888500c -125284340 -1.6494283e114 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 5640192; 4222930943 ] -> 0, { [ 0; 4055 ], [ 4064; 5640191 ], [ 4222930944; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 5640191 ] -> memlabel-mem--heap, [ 5640192; 4222930943 ] -> memlabel-mem--esp, [ 4222930944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 5640192; 4222930943 ] -> 0, { [ 0; 4055 ], [ 4064; 5640191 ], [ 4222930944; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 5640191 ] -> memlabel-mem--heap, [ 5640192; 4222930943 ] -> memlabel-mem--esp, [ 4222930944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4217290752 { 0xfb5ec000 -77676544 -1.74023437e119 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 5640192 { 0x561000 +1.67236328e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4222930943 { 0xfbb4cfff -72036353 -1.41259753e120 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
3323776219
=counter_example_end
=global nodece 0 num_edges_traversed 0
=global nodece 0 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 1
=global nodece 1 nodece z3v487.ce4.fuzzed.num_edges_traversed0
=global nodece 1 nodece_path
=global nodece 1 nodece_path.graph_edge_composition
(epsilon)
=global nodece 1 nodece_cached_counterexample
=counter_example_begin z3v487.ce4.fuzzed b4e8b134b3a3594a0d9fbc2a535aa99
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294959116 { 0xffffe00c -8180 -1.99902486e128 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 8192; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 8191 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 8192; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 8191 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4294959104 { 0xffffe000 -8192 -1.99902343e128 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 8192 { 0x2000 +1.97656e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2032656889
=counter_example_end
=global nodece 1 num_edges_traversed 0
=global nodece 1 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 2
=global nodece 2 nodece yices.ce5.fuzzed.num_edges_traversed0
=global nodece 2 nodece_path
=global nodece 2 nodece_path.graph_edge_composition
(epsilon)
=global nodece 2 nodece_cached_counterexample
=counter_example_begin yices.ce5.fuzzed 3ce0f5e2d6661048f1bce517b3e865f
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967292 { 0xfffffffc -4 -1.99999952e128 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 2147483648; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 2147483647 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483647 ] -> memlabel-mem--heap, [ 2147483648; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 2147483648; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 2147483647 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483647 ] -> memlabel-mem--heap, [ 2147483648; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1929904615
=counter_example_end
=global nodece 2 num_edges_traversed 0
=global nodece 2 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 3
=global nodece 3 nodece z3v487.ce7866.num_edges_traversed2
=global nodece 3 nodece_path
=global nodece 3 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 3 nodece_cached_counterexample
=counter_example_begin z3v487.ce7866 9aa1c82077fdf7b8d712d73a38261d2f
=input.dst.exreg.0.4
1 : 2166358016 { 0x81200000 -2128609280 -1.25000000e131 } : BV:32
=input.dst.exreg.6.0
1 : 437600010 { 0x1a153f0a +1.16598629e181 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1266262569 { 0x4b79a229 +1.95026123e23 } : BV:32
=callee_save_const.1
1 : 177928919 { 0xa9afad7 +1.21078002e150 } : BV:32
=callee_save_const.2
1 : 1189521921 { 0x46e6aa01 +1.80206310e14 } : BV:32
=callee_save_const.3
1 : 989245581 { 0x3af6b08d +1.92726290e246 } : BV:32
=retaddr_const
1 : 569322177 { 0x21ef2ac1 +1.86849224e196 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2248167158 { 0x86004ef6 -2046800138 -1.240969e141 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483643 ] -> 2, [ 2147483644; 2147483659 ] -> 0, [ 2147483660; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1189521921 { 0x46e6aa01 +1.80206310e14 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1266262569 { 0x4b79a229 +1.95026123e23 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 177928919 { 0xa9afad7 +1.21078002e150 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 989245581 { 0x3af6b08d +1.92726290e246 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 224427559 { 0xd607e27 +1.75384986e155 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 982700975 { 0x3a92d3af +1.14708507e246 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1744541775 { 0x67fb984f +1.96558558e80 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1399716225 { 0x536df981 +1.85917675e39 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1688865419 { 0x64aa0a8b +1.32844674e74 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1132143233 { 0x437b2281 +1.96199047e7 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 437600026 { 0x1a153f1a +1.16598820e181 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 224427559 { 0xd607e27 +1.75384986e155 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 982700975 { 0x3a92d3af +1.14708507e246 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1744541775 { 0x67fb984f +1.96558558e80 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1399716225 { 0x536df981 +1.85917675e39 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1688865419 { 0x64aa0a8b +1.32844674e74 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1132143233 { 0x437b2281 +1.96199047e7 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 201326592 { 0xc000000 +1.0e153 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1979748352 { 0x76009000 +1.439453e109 } : BV:32
=input.memlabel-mem--esp_end
1 : 2181074943 { 0x82008fff -2113892353 -1.439441e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483643 ] -> 2, [ 2147483644; 2147483659 ] -> 0, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3997834985
=counter_example_end
=global nodece 3 num_edges_traversed 2
=global nodece 3 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 4
=global nodece 4 nodece z3.ce7867.num_edges_traversed2
=global nodece 4 nodece_path
=global nodece 4 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 4 nodece_cached_counterexample
=counter_example_begin z3.ce7867 bdbf17469c7d34b4e525d63a3b3ba56
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 2081715793 { 0x7c147651 +1.15986073e121 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1234188767 { 0x499039df +1.12676608e20 } : BV:32
=callee_save_const.1
1 : 1079704204 { 0x405afa8c +1.71077108e1 } : BV:32
=callee_save_const.2
1 : 557775600 { 0x213efaf0 +1.49203300e195 } : BV:32
=callee_save_const.3
1 : 272015058 { 0x10369ed2 +1.42672181e161 } : BV:32
=retaddr_const
1 : 1902786080 { 0x716a3620 +1.82977676e99 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 557775600 { 0x213efaf0 +1.49203300e195 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1234188767 { 0x499039df +1.12676608e20 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1079704204 { 0x405afa8c +1.71077108e1 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 272015058 { 0x10369ed2 +1.42672181e161 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 226520413 { 0xd806d5d +1.333750e156 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 275925388 { 0x1072498c +1.89286947e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1140392243 { 0x43f90133 +1.94534909e8 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2021049466 { 0x7876c47a +1.92787098e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 2027330581 { 0x78d69c15 +1.67663824e114 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1258497762 { 0x4b0326e2 +1.2462410e23 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 2081715856 { 0x7c147690 +1.15986824e121 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 226520413 { 0xd806d5d +1.333750e156 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 275925388 { 0x1072498c +1.89286947e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1140392243 { 0x43f90133 +1.94534909e8 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2021049466 { 0x7876c47a +1.92787098e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2027330581 { 0x78d69c15 +1.67663824e114 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1258497762 { 0x4b0326e2 +1.2462410e23 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
4160058223
=counter_example_end
=global nodece 4 num_edges_traversed 2
=global nodece 4 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 5
=global nodece 5 nodece z3v487.ce8000.num_edges_traversed2
=global nodece 5 nodece_path
=global nodece 5 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 5 nodece_cached_counterexample
=counter_example_begin z3v487.ce8000 5b8a45825fc57f4e51ba8237a0786d2
=input.dst.exreg.0.4
1 : 1358987520 { 0x51008100 +1.393676e35 } : BV:32
=input.dst.exreg.6.0
1 : 1692562372 { 0x64e273c4 +1.76915788e74 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 809982933 { 0x30475bd5 +1.55748999e225 } : BV:32
=callee_save_const.1
1 : 1153250723 { 0x44bd35a3 +1.47819936e10 } : BV:32
=callee_save_const.2
1 : 182432956 { 0xadfb4bc +1.74770307e150 } : BV:32
=callee_save_const.3
1 : 1805428689 { 0x6b9ca7d1 +1.22387135e88 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1860796415 ] -> 4, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 26216415 { 0x19007df +1.12524020e132 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 856082 { 0xd1012 +1.10205292e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 1359218444, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 1359218443 ] -> memlabel-mem--esp, [ 1359218444; 1359218459 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1359218460; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218443 ] -> 4, [ 1359218444; 1359218459 ] -> 0, [ 1359218460; 1860796415 ] -> 4, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1359218459 { 0x5104071b +1.3146684e35 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 182432956 { 0xadfb4bc +1.74770307e150 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 809982933 { 0x30475bd5 +1.55748999e225 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1153250723 { 0x44bd35a3 +1.47819936e10 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1805428689 { 0x6b9ca7d1 +1.22387135e88 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218459 ] -> 2, [ 1359218460; 1359218460 ] -> 0, [ 1359218461; 1359218461 ] -> 0, [ 1359218462; 1359218462 ] -> 0, [ 1359218463; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218459 ] -> 2, [ 1359218460; 1359218460 ] -> 0, [ 1359218461; 1359218461 ] -> 0, [ 1359218462; 1359218462 ] -> 0, [ 1359218463; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1493258484 { 0x590150f4 +1.1028299e51 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 840302637 { 0x3216002d +1.17188036e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 2028631949 { 0x78ea778d +1.83177340e114 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1158684986 { 0x4510213a +1.12601399e11 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 135140181 { 0x80e1355 +1.10996496e145 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 483107482 { 0x1ccba29a +1.59089970e186 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1692562192 { 0x64e27310 +1.76913642e74 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1493258484 { 0x590150f4 +1.1028299e51 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 840302637 { 0x3216002d +1.17188036e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 2028631949 { 0x78ea778d +1.83177340e114 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1158684986 { 0x4510213a +1.12601399e11 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 135140181 { 0x80e1355 +1.10996496e145 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 483107482 { 0x1ccba29a +1.59089970e186 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1860796416 { 0x6ee98000 +1.82421875e94 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 287313920 { 0x11201000 +1.25048828e163 } : BV:32
=input.memlabel-mem--esp_end
1 : 2148110335 { 0x80098fff -2146856961 -1.7470691e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218443 ] -> 2, [ 1359218444; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 1359218443 ] -> memlabel-mem--esp, [ 1359218444; 1359218459 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1359218460; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 1359218459 { 0x5104071b +1.3146684e35 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
2370976543
=counter_example_end
=global nodece 5 num_edges_traversed 2
=global nodece 5 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 6
=global nodece 6 nodece z3.ce8001.num_edges_traversed2
=global nodece 6 nodece_path
=global nodece 6 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 6 nodece_cached_counterexample
=counter_example_begin z3.ce8001 fa79aa7f49c72d91dda22c84624a4eb
=input.dst.exreg.0.4
1 : 2290614277 { 0x88880005 -2004353019 -1.6250059e146 } : BV:32
=input.dst.exreg.6.0
1 : 1185554436 { 0x46aa2004 +1.32910203e14 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 732932422 { 0x2bafa946 +1.37235331e216 } : BV:32
=callee_save_const.1
1 : 14472596 { 0xdcd594 +1.72526788e130 } : BV:32
=callee_save_const.2
1 : 319873742 { 0x1310e2ce +1.13192152e167 } : BV:32
=callee_save_const.3
1 : 503222423 { 0x1dfe9097 +1.98878753e188 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 137, [ 4294963947; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4278187329 { 0xfefff541 -16779967 -1.99967205e126 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2147483650 { 0x80000002 -2147483646 -1.23e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967244, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967243 ] -> memlabel-mem--esp, [ 4294967244; 4294967259 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967260; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 137, [ 4294963947; 4294967243 ] -> 71, [ 4294967244; 4294967259 ] -> 0, [ 4294967260; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967259 { 0xffffffdb -37 -1.99999558e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 319873742 { 0x1310e2ce +1.13192152e167 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 732932422 { 0x2bafa946 +1.37235331e216 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 14472596 { 0xdcd594 +1.72526788e130 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 503222423 { 0x1dfe9097 +1.98878753e188 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967259 ] -> 71, [ 4294967260; 4294967260 ] -> 0, [ 4294967261; 4294967261 ] -> 0, [ 4294967262; 4294967262 ] -> 0, [ 4294967263; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967259 ] -> 71, [ 4294967260; 4294967260 ] -> 0, [ 4294967261; 4294967261 ] -> 0, [ 4294967262; 4294967262 ] -> 0, [ 4294967263; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1054415777 { 0x3ed91ba1 +1.69615566e254 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 498272761 { 0x1db309f9 +1.39874184e188 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1838728993 { 0x6d98c721 +1.19357693e92 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1084139995 { 0x409ea9db +1.23955857e2 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 439514091 { 0x1a3273eb +1.39416253e181 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1833664156 { 0x6d4b7e9c +1.58980131e91 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1185554576 { 0x46aa2090 +1.32911872e14 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1054415777 { 0x3ed91ba1 +1.69615566e254 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 498272761 { 0x1db309f9 +1.39874184e188 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1838728993 { 0x6d98c721 +1.19357693e92 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1084139995 { 0x409ea9db +1.23955857e2 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 439514091 { 0x1a3273eb +1.39416253e181 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1833664156 { 0x6d4b7e9c +1.58980131e91 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967243 ] -> 71, [ 4294967244; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967243 ] -> memlabel-mem--esp, [ 4294967244; 4294967259 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967260; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967259 { 0xffffffdb -37 -1.99999558e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3258788417
=counter_example_end
=global nodece 6 num_edges_traversed 2
=global nodece 6 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 7
=global nodece 7 nodece z3v487.ce8134.num_edges_traversed2
=global nodece 7 nodece_path
=global nodece 7 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 7 nodece_cached_counterexample
=counter_example_begin z3v487.ce8134 5d503d60bb5519561a826b48a0c77d
=input.dst.exreg.0.4
1 : 2248146954 { 0x8600000a -2046820342 -1.119e141 } : BV:32
=input.dst.exreg.6.0
1 : 1080866545 { 0x406cb6f1 +1.84933292e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 1665805147 { 0x634a2b5b +1.57944810e71 } : BV:32
=callee_save_const.2
1 : 497648046 { 0x1da981ae +1.32427000e188 } : BV:32
=callee_save_const.3
1 : 1145416289 { 0x4445aa61 +1.54426205e9 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 19 { 0x13 +1.226e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 10 { 0xa +1.119e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4227858428, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 497648046 { 0x1da981ae +1.32427000e188 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1665805147 { 0x634a2b5b +1.57944810e71 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1145416289 { 0x4445aa61 +1.54426205e9 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1476094835 { 0x57fb6b73 +1.96421658e48 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1092355515 { 0x411c05bb +1.21892488e3 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 302329018 { 0x12052cba +1.4042744e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 2099539181 { 0x7d246ced +1.28457415e123 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 284231476 { 0x10f10734 +1.88303232e162 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1080866480 { 0x406cb6b0 +1.84932518e1 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1476094835 { 0x57fb6b73 +1.96421658e48 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1092355515 { 0x411c05bb +1.21892488e3 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 302329018 { 0x12052cba +1.4042744e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2099539181 { 0x7d246ced +1.28457415e123 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 284231476 { 0x10f10734 +1.88303232e162 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221225472 { 0xc0000000 -1073741824 -1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 267265513 { 0xfee25e9 +1.86053192e160 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1038670483
=counter_example_end
=global nodece 7 num_edges_traversed 2
=global nodece 7 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 8
=global nodece 8 nodece z3.ce8135.num_edges_traversed2
=global nodece 8 nodece_path
=global nodece 8 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 8 nodece_cached_counterexample
=counter_example_begin z3.ce8135 5e2bd8fd8cf02b8aab7bfe86d50f26
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 656588967 { 0x2722c0a7 +1.27150428e207 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 1703718086 { 0x658cacc6 +1.9902262e76 } : BV:32
=callee_save_const.2
1 : 1534446992 { 0x5b75cd90 +1.92033576e55 } : BV:32
=callee_save_const.3
1 : 46749147 { 0x2c955db +1.57293260e134 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1534446992 { 0x5b75cd90 +1.92033576e55 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1703718086 { 0x658cacc6 +1.9902262e76 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 46749147 { 0x2c955db +1.57293260e134 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 846426522 { 0x3273719a +1.90190434e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 2084712337 { 0x7c422f91 +1.51707661e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1150552826 { 0x44940afa +1.15658497e10 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1822267994 { 0x6c9d9a5a +1.23127293e90 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 2128570853 { 0x7edf69e5 +1.74541914e126 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 656588978 { 0x2722c0b2 +1.27150559e207 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 846426522 { 0x3273719a +1.90190434e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 2084712337 { 0x7c422f91 +1.51707661e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1150552826 { 0x44940afa +1.15658497e10 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1822267994 { 0x6c9d9a5a +1.23127293e90 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2128570853 { 0x7edf69e5 +1.74541914e126 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 267265513 { 0xfee25e9 +1.86053192e160 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1044116899
=counter_example_end
=global nodece 8 num_edges_traversed 2
=global nodece 8 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 9
=global nodece 9 nodece z3v487.ce8268.num_edges_traversed2
=global nodece 9 nodece_path
=global nodece 9 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 9 nodece_cached_counterexample
=counter_example_begin z3v487.ce8268 e3570dd64ffb0c4b1f7455a577133c
=input.dst.exreg.0.4
1 : 961333760 { 0x394cca00 +1.59991455e243 } : BV:32
=input.dst.exreg.6.0
1 : 1926189685 { 0x72cf5275 +1.61970388e102 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 855462221 { 0x32fd514d +1.97904360e230 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 4, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 32572406 { 0x1f103f6 +1.88293337e132 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 6422 { 0x1916 +1.76556e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 4, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 855462221 { 0x32fd514d +1.97904360e230 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 371228583 { 0x16207fa7 +1.25389564e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 251678240 { 0xf004e20 +1.238418e159 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 508425994 { 0x1e4df70a +1.60910153e189 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1893450474 { 0x70dbc2ea +1.71688580e98 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1848732155 { 0x6e3169fb +1.38604676e93 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1926191664 { 0x72cf5a30 +1.61993980e102 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 371228583 { 0x16207fa7 +1.25389564e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 251678240 { 0xf004e20 +1.238418e159 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 508425994 { 0x1e4df70a +1.60910153e189 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1893450474 { 0x70dbc2ea +1.71688580e98 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1848732155 { 0x6e3169fb +1.38604676e93 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2081447936 { 0x7c106000 +1.12792968e121 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 66072576 { 0x3f03000 +1.87646484e136 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147520511 { 0x80008fff -2147446785 -1.439441e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 3880244140 { 0xe747d3ac -414723156 -1.56114721e79 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1701144241
=counter_example_end
=global nodece 9 num_edges_traversed 2
=global nodece 9 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 10
=global nodece 10 nodece z3.ce8269.num_edges_traversed2
=global nodece 10 nodece_path
=global nodece 10 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 10 nodece_cached_counterexample
=counter_example_begin z3.ce8269 6221cd2d03d9d6aa029e0b85b11
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 1201087218 { 0x479722f2 +1.18075394e16 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 1706571492 { 0x65b836e4 +1.43917512e76 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 141, [ 4294963205; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 141, [ 4294963205; 4294967259 ] -> 9, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1706571492 { 0x65b836e4 +1.43917512e76 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967275 ] -> 9, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967275 ] -> 9, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 824253994 { 0x31211e2a +1.25873303e227 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1208407610 { 0x4806d63a +1.5341267e17 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1118844893 { 0x42b037dd +1.37670481e6 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 448957498 { 0x1ac28c3a +1.51990437e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 486217371 { 0x1cfb169b +1.96162736e186 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1201087154 { 0x479722b2 +1.18074631e16 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 824253994 { 0x31211e2a +1.25873303e227 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1208407610 { 0x4806d63a +1.5341267e17 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1118844893 { 0x42b037dd +1.37670481e6 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 448957498 { 0x1ac28c3a +1.51990437e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 486217371 { 0x1cfb169b +1.96162736e186 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 3880244140 { 0xe747d3ac -414723156 -1.56114721e79 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967259 ] -> 9, [ 4294967260; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
924262317
=counter_example_end
=global nodece 10 num_edges_traversed 2
=global nodece 10 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 11
=global nodece 11 nodece z3v487.ce8402.num_edges_traversed2
=global nodece 11 nodece_path
=global nodece 11 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 11 nodece_cached_counterexample
=counter_example_begin z3v487.ce8402 792ec5302810fe907a689f4e5f1e4e2
=input.dst.exreg.0.4
1 : 4146085888 { 0xf7204000 -148881408 -1.25195312e111 } : BV:32
=input.dst.exreg.6.0
1 : 981978828 { 0x3a87cecc +1.6099843e246 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 15794176 { 0xf10000 +1.88281250e130 } : BV:32
=callee_save_const.1
1 : 67108864 { 0x4000000 +1.0e137 } : BV:32
=callee_save_const.2
1 : 369475584 { 0x1605c000 +1.4492187e173 } : BV:32
=callee_save_const.3
1 : 85991434 { 0x520200a +1.25097775e139 } : BV:32
=retaddr_const
1 : 68419584 { 0x4140000 +1.15625000e137 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2961702939 { 0xb088001b -1333264357 -1.6250321e226 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3399745450 { 0xcaa3ffaa -895221846 -1.28123974e22 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 941622460, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 941622459 ] -> memlabel-mem--esp, [ 941622460; 941622475 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 941622476; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 941622475 { 0x382004cb +1.25014626e241 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 369475584 { 0x1605c000 +1.4492187e173 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 15794176 { 0xf10000 +1.88281250e130 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 67108864 { 0x4000000 +1.0e137 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 85991434 { 0x520200a +1.25097775e139 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1527914284 { 0x5b121f2c +1.14157629e55 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 2019873472 { 0x7864d2c0 +1.78768157e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1471798893 { 0x57b9de6d +1.45210039e48 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 3297779 { 0x3251f3 +1.39312589e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 814132694 { 0x3086add6 +1.5218005e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 844831307 { 0x325b1a4b +1.71173989e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 981976600 { 0x3a87c618 +1.6073284e246 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1527914284 { 0x5b121f2c +1.14157629e55 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 2019873472 { 0x7864d2c0 +1.78768157e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1471798893 { 0x57b9de6d +1.45210039e48 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 3297779 { 0x3251f3 +1.39312589e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 814132694 { 0x3086add6 +1.5218005e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 844831307 { 0x325b1a4b +1.71173989e229 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2768699392 { 0xa5070000 -1526267904 -1.5468750e203 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 8388608 { 0x800000 +1.0e130 } : BV:32
=input.memlabel-mem--esp_end
1 : 2777087999 { 0xa586ffff -1517879297 -1.5468738e204 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 132160 { 0x20440 +1.1575469e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 941622459 ] -> memlabel-mem--esp, [ 941622460; 941622475 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 941622476; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 941622475 { 0x382004cb +1.25014626e241 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
4046332565
=counter_example_end
=global nodece 11 num_edges_traversed 2
=global nodece 11 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 12
=global nodece 12 nodece z3.ce8403.num_edges_traversed2
=global nodece 12 nodece_path
=global nodece 12 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 12 nodece_cached_counterexample
=counter_example_begin z3.ce8403 9f12d44dace7f159f41a8cdbdb2c16a
=input.dst.exreg.0.4
1 : 2147483649 { 0x80000001 -2147483647 -1.11e129 } : BV:32
=input.dst.exreg.6.0
1 : 2048811536 { 0x7a1e6210 +1.23736763e117 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 38068416 { 0x244e0c0 +1.53810882e133 } : BV:32
=callee_save_const.1
1 : 37957634 { 0x2433002 +1.52490258e133 } : BV:32
=callee_save_const.2
1 : 289692076 { 0x114459ac +1.53398656e163 } : BV:32
=callee_save_const.3
1 : 11542407 { 0xb01f87 +1.37596213e130 } : BV:32
=retaddr_const
1 : 51651586 { 0x3142402 +1.15734887e135 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 270663777 { 0x10220061 +1.26563656e161 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2189426684, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2189426683 ] -> memlabel-mem--esp, [ 2189426684; 2189426699 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2189426700; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 2189426683 ] -> 22, [ 2189426684; 2189426699 ] -> 0, [ 2189426700; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2189426699 { 0x8280000b -2105540597 -1.131e134 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 289692076 { 0x114459ac +1.53398656e163 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 38068416 { 0x244e0c0 +1.53810882e133 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 37957634 { 0x2433002 +1.52490258e133 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 11542407 { 0xb01f87 +1.37596213e130 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426699 ] -> 22, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426699 ] -> 22, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 560858718 { 0x216e065e +1.85956931e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 513793365 { 0x1e9fdd55 +1.24894201e190 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 326422102 { 0x1374ce56 +1.91254687e167 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 30212680 { 0x1cd0248 +1.60163211e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 372023547 { 0x162ca0fb +1.34866273e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 786754767 { 0x2ee4eccf +1.78847682e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 2048811664 { 0x7a1e6290 +1.23738288e117 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 560858718 { 0x216e065e +1.85956931e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 513793365 { 0x1e9fdd55 +1.24894201e190 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 326422102 { 0x1374ce56 +1.91254687e167 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 30212680 { 0x1cd0248 +1.60163211e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 372023547 { 0x162ca0fb +1.34866273e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 786754767 { 0x2ee4eccf +1.78847682e222 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2224947200 { 0x849e0000 -2070020096 -1.23437500e138 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 346161152 { 0x14a20000 +1.26562500e170 } : BV:32
=input.memlabel-mem--esp_end
1 : 2571108351 { 0x993fffff -1723858945 -1.49999988e179 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 59508945 { 0x38c08d1 +1.9401905e136 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426683 ] -> 22, [ 2189426684; 2189426699 ] -> 0, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2189426683 ] -> memlabel-mem--esp, [ 2189426684; 2189426699 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2189426700; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2189426699 { 0x8280000b -2105540597 -1.131e134 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3340121225
=counter_example_end
=global nodece 12 num_edges_traversed 2
=global nodece 12 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 13
=global nodece 13 nodece z3v487.ce8536.num_edges_traversed2
=global nodece 13 nodece_path
=global nodece 13 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 13 nodece_cached_counterexample
=counter_example_begin z3v487.ce8536 3b9a11e6593637bbe215a7ccffa7f4e
=input.dst.exreg.0.4
1 : 2248146954 { 0x8600000a -2046820342 -1.119e141 } : BV:32
=input.dst.exreg.6.0
1 : 1070323266 { 0x3fcbd642 +1.59247612e0 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1823976423 { 0x6cb7abe7 +1.43493354e90 } : BV:32
=callee_save_const.1
1 : 1958779156 { 0x74c09914 +1.50467157e106 } : BV:32
=callee_save_const.2
1 : 1365039214 { 0x515cd86e +1.72535490e35 } : BV:32
=callee_save_const.3
1 : 1131506071 { 0x43716997 +1.88603484e7 } : BV:32
=retaddr_const
1 : 1801759133 { 0x6b64a99d +1.78642618e87 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 19 { 0x13 +1.226e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 10 { 0xa +1.119e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4227858428, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1365039214 { 0x515cd86e +1.72535490e35 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1823976423 { 0x6cb7abe7 +1.43493354e90 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1958779156 { 0x74c09914 +1.50467157e106 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1131506071 { 0x43716997 +1.88603484e7 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 276616483 { 0x107cd523 +1.97525441e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1046144772 { 0x3e5ae704 +1.71017503e253 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 704154156 { 0x29f88a2c +1.94171667e212 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1437736206 { 0x55b21d0e +1.39151167e44 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 817432878 { 0x30b9092e +1.44559264e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 972308083 { 0x39f43e73 +1.90815579e244 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1070323346 { 0x3fcbd692 +1.59248566e0 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 276616483 { 0x107cd523 +1.97525441e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1046144772 { 0x3e5ae704 +1.71017503e253 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 704154156 { 0x29f88a2c +1.94171667e212 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1437736206 { 0x55b21d0e +1.39151167e44 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 817432878 { 0x30b9092e +1.44559264e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 972308083 { 0x39f43e73 +1.90815579e244 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221225472 { 0xc0000000 -1073741824 -1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=callee_save_const.2_0_0
1 : 0 { 0x0 } : BV:1
=retaddr_const_0_0
1 : 1 { 0x1 } : BV:1
=counter_example.random_seed
2112729204
=counter_example_end
=global nodece 13 num_edges_traversed 2
=global nodece 13 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 14
=global nodece 14 nodece z3.ce8537.num_edges_traversed2
=global nodece 14 nodece_path
=global nodece 14 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 14 nodece_cached_counterexample
=counter_example_begin z3.ce8537 f3e415c99c6cb86b4efc3c1290a1c9e8
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 1164769268 { 0x456cf7f4 +1.85131692e11 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 733968883 { 0x2bbf79f3 +1.49590909e216 } : BV:32
=callee_save_const.1
1 : 726457716 { 0x2b4cdd74 +1.60050821e215 } : BV:32
=callee_save_const.2
1 : 128661410 { 0x7ab37a2 +1.33763527e144 } : BV:32
=callee_save_const.3
1 : 623585743 { 0x252b29cf +1.33721339e203 } : BV:32
=retaddr_const
1 : 555148651 { 0x2116e56b +1.17887628e195 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 128661410 { 0x7ab37a2 +1.33763527e144 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 733968883 { 0x2bbf79f3 +1.49590909e216 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 726457716 { 0x2b4cdd74 +1.60050821e215 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 623585743 { 0x252b29cf +1.33721339e203 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 710012367 { 0x2a51edcf +1.64006984e213 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1311408432 { 0x4e2a8130 +1.33206748e29 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1207258463 { 0x47f54d5f +1.91642367e16 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 31337214 { 0x1de2afe +1.73568701e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1386192941 { 0x529fa02d +1.24707567e38 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 605373322 { 0x2415438a +1.16612362e201 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1164769200 { 0x456cf7b0 +1.85130882e11 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 710012367 { 0x2a51edcf +1.64006984e213 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1311408432 { 0x4e2a8130 +1.33206748e29 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1207258463 { 0x47f54d5f +1.91642367e16 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 31337214 { 0x1de2afe +1.73568701e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1386192941 { 0x529fa02d +1.24707567e38 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 605373322 { 0x2415438a +1.16612362e201 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=callee_save_const.2_0_0
1 : 0 { 0x0 } : BV:1
=retaddr_const_0_0
1 : 1 { 0x1 } : BV:1
=counter_example.random_seed
1645585881
=counter_example_end
=global nodece 14 num_edges_traversed 2
=global nodece 14 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 15
=global nodece 15 nodece z3v487.ce8674.num_edges_traversed2
=global nodece 15 nodece_path
=global nodece 15 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 15 nodece_cached_counterexample
=counter_example_begin z3v487.ce8674 658e7c9dd331f482f147956abc2532a
=input.dst.exreg.0.4
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.dst.exreg.6.0
1 : 455899565 { 0x1b2c79ad +1.34746325e183 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 855630500 { 0x32ffe2a4 +1.99910402e230 } : BV:32
=callee_save_const.1
1 : 909094570 { 0x362faeaa +1.37251782e237 } : BV:32
=callee_save_const.2
1 : 1248971970 { 0x4a71ccc2 +1.88906121e21 } : BV:32
=callee_save_const.3
1 : 1178031101 { 0x463753fd +1.43225061e13 } : BV:32
=retaddr_const
1 : 1234694266 { 0x4997f07a +1.18702626e20 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 1006632959 ] -> 5, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1392517120 { 0x53002000 +1.97656e39 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2669682687 { 0x9f201fff -1625284609 -1.25097644e191 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 402653180, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 402653179 ] -> memlabel-mem--esp, [ 402653180; 402653195 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 402653196; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653179 ] -> 5, [ 402653180; 402653195 ] -> 0, [ 402653196; 1006632959 ] -> 5, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 402653195 { 0x1800000b +1.131e177 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1248971970 { 0x4a71ccc2 +1.88906121e21 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 855630500 { 0x32ffe2a4 +1.99910402e230 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 909094570 { 0x362faeaa +1.37251782e237 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1178031101 { 0x463753fd +1.43225061e13 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653195 ] -> 4, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653195 ] -> 4, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 694298166 { 0x29622636 +1.76679110e211 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 190395838 { 0xb5935be +1.69695258e151 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 2018866464 { 0x78557520 +1.66763687e113 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1277165568 { 0x4c200000 +1.25000000e25 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 780505005 { 0x2e858fad +1.4344713e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1605290620 { 0x5faeca7c +1.36555433e64 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 455897400 { 0x1b2c7138 +1.34720516e183 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 694298166 { 0x29622636 +1.76679110e211 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 190395838 { 0xb5935be +1.69695258e151 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 2018866464 { 0x78557520 +1.66763687e113 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1277165568 { 0x4c200000 +1.25000000e25 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 780505005 { 0x2e858fad +1.4344713e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1605290620 { 0x5faeca7c +1.36555433e64 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1006632960 { 0x3c000000 +1.0e249 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 134217728 { 0x8000000 +1.0e145 } : BV:32
=input.memlabel-mem--esp_end
1 : 1140850687 { 0x43ffffff +1.99999988e8 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653179 ] -> 4, [ 402653180; 402653195 ] -> 0, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 402653179 ] -> memlabel-mem--esp, [ 402653180; 402653195 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 402653196; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 402653195 { 0x1800000b +1.131e177 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
2432481153
=counter_example_end
=global nodece 15 num_edges_traversed 2
=global nodece 15 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 16
=global nodece 16 nodece z3v487.ce8767.num_edges_traversed1
=global nodece 16 nodece_path
=global nodece 16 nodece_path.graph_edge_composition
(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)
=global nodece 16 nodece_cached_counterexample
=counter_example_begin z3v487.ce8767 e91da8151eb1e639c9bc405b13907b
=input.dst.exreg.0.4
1 : 2166358016 { 0x81200000 -2128609280 -1.25000000e131 } : BV:32
=input.dst.exreg.6.0
1 : 1284621553 { 0x4c91c4f1 +1.13882267e26 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 573640674 { 0x22310fe2 +1.38329720e197 } : BV:32
=callee_save_const.1
1 : 1415563455 { 0x545fc8bf +1.74831378e41 } : BV:32
=callee_save_const.2
1 : 554555587 { 0x210dd8c3 +1.10817754e195 } : BV:32
=callee_save_const.3
1 : 1616463068 { 0x605944dc +1.69741392e65 } : BV:32
=retaddr_const
1 : 381254654 { 0x16b97bfe +1.44909644e174 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 15 { 0xf +1.178e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2248167158 { 0x86004ef6 -2046800138 -1.240969e141 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 554555587 { 0x210dd8c3 +1.10817754e195 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 573640674 { 0x22310fe2 +1.38329720e197 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1415563455 { 0x545fc8bf +1.74831378e41 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1616463068 { 0x605944dc +1.69741392e65 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 254, [ 2147483661; 2147483661 ] -> 123, [ 2147483662; 2147483662 ] -> 185, [ 2147483663; 2147483663 ] -> 22, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 254, [ 2147483661; 2147483661 ] -> 123, [ 2147483662; 2147483662 ] -> 185, [ 2147483663; 2147483663 ] -> 22, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 591244415 { 0x233dac7f +1.48182666e199 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1538528099 { 0x5bb41363 +1.40684163e56 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1802911788 { 0x6b76402c +1.92383337e87 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 447668333 { 0x1aaee06d +1.36622393e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1900686111 { 0x714a2b1f +1.57944095e99 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1990292405 { 0x76a173b5 +1.26134359e110 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1284623408 { 0x4c91cc30 +1.13904380e26 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 591244415 { 0x233dac7f +1.48182666e199 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1538528099 { 0x5bb41363 +1.40684163e56 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1802911788 { 0x6b76402c +1.92383337e87 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 447668333 { 0x1aaee06d +1.36622393e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1900686111 { 0x714a2b1f +1.57944095e99 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1990292405 { 0x76a173b5 +1.26134359e110 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 201326592 { 0xc000000 +1.0e153 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1979748352 { 0x76009000 +1.439453e109 } : BV:32
=input.memlabel-mem--esp_end
1 : 2181074943 { 0x82008fff -2113892353 -1.439441e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=counter_example.random_seed
1644667384
=counter_example_end
=global nodece 16 num_edges_traversed 1
=global nodece 16 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3
=global nodece 17
=global nodece 17 nodece z3v487.ce8849.num_edges_traversed1
=global nodece 17 nodece_path
=global nodece 17 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 17 nodece_cached_counterexample
=counter_example_begin z3v487.ce8849 ede06863cd0801e9c39ee6fb9148b54
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
691531229
=counter_example_end
=global nodece 17 num_edges_traversed 1
=global nodece 17 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 18
=global nodece 18 nodece z3.ce8850.num_edges_traversed1
=global nodece 18 nodece_path
=global nodece 18 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 18 nodece_cached_counterexample
=counter_example_begin z3.ce8850 f036aae4faa4dfba46b731148b5bd27a
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4055 { 0xfd7 +1.48339e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
322959500
=counter_example_end
=global nodece 18 num_edges_traversed 1
=global nodece 18 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 19
=global nodece 19 nodece z3v487.ce8913.num_edges_traversed1
=global nodece 19 nodece_path
=global nodece 19 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 19 nodece_cached_counterexample
=counter_example_begin z3v487.ce8913 a2d6feb116428945dfe5e4d3f55dcb2d
=input.dst.exreg.0.4
1 : 3223068681 { 0xc01c2009 -1071898615 -1.21972763e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147538923 { 0x8000d7eb -2147428373 -1.658929e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4194 { 0x1062 +1.49996e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 53247 ] -> memlabel-mem--heap, [ 53248; 311819 ] -> memlabel-mem--esp, [ 311820; 311835 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 311836; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 311835 { 0x4c21b +1.3717362e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147434496 { 0x7fff4000 +1.99414062e128 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 53248 { 0xd000 +1.634765e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 53247 ] -> memlabel-mem--heap, [ 53248; 311819 ] -> memlabel-mem--esp, [ 311820; 311835 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 311836; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 311835 { 0x4c21b +1.3717362e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1344815548
=counter_example_end
=global nodece 19 num_edges_traversed 1
=global nodece 19 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 20
=global nodece 20 nodece z3v487.ce8971.num_edges_traversed1
=global nodece 20 nodece_path
=global nodece 20 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 20 nodece_cached_counterexample
=counter_example_begin z3v487.ce8971 675d45b644088f8333bcc90d4deba89
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 2155905152 { 0x80808080 -2139062144 -1.392150e130 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294909950 { 0xffff1ffe -57346 -1.99316382e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1073682262 { 0x3fff1756 +1.99289965e0 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147422207 ] -> memlabel-mem--heap, [ 2147422208; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 3221164031 ] -> memlabel-mem--esp, [ 3221164032; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147422207 ] -> 0, [ 2147422208; 3221164031 ] -> 128, [ 3221164032; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147422208 { 0x7fff1000 +1.99267578e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 3221164031 { 0xbfff0fff -1073803265 -1.99267566e0 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147422207 ] -> 0, [ 2147422208; 3221164031 ] -> 128, [ 3221164032; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147422207 ] -> memlabel-mem--heap, [ 2147422208; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 3221164031 ] -> memlabel-mem--esp, [ 3221164032; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 2155905152 { 0x80808080 -2139062144 -1.392150e130 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 128, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
720528026
=counter_example_end
=global nodece 20 num_edges_traversed 1
=global nodece 20 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 21
=global nodece 21 nodece z3.ce8972.num_edges_traversed1
=global nodece 21 nodece_path
=global nodece 21 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 21 nodece_cached_counterexample
=counter_example_begin z3.ce8972 84eeda8a67c9613a5483921e48a3aa
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 16843009 { 0x1010101 +1.784313e131 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4055 { 0xfd7 +1.48339e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294963199 ] -> 0, [ 4294963200; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294963199 ] -> 0, [ 4294963200; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 16843009 { 0x1010101 +1.784313e131 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
198034307
=counter_example_end
=global nodece 21 num_edges_traversed 1
=global nodece 21 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 22
=global nodece 22 nodece z3v487.ce9035.num_edges_traversed2
=global nodece 22 nodece_path
=global nodece 22 nodece_path.graph_edge_composition
((Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)*(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2))
=global nodece 22 nodece_cached_counterexample
=counter_example_begin z3v487.ce9035 374db2e6f348cafda9649eca9103286
=input.dst.exreg.0.4
1 : 3222274057 { 0xc0100009 -1072693239 -1.12500107e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4193251298 { 0xf9efefe2 -101715998 -1.87450814e116 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1409155080 { 0x53fe0008 +1.98437595e40 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 33554432, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 33554439 { 0x2000007 +1.83e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 33554431 ] -> memlabel-mem--heap, [ 33554432; 33554439 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 33554440; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2449473536 { 0x92000000 -1845493760 -1.0e165 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.memlabel-mem--esp_end
1 : 4060086271 { 0xf1ffffff -234881025 -1.99999988e100 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 33554431 ] -> memlabel-mem--heap, [ 33554432; 33554439 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 33554440; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 33554439 { 0x2000007 +1.83e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
512508528
=counter_example_end
=global nodece 22 num_edges_traversed 2
=global nodece 22 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1 -> Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 23
=global nodece 23 nodece z3.ce9036.num_edges_traversed1
=global nodece 23 nodece_path
=global nodece 23 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 23 nodece_cached_counterexample
=counter_example_begin z3.ce9036 ff226481d0ab98386d32c6ae52368919
=input.dst.exreg.0.4
1 : 2684374797 { 0xa0004f0d -1610592499 -1.241243e193 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 367 { 0x16f +1.4374e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 1, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967035 ] -> memlabel-mem--esp, [ 4294967036; 4294967051 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967052; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967051 { 0xffffff0b -245 -1.99997079e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967035 ] -> memlabel-mem--esp, [ 4294967036; 4294967051 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967052; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967051 { 0xffffff0b -245 -1.99997079e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
693402750
=counter_example_end
=global nodece 23 num_edges_traversed 1
=global nodece 23 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 24
=global nodece 24 nodece z3v487.ce9158.num_edges_traversed1
=global nodece 24 nodece_path
=global nodece 24 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 24 nodece_cached_counterexample
=counter_example_begin z3v487.ce9158 e06f6ea2c140e9656222b19da68a6ddc
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1246940183
=counter_example_end
=global nodece 24 num_edges_traversed 1
=global nodece 24 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 25
=global nodece 25 nodece z3v487.ce9216.num_edges_traversed1
=global nodece 25 nodece_path
=global nodece 25 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 25 nodece_cached_counterexample
=counter_example_begin z3v487.ce9216 cb6a2cf45b0d213fc8ad16960e25983
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1362757102
=counter_example_end
=global nodece 25 num_edges_traversed 1
=global nodece 25 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 26
=global nodece 26 nodece z3v487.ce9274.num_edges_traversed1
=global nodece 26 nodece_path
=global nodece 26 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 26 nodece_cached_counterexample
=counter_example_begin z3v487.ce9274 7b35b9dfd6ce97fdb0764c5bae1939c4
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1050020550
=counter_example_end
=global nodece 26 num_edges_traversed 1
=global nodece 26 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 27
=global nodece 27 nodece z3v487.ce9332.num_edges_traversed1
=global nodece 27 nodece_path
=global nodece 27 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 27 nodece_cached_counterexample
=counter_example_begin z3v487.ce9332 5f3ec8e437e8f5d7decc38e45bd9659c
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1796375271
=counter_example_end
=global nodece 27 num_edges_traversed 1
=global nodece 27 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 28
=global nodece 28 nodece z3v487.ce9390.num_edges_traversed1
=global nodece 28 nodece_path
=global nodece 28 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 28 nodece_cached_counterexample
=counter_example_begin z3v487.ce9390 9f6473b913eb5025f9dbb766dcc3c08e
=input.dst.exreg.0.4
1 : 2125594635 { 0x7eb2000b +1.39062631e126 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 536683056 { 0x1ffd2230 +1.97760581e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 536683063 { 0x1ffd2237 +1.97760665e192 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147287039 ] -> memlabel-mem--heap, [ 2147287040; 2147385339 ] -> memlabel-mem--esp, [ 2147385340; 2147385355 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147385356; 2684157951 ] -> memlabel-mem--esp, [ 2684157952; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147385355 { 0x7ffe800b +1.98828256e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 536870912 { 0x20000000 +1.0e193 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147287040 { 0x7ffd0000 +1.97656250e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 2684157951 { 0x9ffcffff -1610809345 -1.97656238e192 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147287039 ] -> memlabel-mem--heap, [ 2147287040; 2147385339 ] -> memlabel-mem--esp, [ 2147385340; 2147385355 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147385356; 2684157951 ] -> memlabel-mem--esp, [ 2684157952; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147385355 { 0x7ffe800b +1.98828256e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1018157499
=counter_example_end
=global nodece 28 num_edges_traversed 1
=global nodece 28 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 29
=global nodece 29 nodece z3v487.ce9448.num_edges_traversed1
=global nodece 29 nodece_path
=global nodece 29 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 29 nodece_cached_counterexample
=counter_example_begin z3v487.ce9448 dd5131c280b07ccb7cc2d584f1d98eaf
=input.dst.exreg.0.4
1 : 947650560 { 0x387c0000 +1.96875000e241 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 2155905024 { 0x80808000 -2139062272 -1.390625e130 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 5 { 0x5 +1.59e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 6 { 0x6 +1.71e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 63 { 0x3f +1.751e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 64 { 0x40 +1.762e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 11 { 0xb +1.131e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1073741824 ] -> 0, [ 1073741825; 1241513983 ] -> 2, [ 1241513984; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1910249627 { 0x71dc189b +1.71950089e100 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1073741824 ] -> 0, [ 1073741825; 1241513983 ] -> 2, [ 1241513984; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 11 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 12; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1241513984 { 0x4a000000 +1.0e21 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 2315255807 { 0x89ffffff -1979711489 -1.99999988e148 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 1910249627 { 0x71dc189b +1.71950089e100 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 11 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 12; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 11 { 0xb +1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=solver-mem_12
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1640594339
=counter_example_end
=global nodece 29 num_edges_traversed 1
=global nodece 29 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 30
=global nodece 30 nodece z3.ce9449.num_edges_traversed1
=global nodece 30 nodece_path
=global nodece 30 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 30 nodece_cached_counterexample
=counter_example_begin z3.ce9449 ea26aeb1477b1881bd4f3f3a7ac4cb7f
=input.dst.exreg.0.4
1 : 2621440 { 0x280000 +1.31250000e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1073745906 { 0x40000ff2 +1.48661e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2148436292 { 0x800e8944 -2146531004 -1.11356401e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 255 { 0xff +1.3039e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 256 { 0x100 +1.3051e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2706575367 { 0xa1531007 -1588391929 -1.64892661e195 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 36843 ] -> 0, [ 36844; 36844 ] -> 64, [ 36845; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2719755 { 0x29800b +1.32422006e129 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 36843 ] -> 0, [ 36844; 36844 ] -> 64, [ 36845; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 2706575359 ] -> memlabel-mem--heap, [ 2706575360; 2706575367 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2706575368; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 537694208 { 0x200c9000 +1.9814453e193 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 32768 { 0x8000 +1.390625e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 537726975 { 0x200d0fff +1.10205066e193 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2719755 { 0x29800b +1.32422006e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 2706575359 ] -> memlabel-mem--heap, [ 2706575360; 2706575367 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2706575368; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2706575367 { 0xa1531007 -1588391929 -1.64892661e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=solver-mem_12
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2010589799
=counter_example_end
=global nodece 30 num_edges_traversed 1
=global nodece 30 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 31
=global nodece 31 nodece z3v487.ce9590.num_edges_traversed1
=global nodece 31 nodece_path
=global nodece 31 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 31 nodece_cached_counterexample
=counter_example_begin z3v487.ce9590 cc1a7f7ca88e2186951fe77ec12958a
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1110525289
=counter_example_end
=global nodece 31 num_edges_traversed 1
=global nodece 31 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 32
=global nodece 32 nodece z3.ce9591.num_edges_traversed1
=global nodece 32 nodece_path
=global nodece 32 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 32 nodece_cached_counterexample
=counter_example_begin z3.ce9591 18cef567e89bcaaccec9f04ee88f4f
=input.dst.exreg.0.4
1 : 3272609793 { 0xc3101001 -1022357503 -1.12548840e7 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1073758207 { 0x40003fff +1.195300e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 64 { 0x40 +1.762e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 1610612743 { 0x60000007 +1.83e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 306188811 { 0x1240120b +1.50055062e165 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1610612735 ] -> 0, [ 1610612736; 1610612743 ] -> 1, [ 1610612744; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 1610612743 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1610612744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073733632 { 0x3fffe000 +1.99902343e0 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 12288 { 0x3000 +1.146484e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 1073745919 { 0x40000fff +1.48816e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 306188811 { 0x1240120b +1.50055062e165 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1610612735 ] -> 0, [ 1610612736; 1610612743 ] -> 1, [ 1610612744; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 1610612743 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1610612744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 1610612743 { 0x60000007 +1.83e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1778288880
=counter_example_end
=global nodece 32 num_edges_traversed 1
=global nodece 32 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 33
=global nodece 33 nodece z3v487.ce9734.num_edges_traversed1
=global nodece 33 nodece_path
=global nodece 33 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 33 nodece_cached_counterexample
=counter_example_begin z3v487.ce9734 7e2871184ae4ce17e75dcaaf606cce7
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2038944465
=counter_example_end
=global nodece 33 num_edges_traversed 1
=global nodece 33 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 34
=global nodece 34 nodece z3v487.ce9845.num_edges_traversed1
=global nodece 34 nodece_path
=global nodece 34 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 34 nodece_cached_counterexample
=counter_example_begin z3v487.ce9845 1238ac7fa3664dd5ecea19c854a6744
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
220674984
=counter_example_end
=global nodece 34 num_edges_traversed 1
=global nodece 34 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 35
=global nodece 35 nodece z3v487.ce9956.num_edges_traversed1
=global nodece 35 nodece_path
=global nodece 35 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 35 nodece_cached_counterexample
=counter_example_begin z3v487.ce9956 bf97b82d754687bb3a97fb7b595555
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1861226951
=counter_example_end
=global nodece 35 num_edges_traversed 1
=global nodece 35 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=graph_with_ce done
=point_set for reason inductive-invariants
=inductive-invariants point_set global exprs map
=inductive-invariants point_set point_expr 1
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 3
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 5
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 7
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 11
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=inductive-invariants point_set point_expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=inductive-invariants point_set point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=inductive-invariants point_set point_expr 17
1 : retaddr_const : BV:32
=inductive-invariants point_set point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=inductive-invariants point_set point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=inductive-invariants point_set point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=inductive-invariants point_set point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=inductive-invariants point_set point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=inductive-invariants point_set point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=inductive-invariants point_set point_expr 28
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 29
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 30
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 31
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 32
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 34
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 35
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 36
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 37
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 38
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 39
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 42
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 44
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 46
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 48
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=inductive-invariants point_set point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=inductive-invariants point_set point_expr 81
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 82
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 83
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 84
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 85
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 86
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 87
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 88
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 89
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 90
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 91
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 92
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 93
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 94
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 95
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 96
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 97
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 98
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 99
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 100
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 101
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 102
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 103
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 104
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 105
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 106
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 107
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 108
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 109
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 110
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 111
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 112
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 113
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 114
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 115
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set global exprs map done
=inductive-invariants point_set points
=inductive-invariants point_set point z3v487.ce8134
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 18 for input.dst.sp=L0%0%d=sp
4227858444
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2147483648
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 21 for input.dst.exreg.0.3.L0%1%spver
497648046
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 23 for input.dst.exreg.0.6.L0%1%spver
1665805147
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 24 for input.dst.exreg.0.7.L0%1%spver
1145416289
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 25 for input.dst.exreg.0.4.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
267265513
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 done
=inductive-invariants point_set point z3.ce8537
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 17 for retaddr_const
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
31337214
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 21 for input.dst.exreg.0.3.L0%1%spver
128661410
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 22 for input.dst.exreg.0.5.L0%1%spver
733968883
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 23 for input.dst.exreg.0.6.L0%1%spver
726457716
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 24 for input.dst.exreg.0.7.L0%1%spver
623585743
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
693587218
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 done
=inductive-invariants point_set point z3v487.ce7866
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 17 for retaddr_const
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1399716225
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 21 for input.dst.exreg.0.3.L0%1%spver
1189521921
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 22 for input.dst.exreg.0.5.L0%1%spver
1266262569
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 23 for input.dst.exreg.0.6.L0%1%spver
177928919
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 24 for input.dst.exreg.0.7.L0%1%spver
989245581
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1124152292
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 done
=inductive-invariants point_set point z3v487.ce8674
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 17 for retaddr_const
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 18 for input.dst.sp=L0%0%d=sp
402653196
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1277165568
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 21 for input.dst.exreg.0.3.L0%1%spver
1248971970
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 22 for input.dst.exreg.0.5.L0%1%spver
855630500
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 23 for input.dst.exreg.0.6.L0%1%spver
909094570
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 24 for input.dst.exreg.0.7.L0%1%spver
1178031101
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 25 for input.dst.exreg.0.4.L0%2%spver
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
614343281
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 done
=inductive-invariants point_set point z3.ce8135
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2147483648
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 21 for input.dst.exreg.0.3.L0%1%spver
1534446992
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 23 for input.dst.exreg.0.6.L0%1%spver
1703718086
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 24 for input.dst.exreg.0.7.L0%1%spver
46749147
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
267265513
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 done
=inductive-invariants point_set point z3v487.ce8268
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 24 for input.dst.exreg.0.7.L0%1%spver
855462221
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
3880244140
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 done
=inductive-invariants point_set point z3.ce7867
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 17 for retaddr_const
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2021049466
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 21 for input.dst.exreg.0.3.L0%1%spver
557775600
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 22 for input.dst.exreg.0.5.L0%1%spver
1234188767
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 23 for input.dst.exreg.0.6.L0%1%spver
1079704204
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 24 for input.dst.exreg.0.7.L0%1%spver
272015058
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
948231559
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 done
=inductive-invariants point_set point z3.ce8269
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 24 for input.dst.exreg.0.7.L0%1%spver
1706571492
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
3880244140
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 done
=inductive-invariants point_set point z3v487.ce8767
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 17 for retaddr_const
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
447668333
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 21 for input.dst.exreg.0.3.L0%1%spver
554555587
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 22 for input.dst.exreg.0.5.L0%1%spver
573640674
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 23 for input.dst.exreg.0.6.L0%1%spver
1415563455
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 24 for input.dst.exreg.0.7.L0%1%spver
1616463068
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1721594739
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 done
=inductive-invariants point_set point z3v487.ce8402
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 17 for retaddr_const
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 18 for input.dst.sp=L0%0%d=sp
941622476
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
3297779
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 21 for input.dst.exreg.0.3.L0%1%spver
369475584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 22 for input.dst.exreg.0.5.L0%1%spver
15794176
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 23 for input.dst.exreg.0.6.L0%1%spver
67108864
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 24 for input.dst.exreg.0.7.L0%1%spver
85991434
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 25 for input.dst.exreg.0.4.L0%2%spver
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
132160
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 done
=inductive-invariants point_set point z3v487.ce8849
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 done
=inductive-invariants point_set point z3v487.ce9845
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 done
=inductive-invariants point_set point z3v487.ce8000
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 18 for input.dst.sp=L0%0%d=sp
1359218460
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1158684986
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 21 for input.dst.exreg.0.3.L0%1%spver
182432956
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 22 for input.dst.exreg.0.5.L0%1%spver
809982933
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 23 for input.dst.exreg.0.6.L0%1%spver
1153250723
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 24 for input.dst.exreg.0.7.L0%1%spver
1805428689
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 25 for input.dst.exreg.0.4.L0%2%spver
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
805770165
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 done
=inductive-invariants point_set point z3.ce8001
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 18 for input.dst.sp=L0%0%d=sp
4294967260
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1084139995
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 21 for input.dst.exreg.0.3.L0%1%spver
319873742
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 22 for input.dst.exreg.0.5.L0%1%spver
732932422
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 23 for input.dst.exreg.0.6.L0%1%spver
14472596
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 24 for input.dst.exreg.0.7.L0%1%spver
503222423
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1661336839
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 done
=inductive-invariants point_set point z3.ce8850
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 done
=inductive-invariants point_set point z3.ce8403
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 17 for retaddr_const
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 18 for input.dst.sp=L0%0%d=sp
2189426700
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
30212680
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 21 for input.dst.exreg.0.3.L0%1%spver
289692076
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 22 for input.dst.exreg.0.5.L0%1%spver
38068416
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 23 for input.dst.exreg.0.6.L0%1%spver
37957634
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 24 for input.dst.exreg.0.7.L0%1%spver
11542407
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 25 for input.dst.exreg.0.4.L0%2%spver
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
59508945
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 done
=inductive-invariants point_set point z3v487.ce9158
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 done
=inductive-invariants point_set point z3v487.ce8536
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 17 for retaddr_const
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 18 for input.dst.sp=L0%0%d=sp
4227858444
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1437736206
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 21 for input.dst.exreg.0.3.L0%1%spver
1365039214
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 22 for input.dst.exreg.0.5.L0%1%spver
1823976423
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 23 for input.dst.exreg.0.6.L0%1%spver
1958779156
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 24 for input.dst.exreg.0.7.L0%1%spver
1131506071
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 25 for input.dst.exreg.0.4.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2063572555
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 done
=inductive-invariants point_set point z3.ce8675
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 17 for retaddr_const
1339265355
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 21 for input.dst.exreg.0.3.L0%1%spver
105213780
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 22 for input.dst.exreg.0.5.L0%1%spver
176716684
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 23 for input.dst.exreg.0.6.L0%1%spver
1843948724
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 24 for input.dst.exreg.0.7.L0%1%spver
1097739511
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
628778508
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1339265355
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 done
=inductive-invariants point_set point z3.ce8768
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 17 for retaddr_const
873668766
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
784334685
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 21 for input.dst.exreg.0.3.L0%1%spver
2138056357
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 22 for input.dst.exreg.0.5.L0%1%spver
1265814353
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 23 for input.dst.exreg.0.6.L0%1%spver
882532319
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 24 for input.dst.exreg.0.7.L0%1%spver
592956121
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1388380318
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
873668766
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
0
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 done
=inductive-invariants point_set point z3v487.ce8913
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 18 for input.dst.sp=L0%0%d=sp
311836
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 25 for input.dst.exreg.0.4.L0%2%spver
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 done
=inductive-invariants point_set point z3.ce8914
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 18 for input.dst.sp=L0%0%d=sp
4294967260
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 done
=inductive-invariants point_set point z3v487.ce8971
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 17 for retaddr_const
2155905152
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
2155905152
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 done
=inductive-invariants point_set point z3.ce8972
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 17 for retaddr_const
16843009
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
16843009
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 done
=inductive-invariants point_set point z3v487.ce9035
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
33554432
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
33554432
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 done
=inductive-invariants point_set point z3.ce9036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 18 for input.dst.sp=L0%0%d=sp
4294967052
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 done
=inductive-invariants point_set point z3.ce9159
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 done
=inductive-invariants point_set point z3v487.ce9216
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 done
=inductive-invariants point_set point z3.ce9217
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 done
=inductive-invariants point_set point z3v487.ce9274
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 done
=inductive-invariants point_set point z3.ce9275
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 done
=inductive-invariants point_set point z3v487.ce9332
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 done
=inductive-invariants point_set point z3.ce9333
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 done
=inductive-invariants point_set point z3v487.ce9390
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 18 for input.dst.sp=L0%0%d=sp
2147385356
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 25 for input.dst.exreg.0.4.L0%2%spver
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 done
=inductive-invariants point_set point z3.ce9391
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 done
=inductive-invariants point_set point z3.ce9449
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 17 for retaddr_const
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 18 for input.dst.sp=L0%0%d=sp
2719756
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 25 for input.dst.exreg.0.4.L0%2%spver
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2706575360
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2706575360
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 done
=inductive-invariants point_set point z3v487.ce9448
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 17 for retaddr_const
2155905024
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 18 for input.dst.sp=L0%0%d=sp
1910249628
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 25 for input.dst.exreg.0.4.L0%2%spver
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
4
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
4
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
2155905024
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 done
=inductive-invariants point_set point z3v487.ce9590
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 done
=inductive-invariants point_set point z3.ce9591
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 done
=inductive-invariants point_set point z3.ce9735
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 done
=inductive-invariants point_set point z3.ce9846
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 done
=inductive-invariants point_set point z3v487.ce9956
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 done
=inductive-invariants point_set point z3v487.ce9734
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 done
=inductive-invariants point_set point z3.ce9957
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 done
=inductive-invariants point_set points done
=out-of-bound-exprs for reason inductive-invariants
=out-of-bound-exprs for reason inductive-invariants at L0%0%d_L0%0%d

=out-of-bound-exprs for reason inductive-invariants at Lentry%1%allocaI3_L0%2%allocaI3

=out-of-bound-exprs for reason inductive-invariants at Lentry%1%allocaI4_L0%2%allocaI4

=out-of-bound-exprs for reason inductive-invariants at Lentry%2%allocaI3_L0%2%allocaI1

=out-of-bound-exprs for reason inductive-invariants at Lentry%2%allocaI4_L0%2%allocaI2

=out-of-bound-exprs for reason inductive-invariants at E0%0%d_E0%0%d

=graph_with_points done
=Invariant state at node L0%0%d_L0%0%d for reason inductive-invariants
=pc L0%0%d_L0%0%d inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond.description

=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond.expr is null
=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond done
=pc L0%0%d_L0%0%d inductive-invariants invariant_state done
=Invariant state at node Lentry%1%allocaI3_L0%2%allocaI3 for reason inductive-invariants
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond.description

=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 1
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr point_expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr point_expr 3
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr point_expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr point_expr 5
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr point_expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr point_expr 7
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr point_expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr point_expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr point_expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr point_expr 11
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 13 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 28
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.28
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8134
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8537
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce7866
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3.ce8135
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8268
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce7867
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3.ce8269
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce8402
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce8000
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3.ce8001
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3.ce8403
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 11: z3v487.ce8536
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=13; number of visited CEs=12; number of preds=6
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
19
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 28->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 28->0; 
28
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->1; 
matrix done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 29
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 30
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 31
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini point_expr 32
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini point_expr 34
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini point_expr 35
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini point_expr 36
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini point_expr 37
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 38
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 39
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 3
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=0; number of preds=4
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini point_expr 42
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce8674
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ce 1: z3v487.ce8767
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=2; number of preds=0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini point_expr 44
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini point_expr 46
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini name local-eq-lsprel-guess
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini point_expr 48
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state done
=Invariant state at node Lentry%1%allocaI4_L0%2%allocaI4 for reason inductive-invariants
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond.description

=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 13 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.63
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8134
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8537
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3.ce8135
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8268
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce7867
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3.ce8269
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce8402
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce8000
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3.ce8001
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3.ce8403
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 11: z3v487.ce8536
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=13; number of visited CEs=12; number of preds=6
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
19
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 63->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 63->0; 
63
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->1; 
matrix done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce8674
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state done
=Invariant state at node Lentry%2%allocaI3_L0%2%allocaI1 for reason inductive-invariants
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond.description

=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 14 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear1-32-free_var_idx.80
=LhsExpr
1 : 8 { 0x8 +1.95e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear2-32-free_var_idx.63
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear1-4-free_var_idx.19
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.18
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 6
=Comment
expr-group-bvs.linear2-32-free_var_idx.79
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 7
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8850
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce9158
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3v487.ce8913
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8971
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce8972
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3v487.ce9035
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3.ce9036
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce9216
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3v487.ce9274
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3v487.ce9332
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=14; number of visited CEs=11; number of preds=8
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
18
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
19
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 63->0; 79->0; 80->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 63->0; 79->0; 80->0; 
63
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->1; 79->0; 80->0; 
79
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->4294967295; 27->0; 63->0; 79->1; 80->0; 
80
-2147483648->4294967288; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->1; 
matrix done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini point_expr 81
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 82
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini point_expr 83
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce9390
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini point_expr 84
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini point_expr 85
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini point_expr 86
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state done
=Invariant state at node Lentry%2%allocaI4_L0%2%allocaI2 for reason inductive-invariants
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond.description

=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 87
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr point_expr 88
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr point_expr 89
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr point_expr 90
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr point_expr 91
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr point_expr 92
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr point_expr 93
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr point_expr 94
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr point_expr 95
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr point_expr 96
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr point_expr 97
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 98
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 99
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 14 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 100
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.100
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.80
=LhsExpr
1 : 8 { 0x8 +1.95e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.26
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 6
=Comment
expr-group-bvs.linear2-32-free_var_idx.79
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 7
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 8
=Comment
expr-group-bvs.linear1-2-free_var_idx.16
=LhsExpr
1 : 0 { 0x0 } : BV:2
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:2
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce9845
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3v487.ce9035
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3.ce9449
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3v487.ce9448
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce9590
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce9591
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3v487.ce9956
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce9734
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=14; number of visited CEs=8; number of preds=9
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->1073741824; 27->0; 79->0; 80->0; 100->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
19
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
26
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 79->0; 80->0; 100->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 79->0; 80->0; 100->0; 
79
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->4294967295; 27->0; 79->1; 80->0; 100->0; 
80
-2147483648->4294967288; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->1; 100->0; 
100
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->1; 
matrix done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 101
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 102
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 103
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini point_expr 104
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini point_expr 105
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini point_expr 106
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini pred 1
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini point_expr 107
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini point_expr 108
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 109
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 110
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce9035
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini point_expr 111
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini pred 1
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini point_expr 112
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini point_expr 113
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini point_expr 114
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini visited ce 0: z3.ce9449
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini point_expr 115
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state done
=Invariant state at node E0%0%d_E0%0%d for reason inductive-invariants
=pc E0%0%d_E0%0%d inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond.description

=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond.expr is null
=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond done
=pc E0%0%d_E0%0%d inductive-invariants invariant_state done
=invariant_state_changed_at_pcs for reason inductive-invariants:
=graph_with_guessing done
=graph_with_correctness_covers begin
=graph_with_correctness_covers done
=m_dst_fcall_edges_already_updated_from_pcs:
=m_internal_pcs:
Lentry%1%allocaI3_L0%2%allocaI3
Lentry%1%allocaI4_L0%2%allocaI4
Lentry%2%allocaI3_L0%2%allocaI1
Lentry%2%allocaI4_L0%2%allocaI2
=m_super_edges:
L0%0%d_L0%0%d=>E0%0%d_E0%0%d
=AllocaPCLocalSprelAssumptionsBegin:
=PC: L0%2%spver
=local.=Lentry%1%d=
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=local.=Lentry%2%d=
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=AllocaPCLocalSprelAssumptionsEnd
=DeallocaPCLocalSprelAssumptionsBegin:
=Local offsets from compile log
=Local offsets from compile log done
=done
=DeallocaPCLocalSprelAssumptionsEnd
=src_tfg pcs reaching pcpair L0%0%d_L0%0%d
=src_tfg pc: L0%0%d
=exit_pc_asserts at E0%0%d_E0%0%d
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.sp-preserved
=LhsExpr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.boolbv.llvm-%ret-reg
=LhsExpr
1 : input.src.llvm-%conv.E0%0%d : BV:32
=RhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.heap
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.boolbv.llvm-indir_tgt
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge well-formedness condition
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond cg_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond src_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond dst_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond pred.0
=Comment
wfcond.from_pcL0%0%d_L0%0%d.to_pcLentry%1%allocaI3_L0%2%allocaI3-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
7 : input.dst.sp=L0%0%d=sp : BV:32
8 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
9 : bvadd(7, 8) : BV:32
10 : eq(6, 9) : BOOL
11 : 1 { 0x1 } : BOOL
12 : implies(10, 11) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge well-formedness condition done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge well-formedness condition
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond src_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-region-was-stack
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-neq-zero
=LhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-no-overflow
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-is-aligned
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcL0%2%allocaI3.to_pcL0%2%allocaI4-alloca-addr-geq-sp
=LhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge well-formedness condition done
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge well-formedness condition
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond src_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI4_L0%2%allocaI4.to_pcLentry%2%allocaI3_L0%2%allocaI1-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
8 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
9 : eq(7, 8) : BOOL
10 : 1 { 0x1 } : BOOL
11 : implies(9, 10) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge well-formedness condition done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge well-formedness condition
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond src_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-region-was-stack
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : memlabel-mem--heap : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-neq-zero
=LhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-no-overflow
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-is-aligned
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3_L0%2%allocaI1.to_pcLentry%2%allocaI4_L0%2%allocaI2-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : 7 { 0x7 +1.83e129 } : BV:32
5 : bvadd(4, 1) : BV:32
6 : bvule(1, 5) : BOOL
7 : and(3, 6) : BOOL
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : eq(8, 1) : BOOL
10 : andnot2(7, 9) : BOOL
11 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
12 : 8 { 0x8 +1.95e129 } : BV:32
13 : memlabel-mem--heap : MEMLABEL
14 : region_agrees_with_memlabel(11, 1, 12, 13) : BOOL
15 : and(10, 14) : BOOL
16 : 1 { 0x1 } : BOOL
17 : implies(15, 16) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge well-formedness condition done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge well-formedness condition
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond cg_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond cg_path.graph_edge_composition
(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond src_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond dst_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.heap
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.boolbv.llvm-%ret-reg
=LhsExpr
1 : input.src.llvm-%conv.E0%0%d : BV:32
=RhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.sp-preserved
=LhsExpr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge well-formedness condition done
=Ranking exprs at node Lentry%1%allocaI3_L0%2%allocaI3
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%1%allocaI4_L0%2%allocaI4
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%2%allocaI3_L0%2%allocaI1
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Ranking expr 1
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%2%allocaI4_L0%2%allocaI2
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Ranking expr 1
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 10
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs done
=dst-to-src submaps at edge-id Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
=dst-to-src mapping #0 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%1%allocaI3=>Lentry%1%allocaI4)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI3=>L0%2%allocaI4)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
=dst-to-src mapping #0 dst-expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%1%allocaI4=>Lentry%2%allocaI3)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI4=>L0%2%allocaI1)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
=dst-to-src mapping #0 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src mapping #1 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst-to-src mapping #1 src-path-expr
=dst-to-src mapping #1 src-path-expr path
=dst-to-src mapping #1 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #1 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=dst-to-src mapping #1 src-path-expr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=dst-to-src mapping #1 src-path-expr done
=dst-to-src mapping #1 dst-path-expr
=dst-to-src mapping #1 dst-path-expr path
=dst-to-src mapping #1 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #1 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst-to-src mapping #1 dst-path-expr wp_expr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst-to-src mapping #1 dst-path-expr done
=dst-to-src mapping #2 dst-expr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr
=dst-to-src mapping #2 src-path-expr path
=dst-to-src mapping #2 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #2 src-path-expr expr
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr wp_expr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr done
=dst-to-src mapping #2 dst-path-expr
=dst-to-src mapping #2 dst-path-expr path
=dst-to-src mapping #2 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #2 dst-path-expr expr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 dst-path-expr wp_expr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 dst-path-expr done
=dst-to-src mapping #3 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=dst-to-src mapping #3 src-path-expr
=dst-to-src mapping #3 src-path-expr path
=dst-to-src mapping #3 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #3 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=dst-to-src mapping #3 src-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #3 src-path-expr done
=dst-to-src mapping #3 dst-path-expr
=dst-to-src mapping #3 dst-path-expr path
=dst-to-src mapping #3 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #3 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=dst-to-src mapping #3 dst-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #3 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
=dst-to-src mapping #0 dst-expr
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
((((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))*(Lfor.end%1%d=>E0%0%d))
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : retaddr_const : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*((L1%1%d=>L3%1%spver)*((L3%1%spver=>L4%1%d)*(L4%1%d=>E0%0%d))))
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : retaddr_const : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src mapping #1 dst-expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=dst-to-src mapping #1 src-path-expr
=dst-to-src mapping #1 src-path-expr path
=dst-to-src mapping #1 src-path-expr.graph_edge_composition
(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
=dst-to-src mapping #1 src-path-expr expr
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=dst-to-src mapping #1 src-path-expr wp_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst-to-src mapping #1 src-path-expr done
=dst-to-src mapping #1 dst-path-expr
=dst-to-src mapping #1 dst-path-expr path
=dst-to-src mapping #1 dst-path-expr.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*(L1%1%d=>L3%1%spver))
=dst-to-src mapping #1 dst-path-expr expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=dst-to-src mapping #1 dst-path-expr wp_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst-to-src mapping #1 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=src-addr-to-ml mapping #0 src-addr
=src-addr-to-ml mapping #0 src-addr path
=src-addr-to-ml mapping #0 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #0 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #0 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #0 src-addr done
=src-addr-to-ml mapping #0 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #1 src-addr
=src-addr-to-ml mapping #1 src-addr path
=src-addr-to-ml mapping #1 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #1 src-addr expr
1 : symbol.1 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #1 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #1 src-addr done
=src-addr-to-ml mapping #1 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #2 src-addr
=src-addr-to-ml mapping #2 src-addr path
=src-addr-to-ml mapping #2 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #2 src-addr expr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #2 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #2 src-addr done
=src-addr-to-ml mapping #2 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #3 src-addr
=src-addr-to-ml mapping #3 src-addr path
=src-addr-to-ml mapping #3 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #3 src-addr expr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #3 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #3 src-addr done
=src-addr-to-ml mapping #3 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #4 src-addr
=src-addr-to-ml mapping #4 src-addr path
=src-addr-to-ml mapping #4 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #4 src-addr expr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #4 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #4 src-addr done
=src-addr-to-ml mapping #4 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #5 src-addr
=src-addr-to-ml mapping #5 src-addr path
=src-addr-to-ml mapping #5 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #5 src-addr expr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #5 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #5 src-addr done
=src-addr-to-ml mapping #5 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #6 src-addr
=src-addr-to-ml mapping #6 src-addr path
=src-addr-to-ml mapping #6 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #6 src-addr expr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #6 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #6 src-addr done
=src-addr-to-ml mapping #6 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #7 src-addr
=src-addr-to-ml mapping #7 src-addr path
=src-addr-to-ml mapping #7 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #7 src-addr expr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #7 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #7 src-addr done
=src-addr-to-ml mapping #7 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #8 src-addr
=src-addr-to-ml mapping #8 src-addr path
=src-addr-to-ml mapping #8 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #8 src-addr expr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #8 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #8 src-addr done
=src-addr-to-ml mapping #8 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #9 src-addr
=src-addr-to-ml mapping #9 src-addr path
=src-addr-to-ml mapping #9 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #9 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #9 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #9 src-addr done
=src-addr-to-ml mapping #9 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #10 src-addr
=src-addr-to-ml mapping #10 src-addr path
=src-addr-to-ml mapping #10 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #10 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #10 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #10 src-addr done
=src-addr-to-ml mapping #10 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #11 src-addr
=src-addr-to-ml mapping #11 src-addr path
=src-addr-to-ml mapping #11 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #11 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #11 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #11 src-addr done
=src-addr-to-ml mapping #11 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #12 src-addr
=src-addr-to-ml mapping #12 src-addr path
=src-addr-to-ml mapping #12 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #12 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #12 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #12 src-addr done
=src-addr-to-ml mapping #12 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #13 src-addr
=src-addr-to-ml mapping #13 src-addr path
=src-addr-to-ml mapping #13 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #13 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #13 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #13 src-addr done
=src-addr-to-ml mapping #13 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #14 src-addr
=src-addr-to-ml mapping #14 src-addr path
=src-addr-to-ml mapping #14 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #14 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #14 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #14 src-addr done
=src-addr-to-ml mapping #14 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #15 src-addr
=src-addr-to-ml mapping #15 src-addr path
=src-addr-to-ml mapping #15 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #15 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #15 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #15 src-addr done
=src-addr-to-ml mapping #15 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #16 src-addr
=src-addr-to-ml mapping #16 src-addr path
=src-addr-to-ml mapping #16 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #16 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #16 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #16 src-addr done
=src-addr-to-ml mapping #16 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #17 src-addr
=src-addr-to-ml mapping #17 src-addr path
=src-addr-to-ml mapping #17 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #17 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #17 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #17 src-addr done
=src-addr-to-ml mapping #17 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #18 src-addr
=src-addr-to-ml mapping #18 src-addr path
=src-addr-to-ml mapping #18 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #18 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 9 { 0x9 +1.107e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #18 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 9 { 0x9 +1.107e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #18 src-addr done
=src-addr-to-ml mapping #18 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #19 src-addr
=src-addr-to-ml mapping #19 src-addr path
=src-addr-to-ml mapping #19 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #19 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 10 { 0xa +1.119e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #19 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 10 { 0xa +1.119e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #19 src-addr done
=src-addr-to-ml mapping #19 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #20 src-addr
=src-addr-to-ml mapping #20 src-addr path
=src-addr-to-ml mapping #20 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #20 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 11 { 0xb +1.131e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #20 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 11 { 0xb +1.131e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #20 src-addr done
=src-addr-to-ml mapping #20 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #21 src-addr
=src-addr-to-ml mapping #21 src-addr path
=src-addr-to-ml mapping #21 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #21 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #21 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #21 src-addr done
=src-addr-to-ml mapping #21 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #22 src-addr
=src-addr-to-ml mapping #22 src-addr path
=src-addr-to-ml mapping #22 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #22 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 13 { 0xd +1.154e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #22 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 13 { 0xd +1.154e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #22 src-addr done
=src-addr-to-ml mapping #22 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #23 src-addr
=src-addr-to-ml mapping #23 src-addr path
=src-addr-to-ml mapping #23 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #23 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 14 { 0xe +1.166e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #23 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 14 { 0xe +1.166e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #23 src-addr done
=src-addr-to-ml mapping #23 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #24 src-addr
=src-addr-to-ml mapping #24 src-addr path
=src-addr-to-ml mapping #24 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #24 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #24 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #24 src-addr done
=src-addr-to-ml mapping #24 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #25 src-addr
=src-addr-to-ml mapping #25 src-addr path
=src-addr-to-ml mapping #25 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #25 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #25 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #25 src-addr done
=src-addr-to-ml mapping #25 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #26 src-addr
=src-addr-to-ml mapping #26 src-addr path
=src-addr-to-ml mapping #26 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #26 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #26 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #26 src-addr done
=src-addr-to-ml mapping #26 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #27 src-addr
=src-addr-to-ml mapping #27 src-addr path
=src-addr-to-ml mapping #27 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #27 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #27 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #27 src-addr done
=src-addr-to-ml mapping #27 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #28 src-addr
=src-addr-to-ml mapping #28 src-addr path
=src-addr-to-ml mapping #28 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #28 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #28 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #28 src-addr done
=src-addr-to-ml mapping #28 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #29 src-addr
=src-addr-to-ml mapping #29 src-addr path
=src-addr-to-ml mapping #29 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #29 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #29 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #29 src-addr done
=src-addr-to-ml mapping #29 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #30 src-addr
=src-addr-to-ml mapping #30 src-addr path
=src-addr-to-ml mapping #30 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #30 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #30 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #30 src-addr done
=src-addr-to-ml mapping #30 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #31 src-addr
=src-addr-to-ml mapping #31 src-addr path
=src-addr-to-ml mapping #31 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #31 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #31 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #31 src-addr done
=src-addr-to-ml mapping #31 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #32 src-addr
=src-addr-to-ml mapping #32 src-addr path
=src-addr-to-ml mapping #32 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #32 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #32 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #32 src-addr done
=src-addr-to-ml mapping #32 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #33 src-addr
=src-addr-to-ml mapping #33 src-addr path
=src-addr-to-ml mapping #33 src-addr.graph_edge_composition
(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
=src-addr-to-ml mapping #33 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #33 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #33 src-addr done
=src-addr-to-ml mapping #33 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #34 src-addr
=src-addr-to-ml mapping #34 src-addr path
=src-addr-to-ml mapping #34 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #34 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #34 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #34 src-addr done
=src-addr-to-ml mapping #34 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #35 src-addr
=src-addr-to-ml mapping #35 src-addr path
=src-addr-to-ml mapping #35 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #35 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #35 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #35 src-addr done
=src-addr-to-ml mapping #35 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #36 src-addr
=src-addr-to-ml mapping #36 src-addr path
=src-addr-to-ml mapping #36 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #36 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #36 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #36 src-addr done
=src-addr-to-ml mapping #36 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #37 src-addr
=src-addr-to-ml mapping #37 src-addr path
=src-addr-to-ml mapping #37 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #37 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #37 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #37 src-addr done
=src-addr-to-ml mapping #37 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #38 src-addr
=src-addr-to-ml mapping #38 src-addr path
=src-addr-to-ml mapping #38 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #38 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #38 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #38 src-addr done
=src-addr-to-ml mapping #38 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #39 src-addr
=src-addr-to-ml mapping #39 src-addr path
=src-addr-to-ml mapping #39 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #39 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #39 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #39 src-addr done
=src-addr-to-ml mapping #39 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #40 src-addr
=src-addr-to-ml mapping #40 src-addr path
=src-addr-to-ml mapping #40 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #40 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #40 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #40 src-addr done
=src-addr-to-ml mapping #40 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #41 src-addr
=src-addr-to-ml mapping #41 src-addr path
=src-addr-to-ml mapping #41 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #41 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #41 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #41 src-addr done
=src-addr-to-ml mapping #41 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #42 src-addr
=src-addr-to-ml mapping #42 src-addr path
=src-addr-to-ml mapping #42 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #42 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #42 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #42 src-addr done
=src-addr-to-ml mapping #42 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #43 src-addr
=src-addr-to-ml mapping #43 src-addr path
=src-addr-to-ml mapping #43 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #43 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : bvadd(16, 2) : BV:32
=src-addr-to-ml mapping #43 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 2) : BV:32
=src-addr-to-ml mapping #43 src-addr done
=src-addr-to-ml mapping #43 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #44 src-addr
=src-addr-to-ml mapping #44 src-addr path
=src-addr-to-ml mapping #44 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #44 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 1 { 0x1 +1.11e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #44 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 13) : BV:32
=src-addr-to-ml mapping #44 src-addr done
=src-addr-to-ml mapping #44 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #45 src-addr
=src-addr-to-ml mapping #45 src-addr path
=src-addr-to-ml mapping #45 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #45 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 2 { 0x2 +1.23e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #45 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 16) : BV:32
=src-addr-to-ml mapping #45 src-addr done
=src-addr-to-ml mapping #45 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #46 src-addr
=src-addr-to-ml mapping #46 src-addr path
=src-addr-to-ml mapping #46 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #46 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 3 { 0x3 +1.35e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #46 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 19) : BV:32
=src-addr-to-ml mapping #46 src-addr done
=src-addr-to-ml mapping #46 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #47 src-addr
=src-addr-to-ml mapping #47 src-addr path
=src-addr-to-ml mapping #47 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #47 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #47 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 22) : BV:32
=src-addr-to-ml mapping #47 src-addr done
=src-addr-to-ml mapping #47 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #48 src-addr
=src-addr-to-ml mapping #48 src-addr path
=src-addr-to-ml mapping #48 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #48 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 5 { 0x5 +1.59e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #48 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 25) : BV:32
=src-addr-to-ml mapping #48 src-addr done
=src-addr-to-ml mapping #48 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #49 src-addr
=src-addr-to-ml mapping #49 src-addr path
=src-addr-to-ml mapping #49 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #49 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 6 { 0x6 +1.71e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #49 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 28) : BV:32
=src-addr-to-ml mapping #49 src-addr done
=src-addr-to-ml mapping #49 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #50 src-addr
=src-addr-to-ml mapping #50 src-addr path
=src-addr-to-ml mapping #50 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #50 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 7 { 0x7 +1.83e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #50 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 31) : BV:32
=src-addr-to-ml mapping #50 src-addr done
=src-addr-to-ml mapping #50 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #51 src-addr
=src-addr-to-ml mapping #51 src-addr path
=src-addr-to-ml mapping #51 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #51 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : bvadd(9, 2) : BV:32
=src-addr-to-ml mapping #51 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : bvadd(9, 2) : BV:32
=src-addr-to-ml mapping #51 src-addr done
=src-addr-to-ml mapping #51 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #52 src-addr
=src-addr-to-ml mapping #52 src-addr path
=src-addr-to-ml mapping #52 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #52 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #52 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #52 src-addr done
=src-addr-to-ml mapping #52 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #53 src-addr
=src-addr-to-ml mapping #53 src-addr path
=src-addr-to-ml mapping #53 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #53 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 2 { 0x2 +1.23e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #53 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 2 { 0x2 +1.23e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #53 src-addr done
=src-addr-to-ml mapping #53 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #54 src-addr
=src-addr-to-ml mapping #54 src-addr path
=src-addr-to-ml mapping #54 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #54 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 3 { 0x3 +1.35e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #54 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 3 { 0x3 +1.35e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #54 src-addr done
=src-addr-to-ml mapping #54 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #55 src-addr
=src-addr-to-ml mapping #55 src-addr path
=src-addr-to-ml mapping #55 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #55 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 4 { 0x4 +1.47e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #55 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 4 { 0x4 +1.47e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #55 src-addr done
=src-addr-to-ml mapping #55 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #56 src-addr
=src-addr-to-ml mapping #56 src-addr path
=src-addr-to-ml mapping #56 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #56 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 5 { 0x5 +1.59e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #56 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 5 { 0x5 +1.59e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #56 src-addr done
=src-addr-to-ml mapping #56 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #57 src-addr
=src-addr-to-ml mapping #57 src-addr path
=src-addr-to-ml mapping #57 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #57 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 6 { 0x6 +1.71e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #57 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 6 { 0x6 +1.71e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #57 src-addr done
=src-addr-to-ml mapping #57 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #58 src-addr
=src-addr-to-ml mapping #58 src-addr path
=src-addr-to-ml mapping #58 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #58 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 7 { 0x7 +1.83e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #58 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 7 { 0x7 +1.83e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #58 src-addr done
=src-addr-to-ml mapping #58 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #59 src-addr
=src-addr-to-ml mapping #59 src-addr path
=src-addr-to-ml mapping #59 src-addr.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))
=src-addr-to-ml mapping #59 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src-addr-to-ml mapping #59 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src-addr-to-ml mapping #59 src-addr done
=src-addr-to-ml mapping #59 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=dst-to-src-submap done
=dst-to-src submaps done
=cg-edge-contains-repeated-src-tfg-edge at edge-id L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
0
=cg-edge-contains-repeated-src-tfg-edge-map done
=cg.assumes_around_edge
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.pred
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140629 : memlabel_is_absent(140271, 140335) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.pred
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140630 : memlabel_is_absent(140271, 140326) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.pred
=Comment
undef-behavioursome.edge.L0%0%d=>L0%1%spver
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.pred
=Comment
precond-memmask-memlabel-mem--rodata
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
144552 : memmasks_are_equal(140270, 140271, 142112, 142113, 140291) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.pred
=Comment
precond-memmask-memlabel-mem--symbol.2.0
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
144553 : memmasks_are_equal(140270, 140271, 142112, 142113, 140284) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.pred
=Comment
precond-memmask-memlabel-mem--symbol.3.0
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
144554 : memmasks_are_equal(140270, 140271, 142112, 142113, 140286) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.pred
=Comment
precond-memmask-memlabel-mem--heap
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
144555 : memmasks_are_equal(140270, 140271, 142112, 142113, 140288) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.pred
=Comment
precond-mlasserts
=LhsExpr
144358 : input.memlabel-mem--rodata_begin : BV:32
144359 : input.memlabel-mem--rodata_end : BV:32
144360 : bvule(144358, 144359) : BOOL
144361 : rodata.size : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
144362 : bvadd(144361, 140470) : BV:32
144363 : bvadd(144358, 144362) : BV:32
144364 : eq(144359, 144363) : BOOL
144365 : and(144360, 144364) : BOOL
140292 : 0 { 0x0 +1.0e129 } : BV:32
144366 : bvugt(144361, 140292) : BOOL
144367 : and(144365, 144366) : BOOL
144368 : input.memlabel-mem--symbol.2.0_begin : BV:32
144369 : input.memlabel-mem--symbol.2.0_end : BV:32
144370 : bvule(144368, 144369) : BOOL
144371 : and(144367, 144370) : BOOL
140307 : 4 { 0x4 +1.47e129 } : BV:32
144372 : bvadd(140307, 140470) : BV:32
144373 : bvadd(144368, 144372) : BV:32
144374 : eq(144369, 144373) : BOOL
144375 : and(144371, 144374) : BOOL
144376 : input.memlabel-mem--symbol.1.1_begin : BV:32
144377 : input.memlabel-mem--symbol.1.1_end : BV:32
144378 : bvule(144376, 144377) : BOOL
144379 : and(144375, 144378) : BOOL
140334 : 8 { 0x8 +1.95e129 } : BV:32
144380 : bvadd(140334, 140470) : BV:32
144381 : bvadd(144376, 144380) : BV:32
144382 : eq(144377, 144381) : BOOL
144383 : and(144379, 144382) : BOOL
144384 : input.memlabel-mem--symbol.3.0_begin : BV:32
144385 : input.memlabel-mem--symbol.3.0_end : BV:32
144386 : bvule(144384, 144385) : BOOL
144387 : and(144383, 144386) : BOOL
144388 : 32 { 0x20 +1.381e129 } : BV:32
144389 : bvadd(144388, 140470) : BV:32
144390 : bvadd(144384, 144389) : BV:32
144391 : eq(144385, 144390) : BOOL
144392 : and(144387, 144391) : BOOL
144393 : input.memlabel-mem--esp_begin : BV:32
144394 : input.memlabel-mem--esp_end : BV:32
144395 : bvule(144393, 144394) : BOOL
144396 : and(144392, 144395) : BOOL
144397 : stack.size : BV:32
144398 : bvadd(144397, 140470) : BV:32
144399 : bvadd(144393, 144398) : BV:32
144400 : eq(144394, 144399) : BOOL
144401 : and(144396, 144400) : BOOL
144402 : bvugt(144397, 140292) : BOOL
144403 : and(144401, 144402) : BOOL
144404 : bvuge(144358, 144368) : BOOL
144405 : bvule(144358, 144369) : BOOL
144406 : and(144404, 144405) : BOOL
144408 : bvuge(144359, 144368) : BOOL
144409 : bvule(144359, 144369) : BOOL
144410 : and(144408, 144409) : BOOL
144411 : not(144410) : BOOL
144412 : andnot1(144406, 144411) : BOOL
144407 : bvuge(144368, 144358) : BOOL
144413 : bvule(144368, 144359) : BOOL
144414 : and(144407, 144413) : BOOL
144416 : bvuge(144369, 144358) : BOOL
144417 : bvule(144369, 144359) : BOOL
144418 : and(144416, 144417) : BOOL
144419 : not(144418) : BOOL
144420 : andnot1(144414, 144419) : BOOL
144415 : and(144412, 144420) : BOOL
144421 : bvuge(144358, 144384) : BOOL
144422 : bvule(144358, 144385) : BOOL
144423 : and(144421, 144422) : BOOL
144425 : bvuge(144359, 144384) : BOOL
144426 : bvule(144359, 144385) : BOOL
144427 : and(144425, 144426) : BOOL
144428 : not(144427) : BOOL
144429 : andnot1(144423, 144428) : BOOL
144432 : and(144415, 144429) : BOOL
144424 : bvuge(144384, 144358) : BOOL
144430 : bvule(144384, 144359) : BOOL
144431 : and(144424, 144430) : BOOL
144433 : bvuge(144385, 144358) : BOOL
144434 : bvule(144385, 144359) : BOOL
144435 : and(144433, 144434) : BOOL
144436 : not(144435) : BOOL
144437 : andnot1(144431, 144436) : BOOL
144438 : and(144432, 144437) : BOOL
144439 : bvuge(144358, 144393) : BOOL
144440 : bvule(144358, 144394) : BOOL
144441 : and(144439, 144440) : BOOL
144443 : bvuge(144359, 144393) : BOOL
144444 : bvule(144359, 144394) : BOOL
144445 : and(144443, 144444) : BOOL
144446 : not(144445) : BOOL
144447 : andnot1(144441, 144446) : BOOL
144450 : and(144438, 144447) : BOOL
144442 : bvuge(144393, 144358) : BOOL
144448 : bvule(144393, 144359) : BOOL
144449 : and(144442, 144448) : BOOL
144451 : bvuge(144394, 144358) : BOOL
144452 : bvule(144394, 144359) : BOOL
144453 : and(144451, 144452) : BOOL
144454 : not(144453) : BOOL
144455 : andnot1(144449, 144454) : BOOL
144456 : and(144450, 144455) : BOOL
144475 : bvuge(144368, 144393) : BOOL
144476 : bvule(144368, 144394) : BOOL
144477 : and(144475, 144476) : BOOL
144479 : bvuge(144369, 144393) : BOOL
144480 : bvule(144369, 144394) : BOOL
144481 : and(144479, 144480) : BOOL
144482 : not(144481) : BOOL
144483 : andnot1(144477, 144482) : BOOL
144556 : and(144456, 144483) : BOOL
144478 : bvuge(144393, 144368) : BOOL
144484 : bvule(144393, 144369) : BOOL
144485 : and(144478, 144484) : BOOL
144487 : bvuge(144394, 144368) : BOOL
144488 : bvule(144394, 144369) : BOOL
144489 : and(144487, 144488) : BOOL
144490 : not(144489) : BOOL
144491 : andnot1(144485, 144490) : BOOL
144557 : and(144556, 144491) : BOOL
144493 : bvuge(144384, 144393) : BOOL
144494 : bvule(144384, 144394) : BOOL
144495 : and(144493, 144494) : BOOL
144497 : bvuge(144385, 144393) : BOOL
144498 : bvule(144385, 144394) : BOOL
144499 : and(144497, 144498) : BOOL
144500 : not(144499) : BOOL
144501 : andnot1(144495, 144500) : BOOL
144558 : and(144557, 144501) : BOOL
144496 : bvuge(144393, 144384) : BOOL
144502 : bvule(144393, 144385) : BOOL
144503 : and(144496, 144502) : BOOL
144505 : bvuge(144394, 144384) : BOOL
144506 : bvule(144394, 144385) : BOOL
144507 : and(144505, 144506) : BOOL
144508 : not(144507) : BOOL
144509 : andnot1(144503, 144508) : BOOL
144584 : and(144558, 144509) : BOOL
144511 : bvuge(144376, 144358) : BOOL
144512 : bvule(144377, 144359) : BOOL
144513 : and(144511, 144512) : BOOL
144586 : and(144584, 144513) : BOOL
144588 : and(144403, 144586) : BOOL
259 : symbol.2 : BV:32
140304 : 3 { 0x3 +1.35e129 } : BV:32
144516 : bvand(259, 140304) : BV:32
144517 : eq(144516, 140292) : BOOL
258 : symbol.1 : BV:32
144518 : bvand(258, 140304) : BV:32
144519 : eq(144518, 140292) : BOOL
144520 : and(144517, 144519) : BOOL
144590 : and(144588, 144520) : BOOL
144522 : eq(259, 144368) : BOOL
144523 : eq(258, 144376) : BOOL
144524 : and(144522, 144523) : BOOL
260 : symbol.3 : BV:32
144525 : eq(260, 144384) : BOOL
144526 : and(144524, 144525) : BOOL
144591 : and(144590, 144526) : BOOL
140269 : input.dst.sp=L0%0%d=sp : BV:32
144528 : bvule(144393, 140269) : BOOL
143102 : bvadd(140269, 140304) : BV:32
144529 : bvule(140269, 143102) : BOOL
144530 : bvule(143102, 144394) : BOOL
144531 : and(144529, 144530) : BOOL
143891 : bvadd(140269, 140307) : BV:32
140474 : 16 { 0x10 +1.0e1025 } : INT
144532 : islangaligned(143891, 140474) : BOOL
144533 : and(144531, 144532) : BOOL
144534 : and(144528, 144533) : BOOL
144592 : and(144591, 144534) : BOOL
144536 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
144538 : bvand(144393, 144536) : BV:32
144539 : eq(144538, 144393) : BOOL
140298 : 1 { 0x1 +1.11e129 } : BV:32
144537 : bvadd(144394, 140298) : BV:32
144540 : bvand(144537, 144536) : BV:32
144541 : eq(144540, 144537) : BOOL
144542 : and(144539, 144541) : BOOL
144593 : and(144592, 144542) : BOOL
144544 : bvugt(144393, 140292) : BOOL
144594 : and(144593, 144544) : BOOL
65794 : dst_symbol_addr.1 : BV:32
144546 : eq(258, 65794) : BOOL
65795 : dst_symbol_addr.2 : BV:32
144547 : eq(259, 65795) : BOOL
144548 : and(144546, 144547) : BOOL
65796 : dst_symbol_addr.3 : BV:32
144549 : eq(260, 65796) : BOOL
144550 : and(144548, 144549) : BOOL
144595 : and(144594, 144550) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.pred
=Comment
precond-mem.alloc
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
144596 : eq(140271, 142113) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.pred
=Comment
undef-behavioursome.edge.L0%2%d=>L0%2%spver
=LhsExpr
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
146274 : region_agrees_with_memlabel(142113, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
146275 : and(146274, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.pred
=Comment
cg-edge-assume
=LhsExpr
140324 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140323 : 16 { 0x10 +1.190e129 } : BV:32
140827 : apply(140324, 140321, 140271, 140326, 140323) : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
146107 : eq(140827, 142369) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 done
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 done
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.pred
=Comment
cg-edge-assume
=LhsExpr
140324 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140334 : 8 { 0x8 +1.95e129 } : BV:32
141269 : apply(140324, 141268, 140968, 140335, 140334) : BV:32
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
146206 : eq(141269, 145234) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 done
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.pred
=Comment
cg-edge-assume
=LhsExpr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
146253 : islangaligned(145234, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.pred
=Comment
cg-edge-assume
=LhsExpr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140317 : 7 { 0x7 +1.83e129 } : BV:32
145685 : bvadd(140317, 145234) : BV:32
146257 : bvule(145234, 145685) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.pred
=Comment
cg-edge-assume
=LhsExpr
140292 : 0 { 0x0 +1.0e129 } : BV:32
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
146251 : eq(140292, 145234) : BOOL
146252 : not(146251) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.pred
=Comment
cg-edge-assume
=LhsExpr
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140334 : 8 { 0x8 +1.95e129 } : BV:32
140288 : memlabel-mem--heap : MEMLABEL
146248 : region_agrees_with_memlabel(145258, 145234, 140334, 140288) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 done
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.pred
=Comment
undef-behavioursome.edge.L1%1%d=>L3%1%spver
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.pred
=Comment
merged-predicate
=LhsExpr
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140799 : islangaligned(258, 140294) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
141472 : and(140799, 141059, 141060) : BOOL
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
146336 : and(141472, 140452) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
140452 : islangaligned(259, 140450) : BOOL
140320 : 1 { 0x1 } : BOOL
169619 : eq(140452, 140320) : BOOL
169620 : implies(146337, 169619) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159549 : isgepoffset(159548, 159547) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
159550 : bvsign_ext(141525, 140464) : BV:64
159551 : bvmul(140803, 159550) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
159552 : bvextract(159551, 140468, 140464) : BV:32
159553 : eq(140292, 159552) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
159554 : isindexforsize(159553, 140487) : BOOL
159555 : islangaligned(159548, 140294) : BOOL
159556 : and(140452, 141059, 141060, 141807, 159549, 159554, 159555) : BOOL
159557 : and(159556, 140452) : BOOL
159559 : eq(159557, 140320) : BOOL
159560 : implies(146337, 159559) : BOOL
169621 : and(169620, 159560) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
140452 : islangaligned(259, 140450) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159549 : isgepoffset(159548, 159547) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
159550 : bvsign_ext(141525, 140464) : BV:64
159551 : bvmul(140803, 159550) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
159552 : bvextract(159551, 140468, 140464) : BV:32
159553 : eq(140292, 159552) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
159554 : isindexforsize(159553, 140487) : BOOL
159555 : islangaligned(159548, 140294) : BOOL
159556 : and(140452, 141059, 141060, 141807, 159549, 159554, 159555) : BOOL
159557 : and(159556, 140452) : BOOL
140320 : 1 { 0x1 } : BOOL
159559 : eq(159557, 140320) : BOOL
159560 : implies(146337, 159559) : BOOL
169619 : eq(140452, 140320) : BOOL
169620 : implies(146337, 169619) : BOOL
169622 : and(159560, 169620) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d)))))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.pred
=Comment
fold-conjunct
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169627 : bvmul(140334, 159675) : BV:32
169628 : bvadd(140958, 169627) : BV:32
170413 : select(159674, 140983, 140335, 140969, 140294, 140295) : BV:8
170414 : store(159674, 140983, 140326, 169628, 170413, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170415 : bvadd(140298, 140958, 169627) : BV:32
170416 : select(159674, 140983, 140335, 141339, 140294, 140295) : BV:8
170417 : store(170414, 140983, 140326, 170415, 170416, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170418 : bvadd(140301, 140958, 169627) : BV:32
170558 : select(159674, 140983, 140335, 141341, 140294, 140295) : BV:8
170559 : store(170417, 140983, 140326, 170418, 170558, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170560 : bvadd(140304, 140958, 169627) : BV:32
170561 : select(159674, 140983, 140335, 141343, 140294, 140295) : BV:8
170562 : store(170559, 140983, 140326, 170560, 170561, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170563 : bvadd(140307, 140958, 169627) : BV:32
170564 : select(159674, 140983, 140335, 141345, 140294, 140295) : BV:8
170594 : store(170562, 140983, 140326, 170563, 170564, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170595 : bvadd(140311, 140958, 169627) : BV:32
170596 : select(159674, 140983, 140335, 141347, 140294, 140295) : BV:8
170597 : store(170594, 140983, 140326, 170595, 170596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170598 : bvadd(140314, 140958, 169627) : BV:32
170599 : select(159674, 140983, 140335, 141349, 140294, 140295) : BV:8
170600 : store(170597, 140983, 140326, 170598, 170599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170638 : bvadd(140317, 140958, 169627) : BV:32
170639 : select(159674, 140983, 140335, 141290, 140294, 140295) : BV:8
170640 : store(170600, 140983, 140326, 170638, 170639, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170641 : select(170640, 140983, 140326, 140958, 140294, 140295) : BV:8
170642 : store(170640, 140983, 140335, 140969, 170641, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170678 : select(170640, 140983, 140326, 141318, 140294, 140295) : BV:8
170679 : store(170642, 140983, 140335, 141339, 170678, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170680 : select(170640, 140983, 140326, 141319, 140294, 140295) : BV:8
170681 : store(170679, 140983, 140335, 141341, 170680, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170682 : select(170640, 140983, 140326, 141320, 140294, 140295) : BV:8
170720 : store(170681, 140983, 140335, 141343, 170682, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170721 : select(170640, 140983, 140326, 141321, 140294, 140295) : BV:8
170722 : store(170720, 140983, 140335, 141345, 170721, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170723 : select(170640, 140983, 140326, 141322, 140294, 140295) : BV:8
170724 : store(170722, 140983, 140335, 141347, 170723, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170761 : select(170640, 140983, 140326, 141323, 140294, 140295) : BV:8
170762 : store(170724, 140983, 140335, 141349, 170761, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170763 : select(170640, 140983, 140326, 141324, 140294, 140295) : BV:8
170764 : store(170762, 140983, 140335, 141290, 170763, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170765 : bvadd(140298, 159675) : BV:32
170766 : store(170764, 140983, 140284, 259, 170765, 140450, 140295) : ARRAY[BV:32 -> BV:8]
170767 : select(170766, 140983, 140284, 259, 140450, 140295) : BV:32
170768 : bvslt(170767, 140301) : BOOL
170769 : andnot2(169616, 170768) : BOOL
170770 : and(146337, 170769) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
169640 : implies(170770, 146371) : BOOL
169641 : and(140452, 169640) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d)))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169617 : andnot2(146337, 169616) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
169615 : implies(169617, 146371) : BOOL
140452 : islangaligned(259, 140450) : BOOL
169618 : and(169615, 140452) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
146338 : not(146337) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
159546 : implies(146338, 146371) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169624 : and(146337, 169616) : BOOL
140452 : islangaligned(259, 140450) : BOOL
169619 : eq(140452, 140320) : BOOL
169638 : implies(169624, 169619) : BOOL
169639 : and(159546, 169638) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d)))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.pred
=Comment
fold-conjunct
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169624 : and(146337, 169616) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
169627 : bvmul(140334, 159675) : BV:32
169628 : bvadd(140958, 169627) : BV:32
169629 : isgepoffset(169628, 169627) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
169630 : bvsign_ext(159675, 140464) : BV:64
169631 : bvmul(140803, 169630) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
169632 : bvextract(169631, 140468, 140464) : BV:32
169633 : eq(140292, 169632) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
169634 : isindexforsize(169633, 140487) : BOOL
169635 : islangaligned(169628, 140294) : BOOL
169636 : and(140452, 141059, 141060, 141807, 169629, 169634, 169635) : BOOL
169637 : and(169636, 140452) : BOOL
140320 : 1 { 0x1 } : BOOL
169623 : eq(169637, 140320) : BOOL
169625 : implies(169624, 169623) : BOOL
169626 : and(140452, 169625) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d done
cg.assumes_around_edge done
=corr_graph_done
=bv_rank_map
=bv_rank at L0%0%d_L0%0%d
m_dst_rank: 0, m_src_rank: 0
=bv_rank at Lentry%1%allocaI3_L0%2%allocaI3
m_dst_rank: 1, m_src_rank: 0
=bv_rank at Lentry%1%allocaI4_L0%2%allocaI4
m_dst_rank: 1, m_src_rank: 0
=bv_rank at Lentry%2%allocaI3_L0%2%allocaI1
m_dst_rank: 0, m_src_rank: 0
=bv_rank at Lentry%2%allocaI4_L0%2%allocaI2
m_dst_rank: 0, m_src_rank: 0
=bv_rank at E0%0%d_E0%0%d
m_dst_rank: 0, m_src_rank: 0
=cg_with_rank done
=cg_with_backtracker done
=asm filename
emi9f.fixed.s
=cg_with_asm_annotation done
=FunctionName: main
=result: 1
=cg_with_asm_annotation
=cg_with_backtracker
=cg_with_rank
=corr_graph main.A7
=src_tfg
=TFG_SSA:
=TFG_LLVM src.llvm.main:
=TFG:
=Nodes: L0%0%d Lentry%1%allocaI3 Lentry%1%allocaI4 Lentry%2%allocaI3 Lentry%2%allocaI4 Lfor.body%1%d Lfor.cond%1%bbentry Lfor.end%1%d E0%0%d
=Edges:
L0%0%d => Lentry%1%allocaI3
Lentry%1%allocaI3 => Lentry%1%allocaI4
Lentry%1%allocaI4 => Lentry%2%allocaI3
Lentry%2%allocaI3 => Lentry%2%allocaI4
Lentry%2%allocaI4 => Lfor.cond%1%bbentry
Lfor.cond%1%bbentry => Lfor.body%1%d
Lfor.cond%1%bbentry => Lfor.end%1%d
Lfor.end%1%d => E0%0%d
Lfor.body%1%d => Lfor.cond%1%bbentry (backedge) 
=graph done
=is_ssa_graph:
1
=StartState:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d= : BV:32
=src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/ : BV:32
=src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d= : COUNT
=src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=state_end
=PC to var-version map at L0%0%d
=version for src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d= : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%1%allocaI3
=version for src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%1%allocaI4
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d= : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d= : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%2%allocaI3
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=var-version done
=PC to var-version map at Lentry%2%allocaI4
=version for src.llvm-mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.body%1%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.cond%1%bbentry
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at Lfor.end%1%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=PC to var-version map at E0%0%d
=version for src.llvm-mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=version for src.llvm-mem.alloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for src.local_size.=Lentry%1%d=
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%1%d=/
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%1%d=
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=version for src.local_size.=Lentry%2%d=
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=version for src.local./*___y___main__x__=Lentry%2%d=/
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=version for src.local_alloc_count.=Lentry%2%d=
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=version for src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=var-version done
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d
=Output: symbol.2.0
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: llvm-%ret-reg
1 : input.src.llvm-%conv.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume pred 0
=Comment
symbol1.char0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 1
=Comment
symbol1.char1
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 2
=Comment
symbol1.char4
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 1 { 0x1 } : BV:8
=predicate done
=global assume pred 3
=Comment
symbol1.char2
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 4
=Comment
symbol1.char5
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 5
=Comment
symbol1.char3
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 6
=Comment
symbol1.char6
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 7
=Comment
symbol1.char7
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume predicate_set done
Memlabel map for call-context {*;main}
=memlabel_map.0 for call-context {*;main}
mlloc.src.llvm.main.0 : memlabel-mem--rodata
=memlabel_map.1 for call-context {*;main}
mlloc.src.llvm.main.1 : memlabel-mem--rodata
=memlabel_map.2 for call-context {*;main}
mlloc.src.llvm.main.2 : memlabel-mem--rodata
=memlabel_map.3 for call-context {*;main}
mlloc.src.llvm.main.3 : memlabel-mem--rodata
=memlabel_map.4 for call-context {*;main}
mlloc.src.llvm.main.4 : memlabel-mem--rodata
=memlabel_map.5 for call-context {*;main}
mlloc.src.llvm.main.5 : memlabel-mem--rodata
=memlabel_map.6 for call-context {*;main}
mlloc.src.llvm.main.6 : memlabel-mem--rodata
=memlabel_map.7 for call-context {*;main}
mlloc.src.llvm.main.7 : memlabel-mem--symbol.2.0
=memlabel_map.8 for call-context {*;main}
mlloc.src.llvm.main.8 : memlabel-mem--rodata
=memlabel_map.9 for call-context {*;main}
mlvar.src.llvm.main.0 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.10 for call-context {*;main}
mlvar.src.llvm.main.1 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.11 for call-context {*;main}
mlvar.src.llvm.main.10 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.12 for call-context {*;main}
mlvar.src.llvm.main.11 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.13 for call-context {*;main}
mlvar.src.llvm.main.12 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.14 for call-context {*;main}
mlvar.src.llvm.main.13 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.15 for call-context {*;main}
mlvar.src.llvm.main.14 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.16 for call-context {*;main}
mlvar.src.llvm.main.15 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.17 for call-context {*;main}
mlvar.src.llvm.main.16 : memlabel-mem--rodata
=memlabel_map.18 for call-context {*;main}
mlvar.src.llvm.main.17 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.19 for call-context {*;main}
mlvar.src.llvm.main.18 : memlabel-mem--rodata
=memlabel_map.20 for call-context {*;main}
mlvar.src.llvm.main.19 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.21 for call-context {*;main}
mlvar.src.llvm.main.2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.22 for call-context {*;main}
mlvar.src.llvm.main.20 : memlabel-mem--rodata
=memlabel_map.23 for call-context {*;main}
mlvar.src.llvm.main.21 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.24 for call-context {*;main}
mlvar.src.llvm.main.22 : memlabel-mem--rodata
=memlabel_map.25 for call-context {*;main}
mlvar.src.llvm.main.23 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.26 for call-context {*;main}
mlvar.src.llvm.main.24 : memlabel-mem--rodata
=memlabel_map.27 for call-context {*;main}
mlvar.src.llvm.main.25 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.28 for call-context {*;main}
mlvar.src.llvm.main.26 : memlabel-mem--rodata
=memlabel_map.29 for call-context {*;main}
mlvar.src.llvm.main.27 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.30 for call-context {*;main}
mlvar.src.llvm.main.28 : memlabel-mem--rodata
=memlabel_map.31 for call-context {*;main}
mlvar.src.llvm.main.29 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.32 for call-context {*;main}
mlvar.src.llvm.main.3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.33 for call-context {*;main}
mlvar.src.llvm.main.30 : memlabel-mem--rodata
=memlabel_map.34 for call-context {*;main}
mlvar.src.llvm.main.31 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.35 for call-context {*;main}
mlvar.src.llvm.main.32 : memlabel-mem--symbol.2.0
=memlabel_map.36 for call-context {*;main}
mlvar.src.llvm.main.33 : memlabel-mem--symbol.2.0
=memlabel_map.37 for call-context {*;main}
mlvar.src.llvm.main.34 : memlabel-mem--symbol.2.0
=memlabel_map.38 for call-context {*;main}
mlvar.src.llvm.main.35 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.39 for call-context {*;main}
mlvar.src.llvm.main.36 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.40 for call-context {*;main}
mlvar.src.llvm.main.37 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.41 for call-context {*;main}
mlvar.src.llvm.main.38 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.42 for call-context {*;main}
mlvar.src.llvm.main.39 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.43 for call-context {*;main}
mlvar.src.llvm.main.4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.44 for call-context {*;main}
mlvar.src.llvm.main.40 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.45 for call-context {*;main}
mlvar.src.llvm.main.41 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.46 for call-context {*;main}
mlvar.src.llvm.main.42 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.47 for call-context {*;main}
mlvar.src.llvm.main.43 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.48 for call-context {*;main}
mlvar.src.llvm.main.44 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.49 for call-context {*;main}
mlvar.src.llvm.main.45 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.50 for call-context {*;main}
mlvar.src.llvm.main.46 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.51 for call-context {*;main}
mlvar.src.llvm.main.47 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.52 for call-context {*;main}
mlvar.src.llvm.main.48 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.53 for call-context {*;main}
mlvar.src.llvm.main.49 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.54 for call-context {*;main}
mlvar.src.llvm.main.5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.55 for call-context {*;main}
mlvar.src.llvm.main.50 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.56 for call-context {*;main}
mlvar.src.llvm.main.51 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.57 for call-context {*;main}
mlvar.src.llvm.main.52 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.58 for call-context {*;main}
mlvar.src.llvm.main.53 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.59 for call-context {*;main}
mlvar.src.llvm.main.54 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.60 for call-context {*;main}
mlvar.src.llvm.main.55 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.61 for call-context {*;main}
mlvar.src.llvm.main.56 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.62 for call-context {*;main}
mlvar.src.llvm.main.57 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.63 for call-context {*;main}
mlvar.src.llvm.main.58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.64 for call-context {*;main}
mlvar.src.llvm.main.59 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.65 for call-context {*;main}
mlvar.src.llvm.main.6 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.66 for call-context {*;main}
mlvar.src.llvm.main.60 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.67 for call-context {*;main}
mlvar.src.llvm.main.61 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.68 for call-context {*;main}
mlvar.src.llvm.main.62 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.69 for call-context {*;main}
mlvar.src.llvm.main.63 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.70 for call-context {*;main}
mlvar.src.llvm.main.64 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.71 for call-context {*;main}
mlvar.src.llvm.main.65 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.72 for call-context {*;main}
mlvar.src.llvm.main.66 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.73 for call-context {*;main}
mlvar.src.llvm.main.67 : memlabel-mem--symbol.2.0
=memlabel_map.74 for call-context {*;main}
mlvar.src.llvm.main.68 : memlabel-mem--symbol.2.0
=memlabel_map.75 for call-context {*;main}
mlvar.src.llvm.main.69 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=memlabel_map.76 for call-context {*;main}
mlvar.src.llvm.main.7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.77 for call-context {*;main}
mlvar.src.llvm.main.8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=memlabel_map.78 for call-context {*;main}
mlvar.src.llvm.main.9 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Edge: L0%0%d => Lentry%1%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=src.llvm-%a.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((start_pc_edge*  %a = alloca [2 x %struct.S], align 4)*  %a = alloca [2 x %struct.S], align 4)*  %a = alloca [2 x %struct.S], align 4)
tfg_edge_comment end

=Edge: Lentry%1%allocaI3 => Lentry%1%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-mem.Lentry%1%allocaI4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%1%allocaI4
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
8 : ite(1, 6, 7) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:  %a = alloca [2 x %struct.S], align 4
tfg_edge_comment end

=Edge: Lentry%1%allocaI4 => Lentry%2%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%d.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:1:((  %a = alloca [2 x %struct.S], align 4*  %d = alloca %struct.S, align 4)*(  %d = alloca %struct.S, align 4*  %d = alloca %struct.S, align 4))
tfg_edge_comment end

=Edge: Lentry%2%allocaI3 => Lentry%2%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-mem.Lentry%2%allocaI4
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%2%allocaI4
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
8 : ite(1, 6, 7) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:  %d = alloca %struct.S, align 4
tfg_edge_comment end

=Edge: Lentry%2%allocaI4 => Lfor.cond%1%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : symbol.1 : BV:32
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.0 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 0 { 0x0 } : BV:8
8 : 1 { 0x1 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : store(1, 2, 3, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
11 : mlvar.src.llvm.main.1 : MEMLABEL
12 : 1 { 0x1 +1.11e129 } : BV:32
13 : bvadd(4, 12) : BV:32
14 : store(10, 2, 11, 13, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
15 : mlvar.src.llvm.main.2 : MEMLABEL
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(4, 16) : BV:32
18 : store(14, 2, 15, 17, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
19 : mlvar.src.llvm.main.3 : MEMLABEL
20 : 3 { 0x3 +1.35e129 } : BV:32
21 : bvadd(4, 20) : BV:32
22 : store(18, 2, 19, 21, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
23 : mlvar.src.llvm.main.4 : MEMLABEL
24 : 4 { 0x4 +1.47e129 } : BV:32
25 : bvadd(4, 24) : BV:32
26 : store(22, 2, 23, 25, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
27 : mlvar.src.llvm.main.5 : MEMLABEL
28 : 5 { 0x5 +1.59e129 } : BV:32
29 : bvadd(4, 28) : BV:32
30 : store(26, 2, 27, 29, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
31 : mlvar.src.llvm.main.6 : MEMLABEL
32 : 6 { 0x6 +1.71e129 } : BV:32
33 : bvadd(4, 32) : BV:32
34 : store(30, 2, 31, 33, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
35 : mlvar.src.llvm.main.7 : MEMLABEL
36 : 7 { 0x7 +1.83e129 } : BV:32
37 : bvadd(4, 36) : BV:32
38 : store(34, 2, 35, 37, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.8 : MEMLABEL
40 : 8 { 0x8 +1.95e129 } : BV:32
41 : bvadd(4, 40) : BV:32
42 : store(38, 2, 39, 41, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
43 : mlvar.src.llvm.main.9 : MEMLABEL
44 : 9 { 0x9 +1.107e129 } : BV:32
45 : bvadd(4, 44) : BV:32
46 : store(42, 2, 43, 45, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
47 : mlvar.src.llvm.main.10 : MEMLABEL
48 : 10 { 0xa +1.119e129 } : BV:32
49 : bvadd(4, 48) : BV:32
50 : store(46, 2, 47, 49, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
51 : mlvar.src.llvm.main.11 : MEMLABEL
52 : 11 { 0xb +1.131e129 } : BV:32
53 : bvadd(4, 52) : BV:32
54 : store(50, 2, 51, 53, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
55 : mlvar.src.llvm.main.12 : MEMLABEL
56 : 12 { 0xc +1.143e129 } : BV:32
57 : bvadd(4, 56) : BV:32
58 : store(54, 2, 55, 57, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
59 : mlvar.src.llvm.main.13 : MEMLABEL
60 : 13 { 0xd +1.154e129 } : BV:32
61 : bvadd(4, 60) : BV:32
62 : store(58, 2, 59, 61, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
63 : mlvar.src.llvm.main.14 : MEMLABEL
64 : 14 { 0xe +1.166e129 } : BV:32
65 : bvadd(4, 64) : BV:32
66 : store(62, 2, 63, 65, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.15 : MEMLABEL
68 : 15 { 0xf +1.178e129 } : BV:32
69 : bvadd(4, 68) : BV:32
70 : store(66, 2, 67, 69, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
71 : mlvar.src.llvm.main.17 : MEMLABEL
72 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
73 : bvadd(72, 5) : BV:32
74 : mlvar.src.llvm.main.16 : MEMLABEL
75 : symbol.1 : BV:32
76 : bvadd(75, 5) : BV:32
77 : select(70, 2, 74, 76, 8, 9) : BV:8
78 : store(70, 2, 71, 73, 77, 8, 9) : ARRAY[BV:32 -> BV:8]
79 : mlvar.src.llvm.main.19 : MEMLABEL
80 : bvadd(72, 12) : BV:32
81 : mlvar.src.llvm.main.18 : MEMLABEL
82 : bvadd(75, 12) : BV:32
83 : select(78, 2, 81, 82, 8, 9) : BV:8
84 : store(78, 2, 79, 80, 83, 8, 9) : ARRAY[BV:32 -> BV:8]
85 : mlvar.src.llvm.main.21 : MEMLABEL
86 : bvadd(72, 16) : BV:32
87 : mlvar.src.llvm.main.20 : MEMLABEL
88 : bvadd(75, 16) : BV:32
89 : select(84, 2, 87, 88, 8, 9) : BV:8
90 : store(84, 2, 85, 86, 89, 8, 9) : ARRAY[BV:32 -> BV:8]
91 : mlvar.src.llvm.main.23 : MEMLABEL
92 : bvadd(72, 20) : BV:32
93 : mlvar.src.llvm.main.22 : MEMLABEL
94 : bvadd(75, 20) : BV:32
95 : select(90, 2, 93, 94, 8, 9) : BV:8
96 : store(90, 2, 91, 92, 95, 8, 9) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.25 : MEMLABEL
98 : bvadd(72, 24) : BV:32
99 : mlvar.src.llvm.main.24 : MEMLABEL
100 : bvadd(75, 24) : BV:32
101 : select(96, 2, 99, 100, 8, 9) : BV:8
102 : store(96, 2, 97, 98, 101, 8, 9) : ARRAY[BV:32 -> BV:8]
103 : mlvar.src.llvm.main.27 : MEMLABEL
104 : bvadd(72, 28) : BV:32
105 : mlvar.src.llvm.main.26 : MEMLABEL
106 : bvadd(75, 28) : BV:32
107 : select(102, 2, 105, 106, 8, 9) : BV:8
108 : store(102, 2, 103, 104, 107, 8, 9) : ARRAY[BV:32 -> BV:8]
109 : mlvar.src.llvm.main.29 : MEMLABEL
110 : bvadd(72, 32) : BV:32
111 : mlvar.src.llvm.main.28 : MEMLABEL
112 : bvadd(75, 32) : BV:32
113 : select(108, 2, 111, 112, 8, 9) : BV:8
114 : store(108, 2, 109, 110, 113, 8, 9) : ARRAY[BV:32 -> BV:8]
115 : mlvar.src.llvm.main.31 : MEMLABEL
116 : bvadd(72, 36) : BV:32
117 : mlvar.src.llvm.main.30 : MEMLABEL
118 : bvadd(75, 36) : BV:32
119 : select(114, 2, 117, 118, 8, 9) : BV:8
120 : store(114, 2, 115, 116, 119, 8, 9) : ARRAY[BV:32 -> BV:8]
121 : mlvar.src.llvm.main.32 : MEMLABEL
122 : symbol.2 : BV:32
123 : 4 { 0x4 +1.0e1025 } : INT
124 : store(120, 2, 121, 122, 5, 123, 9) : ARRAY[BV:32 -> BV:8]
=src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
2 : increment_count(1) : COUNT
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=EdgeAssume.1
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : islangaligned(4, 2) : BOOL
6 : symbol.1 : BV:32
7 : islangaligned(6, 2) : BOOL
8 : and(5, 7) : BOOL
9 : and(3, 8) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:2:(((((((((((((((((((((((((  %d = alloca %struct.S, align 4*(  %0 = bitcast [2 x %struct.S]* %a to i8*, !dbg !24*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24))*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*(((  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24*  call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 16, i1 false), !dbg !24)*  %1 = bitcast %struct.S* %d to i8*, !dbg !26)*(badref*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %1, i8* align 4 bitcast (%struct.S* @__const.main.d to i8*), i32 8, i1 false), !dbg !26)*((((  store i32 0, i32* @b, align 4, !dbg !27*  br label %for.cond, !dbg !29)*  br label %for.cond, !dbg !29)*  br label %for.cond, !dbg !29)*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge))))
tfg_edge_comment end

=Edge: Lfor.cond%1%bbentry => Lfor.body%1%d
=Edge.EdgeCond: 
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=Edge.StateTo: 
=src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*(  %2 = load i32, i32* @b, align 4, !dbg !30*  %2 = load i32, i32* @b, align 4, !dbg !30))*  %cmp = icmp slt i32 %2, 2, !dbg !32)*((  br i1 %cmp, label %for.body, label %for.end, !dbg !33*  br i1 %cmp, label %for.body, label %for.end, !dbg !33)*  br i1 %cmp, label %for.body, label %for.end, !dbg !33))
tfg_edge_comment end

=Edge: Lfor.cond%1%bbentry => Lfor.end%1%d
=Edge.EdgeCond: 
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
10 : not(9) : BOOL
=Edge.StateTo: 
=src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.33 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*(  %2 = load i32, i32* @b, align 4, !dbg !30*  %2 = load i32, i32* @b, align 4, !dbg !30))*  %cmp = icmp slt i32 %2, 2, !dbg !32)*((  br i1 %cmp, label %for.body, label %for.end, !dbg !33*  br i1 %cmp, label %for.body, label %for.end, !dbg !33)*  br i1 %cmp, label %for.body, label %for.end, !dbg !33))
tfg_edge_comment end

=Edge: Lfor.end%1%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%9.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
=src.llvm-%cmp2.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
=src.llvm-%conv.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : bool_to_bv(17) : BV:1
19 : 31 { 0x1f +1.0e1025 } : INT
20 : bvzero_ext(18, 19) : BV:32
=src.llvm-%f1.E0%0%d
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-%ret-reg.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.69 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(8, 9) : BV:32
11 : bvadd(4, 10) : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(1, 2, 3, 11, 12, 13) : BV:32
15 : 1 { 0x1 +1.11e129 } : BV:32
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : bool_to_bv(17) : BV:1
19 : 31 { 0x1f +1.0e1025 } : INT
20 : bvzero_ext(18, 19) : BV:32
=src.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvadd(1, 5) : BV:32
7 : isgepoffset(6, 4) : BOOL
8 : bvslt(2, 2) : BOOL
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvsign_ext(2, 9) : BV:64
11 : bvzero_ext(3, 9) : BV:64
12 : bvmul(10, 11) : BV:64
13 : 63 { 0x3f +1.0e1025 } : INT
14 : bvextract(12, 13, 9) : BV:32
15 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
16 : eq(14, 15) : BOOL
17 : eq(14, 2) : BOOL
18 : ite(8, 16, 17) : BOOL
19 : 8 { 0x8 +1.0e1025 } : INT
20 : isindexforsize(18, 19) : BOOL
21 : and(7, 20) : BOOL
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(5, 22) : BV:32
24 : bvadd(1, 23) : BV:32
25 : isgepoffset(24, 22) : BOOL
26 : and(21, 25) : BOOL
27 : 4 { 0x4 +1.0e1025 } : INT
28 : islangaligned(24, 27) : BOOL
29 : and(26, 28) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:((((  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44*  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44)*(  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44*  %f1 = getelementptr inbounds %struct.S, %struct.S* %d, i32 0, i32 1, !dbg !44))*(((  %9 = load i32, i32* %f1, align 4, !dbg !44*  %9 = load i32, i32* %f1, align 4, !dbg !44)*  %cmp2 = icmp ne i32 %9, 1, !dbg !45)*  %conv = zext i1 %cmp2 to i32, !dbg !45))*  ret i32 %conv, !dbg !46)
tfg_edge_comment end

=Edge: Lfor.body%1%d => Lfor.cond%1%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.68 : MEMLABEL
118 : mlvar.src.llvm.main.67 : MEMLABEL
119 : select(116, 2, 118, 10, 11, 12) : BV:32
120 : bvadd(119, 26) : BV:32
121 : store(116, 2, 117, 10, 120, 11, 12) : ARRAY[BV:32 -> BV:8]
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
6 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
7 : mlvar.src.llvm.main.34 : MEMLABEL
8 : symbol.2 : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(5, 6, 7, 8, 9, 10) : BV:32
12 : 8 { 0x8 +1.95e129 } : BV:32
13 : bvmul(11, 12) : BV:32
14 : bvadd(4, 13) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.34 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 8 { 0x8 +1.95e129 } : BV:32
9 : bvmul(7, 8) : BV:32
=src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.34 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.67 : MEMLABEL
118 : select(116, 2, 117, 10, 11, 12) : BV:32
=src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
=src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : bvmul(1, 5) : BV:32
7 : bvadd(4, 6) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=src.llvm-%inc.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.src.llvm.main.36 : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : mlvar.src.llvm.main.34 : MEMLABEL
10 : symbol.2 : BV:32
11 : 4 { 0x4 +1.0e1025 } : INT
12 : 0 { 0x0 } : BOOL
13 : select(1, 2, 9, 10, 11, 12) : BV:32
14 : 8 { 0x8 +1.95e129 } : BV:32
15 : bvmul(13, 14) : BV:32
16 : bvadd(8, 15) : BV:32
17 : bvadd(4, 16) : BV:32
18 : bvadd(17, 5) : BV:32
19 : mlvar.src.llvm.main.35 : MEMLABEL
20 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
21 : bvadd(20, 5) : BV:32
22 : 1 { 0x1 +1.0e1025 } : INT
23 : select(1, 2, 19, 21, 22, 12) : BV:8
24 : store(1, 2, 3, 18, 23, 22, 12) : ARRAY[BV:32 -> BV:8]
25 : mlvar.src.llvm.main.38 : MEMLABEL
26 : 1 { 0x1 +1.11e129 } : BV:32
27 : bvadd(17, 26) : BV:32
28 : mlvar.src.llvm.main.37 : MEMLABEL
29 : bvadd(20, 26) : BV:32
30 : select(24, 2, 28, 29, 22, 12) : BV:8
31 : store(24, 2, 25, 27, 30, 22, 12) : ARRAY[BV:32 -> BV:8]
32 : mlvar.src.llvm.main.40 : MEMLABEL
33 : 2 { 0x2 +1.23e129 } : BV:32
34 : bvadd(17, 33) : BV:32
35 : mlvar.src.llvm.main.39 : MEMLABEL
36 : bvadd(20, 33) : BV:32
37 : select(31, 2, 35, 36, 22, 12) : BV:8
38 : store(31, 2, 32, 34, 37, 22, 12) : ARRAY[BV:32 -> BV:8]
39 : mlvar.src.llvm.main.42 : MEMLABEL
40 : 3 { 0x3 +1.35e129 } : BV:32
41 : bvadd(17, 40) : BV:32
42 : mlvar.src.llvm.main.41 : MEMLABEL
43 : bvadd(20, 40) : BV:32
44 : select(38, 2, 42, 43, 22, 12) : BV:8
45 : store(38, 2, 39, 41, 44, 22, 12) : ARRAY[BV:32 -> BV:8]
46 : mlvar.src.llvm.main.44 : MEMLABEL
47 : 4 { 0x4 +1.47e129 } : BV:32
48 : bvadd(17, 47) : BV:32
49 : mlvar.src.llvm.main.43 : MEMLABEL
50 : bvadd(20, 47) : BV:32
51 : select(45, 2, 49, 50, 22, 12) : BV:8
52 : store(45, 2, 46, 48, 51, 22, 12) : ARRAY[BV:32 -> BV:8]
53 : mlvar.src.llvm.main.46 : MEMLABEL
54 : 5 { 0x5 +1.59e129 } : BV:32
55 : bvadd(17, 54) : BV:32
56 : mlvar.src.llvm.main.45 : MEMLABEL
57 : bvadd(20, 54) : BV:32
58 : select(52, 2, 56, 57, 22, 12) : BV:8
59 : store(52, 2, 53, 55, 58, 22, 12) : ARRAY[BV:32 -> BV:8]
60 : mlvar.src.llvm.main.48 : MEMLABEL
61 : 6 { 0x6 +1.71e129 } : BV:32
62 : bvadd(17, 61) : BV:32
63 : mlvar.src.llvm.main.47 : MEMLABEL
64 : bvadd(20, 61) : BV:32
65 : select(59, 2, 63, 64, 22, 12) : BV:8
66 : store(59, 2, 60, 62, 65, 22, 12) : ARRAY[BV:32 -> BV:8]
67 : mlvar.src.llvm.main.50 : MEMLABEL
68 : 7 { 0x7 +1.83e129 } : BV:32
69 : bvadd(17, 68) : BV:32
70 : mlvar.src.llvm.main.49 : MEMLABEL
71 : bvadd(20, 68) : BV:32
72 : select(66, 2, 70, 71, 22, 12) : BV:8
73 : store(66, 2, 67, 69, 72, 22, 12) : ARRAY[BV:32 -> BV:8]
74 : mlvar.src.llvm.main.52 : MEMLABEL
75 : mlvar.src.llvm.main.51 : MEMLABEL
76 : bvmul(5, 14) : BV:32
77 : bvadd(8, 76) : BV:32
78 : bvadd(4, 77) : BV:32
79 : bvadd(78, 5) : BV:32
80 : select(73, 2, 75, 79, 22, 12) : BV:8
81 : store(73, 2, 74, 21, 80, 22, 12) : ARRAY[BV:32 -> BV:8]
82 : mlvar.src.llvm.main.54 : MEMLABEL
83 : mlvar.src.llvm.main.53 : MEMLABEL
84 : bvadd(78, 26) : BV:32
85 : select(81, 2, 83, 84, 22, 12) : BV:8
86 : store(81, 2, 82, 29, 85, 22, 12) : ARRAY[BV:32 -> BV:8]
87 : mlvar.src.llvm.main.56 : MEMLABEL
88 : mlvar.src.llvm.main.55 : MEMLABEL
89 : bvadd(78, 33) : BV:32
90 : select(86, 2, 88, 89, 22, 12) : BV:8
91 : store(86, 2, 87, 36, 90, 22, 12) : ARRAY[BV:32 -> BV:8]
92 : mlvar.src.llvm.main.58 : MEMLABEL
93 : mlvar.src.llvm.main.57 : MEMLABEL
94 : bvadd(78, 40) : BV:32
95 : select(91, 2, 93, 94, 22, 12) : BV:8
96 : store(91, 2, 92, 43, 95, 22, 12) : ARRAY[BV:32 -> BV:8]
97 : mlvar.src.llvm.main.60 : MEMLABEL
98 : mlvar.src.llvm.main.59 : MEMLABEL
99 : bvadd(78, 47) : BV:32
100 : select(96, 2, 98, 99, 22, 12) : BV:8
101 : store(96, 2, 97, 50, 100, 22, 12) : ARRAY[BV:32 -> BV:8]
102 : mlvar.src.llvm.main.62 : MEMLABEL
103 : mlvar.src.llvm.main.61 : MEMLABEL
104 : bvadd(78, 54) : BV:32
105 : select(101, 2, 103, 104, 22, 12) : BV:8
106 : store(101, 2, 102, 57, 105, 22, 12) : ARRAY[BV:32 -> BV:8]
107 : mlvar.src.llvm.main.64 : MEMLABEL
108 : mlvar.src.llvm.main.63 : MEMLABEL
109 : bvadd(78, 61) : BV:32
110 : select(106, 2, 108, 109, 22, 12) : BV:8
111 : store(106, 2, 107, 64, 110, 22, 12) : ARRAY[BV:32 -> BV:8]
112 : mlvar.src.llvm.main.66 : MEMLABEL
113 : mlvar.src.llvm.main.65 : MEMLABEL
114 : bvadd(78, 68) : BV:32
115 : select(111, 2, 113, 114, 22, 12) : BV:8
116 : store(111, 2, 112, 71, 115, 22, 12) : ARRAY[BV:32 -> BV:8]
117 : mlvar.src.llvm.main.67 : MEMLABEL
118 : select(116, 2, 117, 10, 11, 12) : BV:32
119 : bvadd(118, 26) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=EdgeAssume.1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(4, 8) : BV:32
10 : isgepoffset(9, 7) : BOOL
11 : bvslt(5, 5) : BOOL
12 : 32 { 0x20 +1.0e1025 } : INT
13 : bvsign_ext(5, 12) : BV:64
14 : bvzero_ext(6, 12) : BV:64
15 : bvmul(13, 14) : BV:64
16 : 63 { 0x3f +1.0e1025 } : INT
17 : bvextract(15, 16, 12) : BV:32
18 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
19 : eq(17, 18) : BOOL
20 : eq(17, 5) : BOOL
21 : ite(11, 19, 20) : BOOL
22 : 16 { 0x10 +1.0e1025 } : INT
23 : isindexforsize(21, 22) : BOOL
24 : and(10, 23) : BOOL
25 : and(3, 24) : BOOL
26 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
27 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
28 : mlvar.src.llvm.main.34 : MEMLABEL
29 : 0 { 0x0 } : BOOL
30 : select(26, 27, 28, 1, 2, 29) : BV:32
31 : 8 { 0x8 +1.95e129 } : BV:32
32 : bvmul(30, 31) : BV:32
33 : bvadd(8, 32) : BV:32
34 : bvadd(4, 33) : BV:32
35 : isgepoffset(34, 32) : BOOL
36 : bvsign_ext(30, 12) : BV:64
37 : bvzero_ext(31, 12) : BV:64
38 : bvmul(36, 37) : BV:64
39 : bvextract(38, 16, 12) : BV:32
40 : eq(39, 5) : BOOL
41 : 8 { 0x8 +1.0e1025 } : INT
42 : isindexforsize(40, 41) : BOOL
43 : and(35, 42) : BOOL
44 : 1 { 0x1 +1.0e1025 } : INT
45 : islangaligned(34, 44) : BOOL
46 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
47 : islangaligned(46, 44) : BOOL
48 : and(45, 47) : BOOL
49 : and(43, 48) : BOOL
50 : and(25, 49) : BOOL
51 : bvmul(5, 31) : BV:32
52 : bvadd(8, 51) : BV:32
53 : bvadd(4, 52) : BV:32
54 : isgepoffset(53, 51) : BOOL
55 : bvmul(13, 37) : BV:64
56 : bvextract(55, 16, 12) : BV:32
57 : eq(56, 5) : BOOL
58 : isindexforsize(57, 41) : BOOL
59 : and(54, 58) : BOOL
60 : islangaligned(53, 44) : BOOL
61 : and(47, 60) : BOOL
62 : and(59, 61) : BOOL
63 : and(24, 62) : BOOL
64 : and(50, 63) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:1:(((((((((((((((((((  %3 = load i32, i32* @b, align 4, !dbg !34*  %3 = load i32, i32* @b, align 4, !dbg !34)*  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36)*(  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36*(((  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36*  %arrayidx = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 %3, !dbg !36)*  %4 = bitcast %struct.S* %arrayidx to i8*, !dbg !37)*(  %5 = bitcast %struct.S* %d to i8*, !dbg !37*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37))))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*(((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %4, i8* align 4 %5, i32 8, i1 false), !dbg !37)*  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38)*(  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38*(((  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38*  %arrayidx1 = getelementptr inbounds [2 x %struct.S], [2 x %struct.S]* %a, i32 0, i32 0, !dbg !38)*  %6 = bitcast %struct.S* %d to i8*, !dbg !38)*(  %7 = bitcast %struct.S* %arrayidx1 to i8*, !dbg !38*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)))))*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*(((((  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38*  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %6, i8* align 4 %7, i32 8, i1 false), !dbg !38)*  br label %for.inc, !dbg !39)*  br label %for.inc, !dbg !39)*  br label %for.inc, !dbg !39)*(((  %8 = load i32, i32* @b, align 4, !dbg !40*  %8 = load i32, i32* @b, align 4, !dbg !40)*  %inc = add nsw i32 %8, 1, !dbg !40)*((((  store i32 %inc, i32* @b, align 4, !dbg !40*  br label %for.cond, !dbg !41, !llvm.loop !42)*  br label %for.cond, !dbg !41, !llvm.loop !42)*  br label %for.cond, !dbg !41, !llvm.loop !42)*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge)))))
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=start_pc_precondition.0
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.1
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=graph_with_precondition_done

=Locs in src.llvm.main
=Loc 36 in src.llvm.main.
REGMEM
src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=Loc 38 in src.llvm.main.
REGMEM
src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=Loc 39 in src.llvm.main.
REGMEM
src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=Loc 40 in src.llvm.main.
REGMEM
src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=Loc 41 in src.llvm.main.
REGMEM
src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=Loc 47 in src.llvm.main.
REGMEM
src.local_alloc_count.=L0%0%d=
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=Loc 51 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=Loc 56 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=Loc 59 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 60 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 61 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 62 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 63 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 64 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 65 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 66 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 76 in src.llvm.main.
REGMEM
src.llvm-%a.Lentry%1%allocaI3
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=Loc 77 in src.llvm.main.
REGMEM
src.llvm-%d.Lentry%2%allocaI3
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=Loc 78 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=Loc 79 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=Loc 80 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=Loc 81 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=Loc 82 in src.llvm.main.
REGMEM
src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=Loc 83 in src.llvm.main.
REGMEM
src.llvm-%9.E0%0%d
1 : input.src.llvm-%9.E0%0%d : BV:32
=Loc 84 in src.llvm.main.
REGMEM
src.llvm-%cmp2.E0%0%d
1 : input.src.llvm-%cmp2.E0%0%d : BOOL
=Loc 85 in src.llvm.main.
REGMEM
src.llvm-%conv.E0%0%d
1 : input.src.llvm-%conv.E0%0%d : BV:32
=Loc 86 in src.llvm.main.
REGMEM
src.llvm-%f1.E0%0%d
1 : input.src.llvm-%f1.E0%0%d : BV:32
=Loc 87 in src.llvm.main.
REGMEM
src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=Loc 88 in src.llvm.main.
REGMEM
src.llvm-%ret-reg.E0%0%d
1 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=Loc 89 in src.llvm.main.
REGMEM
src.llvm-indir_tgt.E0%0%d
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=Loc 90 in src.llvm.main.
REGMEM
src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=Loc 91 in src.llvm.main.
REGMEM
src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=Loc 92 in src.llvm.main.
REGMEM
src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=Loc 93 in src.llvm.main.
REGMEM
src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=Loc 94 in src.llvm.main.
REGMEM
src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=Loc 95 in src.llvm.main.
REGMEM
src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=Loc 96 in src.llvm.main.
REGMEM
src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=Loc 97 in src.llvm.main.
REGMEM
src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=Loc 98 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 99 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 100 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 101 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=Loc 102 in src.llvm.main.
REGMEM
src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=Loc 103 in src.llvm.main.
REGMEM
src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=Loc 104 in src.llvm.main.
REGMEM
src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=Loc 105 in src.llvm.main.
REGMEM
src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=Loc 106 in src.llvm.main.
REGMEM
src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=Loc 107 in src.llvm.main.
REGMEM
src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=Loc 108 in src.llvm.main.
REGMEM
src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=Loc 109 in src.llvm.main.
REGMEM
src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=Loc 110 in src.llvm.main.
REGMEM
src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=Loc 111 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 112 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 113 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=Loc 114 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=Loc 115 in src.llvm.main.
REGMEM
src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=Loc 116 in src.llvm.main.
REGMEM
src.llvm-%inc.Lfor.cond%1%bbentry
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=Loc 117 in src.llvm.main.
REGMEM
src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=Loc 118 in src.llvm.main.
REGMEM
src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=Loc 119 in src.llvm.main.
REGMEM
src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=Loc 120 in src.llvm.main.
REGMEM
src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=Loc 121 in src.llvm.main.
REGMEM
src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=Loc 122 in src.llvm.main.
REGMEM
src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=Loc 123 in src.llvm.main.
REGMEM
src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=Loc 124 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=Loc 125 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=Loc 126 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=Loc 127 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=Loc 128 in src.llvm.main.
REGMEM
src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=Loc 129 in src.llvm.main.
REGMEM
src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=Loc 130 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=Loc 131 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=Loc 132 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=Loc 133 in src.llvm.main.
REGMEM
src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=Loc 134 in src.llvm.main.
REGMEM
src.cur_rounding_mode.Lentry%1%allocaI3
1 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=Loc 135 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 136 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 137 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 138 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 139 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 140 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 141 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 142 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 143 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 144 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 145 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 146 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 147 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 148 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 149 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 150 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 151 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 152 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 153 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 154 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 155 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 156 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 157 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 158 in src.llvm.main.
MASKED
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 159 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.0
=addr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 160 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.1
=addr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 161 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.2
=addr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 162 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.3
=addr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 163 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.4
=addr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 164 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.5
=addr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 165 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.6
=addr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=nbytes
1
=bigendian
false
=Loc 166 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.7
=addr
1 : symbol.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 167 in src.llvm.main.
SLOT
=mem
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.src.llvm.main.8
=addr
1 : symbol.1 : BV:32
=nbytes
1
=bigendian
false
=Locs end
=Liveness in src.llvm.main
=live locs at L0%0%d
47, 59, 60, 61, 62, 63, 64, 65, 66, 
=live locs at Lentry%1%allocaI3
59, 60, 61, 62, 63, 64, 65, 66, 117, 119, 122, 123, 
=live locs at Lentry%1%allocaI4
119, 122, 135, 136, 137, 138, 139, 140, 141, 142, 
=live locs at Lentry%2%allocaI3
118, 122, 128, 129, 135, 136, 137, 138, 139, 140, 141, 142, 
=live locs at Lentry%2%allocaI4
122, 128, 143, 144, 145, 146, 147, 148, 149, 150, 
=live locs at Lfor.body%1%d
122, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at Lfor.cond%1%bbentry
122, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at Lfor.end%1%d
128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
=live locs at E0%0%d
85[f], 152, 156, 157, 166, 

=Definedness in src.llvm.main
=loc definedness at L0%0%d
51, 56, 61, 62, 63, 64, 65
=loc definedness at Lentry%1%allocaI3
51, 56, 61, 62, 63, 64, 65, 76, 117, 119, 122, 123, 126, 132, 134
=loc definedness at Lentry%1%allocaI4
51, 56, 61, 62, 63, 64, 65, 76, 117, 119, 122, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142
=loc definedness at Lentry%2%allocaI3
51, 56, 61, 62, 63, 64, 65, 76, 77, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142
=loc definedness at Lentry%2%allocaI4
51, 56, 61, 62, 63, 64, 65, 76, 77, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
=loc definedness at Lfor.body%1%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 90, 91, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at Lfor.cond%1%bbentry
51, 56, 61, 62, 63, 64, 65, 76, 77, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at Lfor.end%1%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 92, 93, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
=loc definedness at E0%0%d
51, 56, 61, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167

=Branch affecting variable locs in src.llvm.main
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at Lentry%1%allocaI3

=branch affecting variable locs at Lentry%1%allocaI4

=branch affecting variable locs at Lentry%2%allocaI3

=branch affecting variable locs at Lentry%2%allocaI4

=branch affecting variable locs at Lfor.body%1%d
166
=branch affecting variable locs at Lfor.cond%1%bbentry
166
=branch affecting variable locs at Lfor.end%1%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.llvm.main
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 76 {input.src.llvm-%a.Lentry%1%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 117 {input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 119 {input.src.local_alloc_count.Lentry%1%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 122 {input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 123 {input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 126 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 132 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 for loc_id 134 {input.src.cur_rounding_mode.Lentry%1%allocaI3 }
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>Lentry%1%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 124 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 125 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 }
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 127 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 135 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 136 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 137 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 138 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 139 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 140 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 141 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 for loc_id 142 {memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 77 {input.src.llvm-%d.Lentry%2%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 118 {input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 120 {input.src.local_alloc_count.Lentry%2%allocaI3 }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 128 {input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 }
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 for loc_id 129 {input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 130 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 131 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 }
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 133 {input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 143 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 144 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 145 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 146 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 147 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 148 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 149 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 for loc_id 150 {memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 94 {input.src.llvm-%0.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 95 {input.src.llvm-%1.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 96 {input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry }
1 : symbol.1 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 97 {input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 121 {input.src.local_alloc_count.Lfor.cond%1%bbentry }
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 151 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 152 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 153 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 } : BV:8
6 : 1 { 0x1 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 1 { 0x1 +1.11e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : store(8, 2, 3, 10, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
12 : 2 { 0x2 +1.23e129 } : BV:32
13 : bvadd(12, 4) : BV:32
14 : store(11, 2, 3, 13, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
15 : 3 { 0x3 +1.35e129 } : BV:32
16 : bvadd(15, 4) : BV:32
17 : store(14, 2, 3, 16, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
18 : 4 { 0x4 +1.47e129 } : BV:32
19 : bvadd(18, 4) : BV:32
20 : store(17, 2, 3, 19, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
21 : 5 { 0x5 +1.59e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : store(20, 2, 3, 22, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
24 : 6 { 0x6 +1.71e129 } : BV:32
25 : bvadd(24, 4) : BV:32
26 : store(23, 2, 3, 25, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
27 : 7 { 0x7 +1.83e129 } : BV:32
28 : bvadd(27, 4) : BV:32
29 : store(26, 2, 3, 28, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
30 : 8 { 0x8 +1.95e129 } : BV:32
31 : bvadd(30, 4) : BV:32
32 : store(29, 2, 3, 31, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
33 : 9 { 0x9 +1.107e129 } : BV:32
34 : bvadd(33, 4) : BV:32
35 : store(32, 2, 3, 34, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
36 : 10 { 0xa +1.119e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : store(35, 2, 3, 37, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
39 : 11 { 0xb +1.131e129 } : BV:32
40 : bvadd(39, 4) : BV:32
41 : store(38, 2, 3, 40, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
42 : 12 { 0xc +1.143e129 } : BV:32
43 : bvadd(42, 4) : BV:32
44 : store(41, 2, 3, 43, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
45 : 13 { 0xd +1.154e129 } : BV:32
46 : bvadd(45, 4) : BV:32
47 : store(44, 2, 3, 46, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
48 : 14 { 0xe +1.166e129 } : BV:32
49 : bvadd(48, 4) : BV:32
50 : store(47, 2, 3, 49, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
51 : 15 { 0xf +1.178e129 } : BV:32
52 : bvadd(51, 4) : BV:32
53 : store(50, 2, 3, 52, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
54 : memmask(53, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 154 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : memlabel-mem--rodata : MEMLABEL
6 : symbol.1 : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 5, 6, 7, 8) : BV:8
10 : store(1, 2, 3, 4, 9, 7, 8) : ARRAY[BV:32 -> BV:8]
11 : 1 { 0x1 +1.11e129 } : BV:32
12 : bvadd(11, 4) : BV:32
13 : bvadd(6, 11) : BV:32
14 : select(1, 2, 5, 13, 7, 8) : BV:8
15 : store(10, 2, 3, 12, 14, 7, 8) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 4) : BV:32
18 : bvadd(6, 16) : BV:32
19 : select(1, 2, 5, 18, 7, 8) : BV:8
20 : store(15, 2, 3, 17, 19, 7, 8) : ARRAY[BV:32 -> BV:8]
21 : 3 { 0x3 +1.35e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : bvadd(6, 21) : BV:32
24 : select(1, 2, 5, 23, 7, 8) : BV:8
25 : store(20, 2, 3, 22, 24, 7, 8) : ARRAY[BV:32 -> BV:8]
26 : 4 { 0x4 +1.47e129 } : BV:32
27 : bvadd(26, 4) : BV:32
28 : bvadd(6, 26) : BV:32
29 : select(1, 2, 5, 28, 7, 8) : BV:8
30 : store(25, 2, 3, 27, 29, 7, 8) : ARRAY[BV:32 -> BV:8]
31 : 5 { 0x5 +1.59e129 } : BV:32
32 : bvadd(31, 4) : BV:32
33 : bvadd(6, 31) : BV:32
34 : select(1, 2, 5, 33, 7, 8) : BV:8
35 : store(30, 2, 3, 32, 34, 7, 8) : ARRAY[BV:32 -> BV:8]
36 : 6 { 0x6 +1.71e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : bvadd(6, 36) : BV:32
39 : select(1, 2, 5, 38, 7, 8) : BV:8
40 : store(35, 2, 3, 37, 39, 7, 8) : ARRAY[BV:32 -> BV:8]
41 : 7 { 0x7 +1.83e129 } : BV:32
42 : bvadd(41, 4) : BV:32
43 : bvadd(6, 41) : BV:32
44 : select(1, 2, 5, 43, 7, 8) : BV:8
45 : store(40, 2, 3, 42, 44, 7, 8) : ARRAY[BV:32 -> BV:8]
46 : memmask(45, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 155 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 156 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 157 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 158 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 159 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 7), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 160 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 6), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 161 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 5), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 162 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 4), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 163 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 3), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 164 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 2), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 165 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 1), 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 166 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false) }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry for loc_id 167 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, symbol.1, 1, false) }
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=graph_with_edge_structures.loc_to_expr_map at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 97 {input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 98 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 99 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry }
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 100 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 101 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 102 {input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry }
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 103 {input.src.llvm-%3.Lfor.cond%1%bbentry }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 104 {input.src.llvm-%4.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 105 {input.src.llvm-%5.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 106 {input.src.llvm-%6.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 107 {input.src.llvm-%7.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 108 {input.src.llvm-%8.Lfor.cond%1%bbentry }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 109 {input.src.llvm-%arrayidx.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 110 {input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 111 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 112 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 113 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry }
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 114 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 115 {input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 116 {input.src.llvm-%inc.Lfor.cond%1%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 152 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(1, 2, 3, 4, 6, 7) : BV:32
9 : bvadd(5, 8) : BV:32
10 : store(1, 2, 3, 4, 9, 6, 7) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 153 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : memlabel-mem--symbol.2.0 : MEMLABEL
7 : symbol.2 : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(1, 2, 6, 7, 8, 9) : BV:32
11 : bvmul(5, 10) : BV:32
12 : bvadd(4, 11) : BV:32
13 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
14 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 13, 14, 15, 9) : BV:8
17 : store(1, 2, 3, 12, 16, 15, 9) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 4, 11) : BV:32
20 : bvadd(18, 14) : BV:32
21 : select(1, 2, 13, 20, 15, 9) : BV:8
22 : store(17, 2, 3, 19, 21, 15, 9) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 4, 11) : BV:32
25 : bvadd(23, 14) : BV:32
26 : select(1, 2, 13, 25, 15, 9) : BV:8
27 : store(22, 2, 3, 24, 26, 15, 9) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 4, 11) : BV:32
30 : bvadd(28, 14) : BV:32
31 : select(1, 2, 13, 30, 15, 9) : BV:8
32 : store(27, 2, 3, 29, 31, 15, 9) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 4, 11) : BV:32
35 : bvadd(33, 14) : BV:32
36 : select(1, 2, 13, 35, 15, 9) : BV:8
37 : store(32, 2, 3, 34, 36, 15, 9) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 4, 11) : BV:32
40 : bvadd(38, 14) : BV:32
41 : select(1, 2, 13, 40, 15, 9) : BV:8
42 : store(37, 2, 3, 39, 41, 15, 9) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 4, 11) : BV:32
45 : bvadd(43, 14) : BV:32
46 : select(1, 2, 13, 45, 15, 9) : BV:8
47 : store(42, 2, 3, 44, 46, 15, 9) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 4, 11) : BV:32
50 : bvadd(48, 14) : BV:32
51 : select(1, 2, 13, 50, 15, 9) : BV:8
52 : store(47, 2, 3, 49, 51, 15, 9) : ARRAY[BV:32 -> BV:8]
53 : memmask(52, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 154 {memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
7 : 8 { 0x8 +1.95e129 } : BV:32
8 : memlabel-mem--symbol.2.0 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(1, 2, 8, 9, 10, 11) : BV:32
13 : bvmul(7, 12) : BV:32
14 : bvadd(6, 13) : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 3, 4, 15, 11) : BV:8
17 : store(1, 2, 5, 14, 16, 15, 11) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 6, 13) : BV:32
20 : bvadd(18, 4) : BV:32
21 : select(1, 2, 3, 20, 15, 11) : BV:8
22 : store(17, 2, 5, 19, 21, 15, 11) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 6, 13) : BV:32
25 : bvadd(23, 4) : BV:32
26 : select(1, 2, 3, 25, 15, 11) : BV:8
27 : store(22, 2, 5, 24, 26, 15, 11) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 6, 13) : BV:32
30 : bvadd(28, 4) : BV:32
31 : select(1, 2, 3, 30, 15, 11) : BV:8
32 : store(27, 2, 5, 29, 31, 15, 11) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 6, 13) : BV:32
35 : bvadd(33, 4) : BV:32
36 : select(1, 2, 3, 35, 15, 11) : BV:8
37 : store(32, 2, 5, 34, 36, 15, 11) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 6, 13) : BV:32
40 : bvadd(38, 4) : BV:32
41 : select(1, 2, 3, 40, 15, 11) : BV:8
42 : store(37, 2, 5, 39, 41, 15, 11) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 6, 13) : BV:32
45 : bvadd(43, 4) : BV:32
46 : select(1, 2, 3, 45, 15, 11) : BV:8
47 : store(42, 2, 5, 44, 46, 15, 11) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 6, 13) : BV:32
50 : bvadd(48, 4) : BV:32
51 : select(1, 2, 3, 50, 15, 11) : BV:8
52 : store(47, 2, 5, 49, 51, 15, 11) : ARRAY[BV:32 -> BV:8]
53 : select(52, 2, 5, 6, 15, 11) : BV:8
54 : store(1, 2, 3, 4, 53, 15, 11) : ARRAY[BV:32 -> BV:8]
55 : bvadd(18, 6) : BV:32
56 : select(52, 2, 5, 55, 15, 11) : BV:8
57 : store(54, 2, 3, 20, 56, 15, 11) : ARRAY[BV:32 -> BV:8]
58 : bvadd(23, 6) : BV:32
59 : select(52, 2, 5, 58, 15, 11) : BV:8
60 : store(57, 2, 3, 25, 59, 15, 11) : ARRAY[BV:32 -> BV:8]
61 : bvadd(28, 6) : BV:32
62 : select(52, 2, 5, 61, 15, 11) : BV:8
63 : store(60, 2, 3, 30, 62, 15, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(33, 6) : BV:32
65 : select(52, 2, 5, 64, 15, 11) : BV:8
66 : store(63, 2, 3, 35, 65, 15, 11) : ARRAY[BV:32 -> BV:8]
67 : bvadd(38, 6) : BV:32
68 : select(52, 2, 5, 67, 15, 11) : BV:8
69 : store(66, 2, 3, 40, 68, 15, 11) : ARRAY[BV:32 -> BV:8]
70 : bvadd(43, 6) : BV:32
71 : select(52, 2, 5, 70, 15, 11) : BV:8
72 : store(69, 2, 3, 45, 71, 15, 11) : ARRAY[BV:32 -> BV:8]
73 : bvadd(48, 6) : BV:32
74 : select(52, 2, 5, 73, 15, 11) : BV:8
75 : store(72, 2, 3, 50, 74, 15, 11) : ARRAY[BV:32 -> BV:8]
76 : memmask(75, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry for loc_id 166 {select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false) }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.body%1%d=>Lfor.cond%1%bbentry done
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d for loc_id 90 {input.src.llvm-%2.Lfor.body%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d for loc_id 91 {input.src.llvm-%cmp.Lfor.body%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.body%1%d done
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d for loc_id 92 {input.src.llvm-%2.Lfor.end%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d for loc_id 93 {input.src.llvm-%cmp.Lfor.end%1%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.cond%1%bbentry=>Lfor.end%1%d done
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 78 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 79 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 80 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 81 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 82 {input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 83 {input.src.llvm-%9.E0%0%d }
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 84 {input.src.llvm-%cmp2.E0%0%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 85 {input.src.llvm-%conv.E0%0%d }
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 86 {input.src.llvm-%f1.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 87 {input.src.llvm-%hidden-reg.E0%0%d }
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 88 {input.src.llvm-%ret-reg.E0%0%d }
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d for loc_id 89 {input.src.llvm-indir_tgt.E0%0%d }
1 : retaddr_const : BV:32
=graph_with_edge_structures.loc_to_expr_map at Lfor.end%1%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%1%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%1%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%2%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
vacuous mls at Lentry%2%allocaI4:
vacuous mls at Lfor.body%1%d:
vacuous mls at Lfor.cond%1%bbentry:
vacuous mls at Lfor.end%1%d:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at Lentry%1%allocaI3:
non-vacuous mls at Lentry%1%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
non-vacuous mls at Lentry%2%allocaI3: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
non-vacuous mls at Lentry%2%allocaI4: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.body%1%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.cond%1%bbentry: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at Lfor.end%1%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
non-vacuous mls at E0%0%d: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in src.llvm.main
=Alias analysis result in src.llvm.main at call-context {*;main}
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 36 (input.src.llvm-%hidden-reg)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 38 (input.src.llvm-callee-save.0)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 39 (input.src.llvm-callee-save.1)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 40 (input.src.llvm-callee-save.2)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 41 (input.src.llvm-callee-save.3)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 47 (input.src.local_alloc_count.=L0%0%d=)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 51 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 56 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end)
lr_status
lr_status_top
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 59 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 60 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 61 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 62 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 63 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 64 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 65 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 66 (memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 76 (input.src.llvm-%a.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 77 (input.src.llvm-%d.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 78 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 79 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 80 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 81 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 82 (input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 83 (input.src.llvm-%9.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 84 (input.src.llvm-%cmp2.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 85 (input.src.llvm-%conv.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 86 (input.src.llvm-%f1.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 87 (input.src.llvm-%hidden-reg.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 88 (input.src.llvm-%ret-reg.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 89 (input.src.llvm-indir_tgt.E0%0%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 90 (input.src.llvm-%2.Lfor.body%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 91 (input.src.llvm-%cmp.Lfor.body%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 92 (input.src.llvm-%2.Lfor.end%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 93 (input.src.llvm-%cmp.Lfor.end%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 94 (input.src.llvm-%0.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 95 (input.src.llvm-%1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 96 (input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(symbol.1.1, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 97 (input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 98 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 99 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 100 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 101 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 102 (input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 103 (input.src.llvm-%3.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 104 (input.src.llvm-%4.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 105 (input.src.llvm-%5.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 106 (input.src.llvm-%6.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 107 (input.src.llvm-%7.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 108 (input.src.llvm-%8.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 109 (input.src.llvm-%arrayidx.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 110 (input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 111 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 112 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 113 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 114 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 115 (input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 116 (input.src.llvm-%inc.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 117 (input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 118 (input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 119 (input.src.local_alloc_count.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 120 (input.src.local_alloc_count.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 121 (input.src.local_alloc_count.Lfor.cond%1%bbentry)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 122 (input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 123 (input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 124 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 125 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 126 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 127 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 128 (input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 129 (input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 130 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 131 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%2%d=/, ; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 132 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 133 (input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 134 (input.src.cur_rounding_mode.Lentry%1%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 135 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 136 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 137 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 138 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 139 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 140 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 141 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 142 (memmask(input.src.llvm-mem.Lentry%1%allocaI4, input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 143 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 144 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 145 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 146 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 147 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 148 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 149 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 150 (memmask(input.src.llvm-mem.Lentry%2%allocaI4, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 151 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 152 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 153 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 154 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 155 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 156 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 157 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 158 (memmask(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 159 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 7), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 160 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 6), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 161 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 5), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 162 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 4), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 163 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 3), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 164 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 2), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 165 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, bvadd(symbol.1, 1), 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 166 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--symbol.2.0, symbol.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in src.llvm.main at call-context {*;main} for loc 167 (select(input.src.llvm-mem.Lfor.cond%1%bbentry, input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--rodata, symbol.1, 1, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis results in src.llvm.main done
=Available expressions in src.llvm.main
=avail_exprs begin
=loc 36
=loc_expr
140620 : input.src.llvm-%hidden-reg : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 38
=loc_expr
140621 : input.src.llvm-callee-save.0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 39
=loc_expr
140623 : input.src.llvm-callee-save.1 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 40
=loc_expr
140625 : input.src.llvm-callee-save.2 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 41
=loc_expr
140627 : input.src.llvm-callee-save.3 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 47
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 51
=loc_expr
140281 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 56
=loc_expr
140283 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 78
=loc_expr
141155 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 79
=loc_expr
141156 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 80
=loc_expr
141157 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 81
=loc_expr
141158 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 82
=loc_expr
141159 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 83
=loc_expr
141160 : input.src.llvm-%9.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=avail_exprs_val.end
=loc 84
=loc_expr
141161 : input.src.llvm-%cmp2.E0%0%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=avail_exprs_val.end
=loc 85
=loc_expr
141146 : input.src.llvm-%conv.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=avail_exprs_val.end
=loc 86
=loc_expr
141162 : input.src.llvm-%f1.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 87
=loc_expr
141163 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=avail_exprs_val.end
=loc 88
=loc_expr
141164 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=avail_exprs_val.end
=loc 89
=loc_expr
141165 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 92
=loc_expr
141168 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=avail_exprs_val.end
=loc 93
=loc_expr
141169 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=avail_exprs_val.end
=loc 94
=loc_expr
141170 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 95
=loc_expr
141171 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 96
=loc_expr
141172 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : symbol.1 : BV:32
=avail_exprs_val.end
=loc 98
=loc_expr
141173 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 101
=loc_expr
141176 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 105
=loc_expr
141180 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 106
=loc_expr
141181 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 107
=loc_expr
141182 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 110
=loc_expr
141185 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 111
=loc_expr
141186 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 112
=loc_expr
141187 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 113
=loc_expr
141188 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 114
=loc_expr
141189 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 115
=loc_expr
141190 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 117
=loc_expr
140960 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.end
=loc 118
=loc_expr
140971 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=avail_exprs_val.end
=loc 119
=loc_expr
140978 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.end
=loc 120
=loc_expr
141057 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=avail_exprs_val.end
=loc 121
=loc_expr
141192 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=avail_exprs_val.end
=loc 123
=loc_expr
140959 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 16 { 0x10 +1.190e129 } : BV:32
=avail_exprs_val.end
=loc 124
=loc_expr
141147 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=avail_exprs_val.end
=loc 125
=loc_expr
141149 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 126
=loc_expr
140963 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 127
=loc_expr
141148 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 129
=loc_expr
140970 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=avail_exprs_val.end
=loc 130
=loc_expr
141151 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=avail_exprs_val.end
=loc 131
=loc_expr
141152 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 132
=loc_expr
140974 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 133
=loc_expr
141150 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 134
=loc_expr
141193 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=avail_exprs_val.end
=loc 135
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141194 : memmask(140967, 140968, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 136
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
141195 : memmask(140967, 140968, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 137
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
141196 : memmask(140967, 140968, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 138
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
141197 : memmask(140967, 140968, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 139
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141198 : memmask(140967, 140968, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 140
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141199 : memmask(140967, 140968, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 141
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141200 : memmask(140967, 140968, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 142
=loc_expr
140967 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141201 : memmask(140967, 140968, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 143
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141202 : memmask(140999, 140983, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 144
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
141203 : memmask(140999, 140983, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 145
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
141204 : memmask(140999, 140983, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 146
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
141205 : memmask(140999, 140983, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 147
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141206 : memmask(140999, 140983, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 148
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141207 : memmask(140999, 140983, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 149
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141208 : memmask(140999, 140983, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 150
=loc_expr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141209 : memmask(140999, 140983, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 151
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
141210 : memmask(140982, 140983, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 155
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
141213 : memmask(140982, 140983, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 156
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
141144 : memmask(140982, 140983, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 157
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
141145 : memmask(140982, 140983, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 158
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
141214 : memmask(140982, 140983, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 159
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140317 : 7 { 0x7 +1.83e129 } : BV:32
140318 : bvadd(258, 140317) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141471 : select(140982, 140983, 140291, 140318, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 160
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140314 : 6 { 0x6 +1.71e129 } : BV:32
140315 : bvadd(258, 140314) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141473 : select(140982, 140983, 140291, 140315, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 161
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140311 : 5 { 0x5 +1.59e129 } : BV:32
140312 : bvadd(258, 140311) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141474 : select(140982, 140983, 140291, 140312, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 162
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140307 : 4 { 0x4 +1.47e129 } : BV:32
140308 : bvadd(258, 140307) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141475 : select(140982, 140983, 140291, 140308, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 163
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140304 : 3 { 0x3 +1.35e129 } : BV:32
140305 : bvadd(258, 140304) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141476 : select(140982, 140983, 140291, 140305, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 164
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140301 : 2 { 0x2 +1.23e129 } : BV:32
140302 : bvadd(258, 140301) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141477 : select(140982, 140983, 140291, 140302, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 165
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140298 : 1 { 0x1 +1.11e129 } : BV:32
140299 : bvadd(258, 140298) : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141478 : select(140982, 140983, 140291, 140299, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=avail_exprs_val.end
=loc 167
=loc_expr
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141480 : select(140982, 140983, 140291, 258, 140294, 140295) : BV:8
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.llvm.main
=loc 78 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=loc 78 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 79 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=loc 79 spreled-expr
140307 : 4 { 0x4 +1.47e129 } : BV:32
=loc 81 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=loc 81 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 82 expr
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=loc 82 spreled-expr
140307 : 4 { 0x4 +1.47e129 } : BV:32
=loc 89 expr
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=loc 89 spreled-expr
140267 : retaddr_const : BV:32
=loc 96 expr
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=loc 96 spreled-expr
258 : symbol.1 : BV:32
=loc 98 expr
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 98 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 101 expr
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=loc 101 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 111 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 111 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 112 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=loc 112 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 114 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=loc 114 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 115 expr
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=loc 115 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 117 expr
1 : input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : COUNT
=loc 117 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=loc 118 expr
1 : input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : COUNT
=loc 118 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
=loc 119 expr
1 : input.src.local_alloc_count.Lentry%1%allocaI3 : COUNT
=loc 119 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=loc 120 expr
1 : input.src.local_alloc_count.Lentry%2%allocaI3 : COUNT
=loc 120 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
=loc 121 expr
1 : input.src.local_alloc_count.Lfor.cond%1%bbentry : COUNT
=loc 121 spreled-expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
141460 : increment_count(141268) : COUNT
=loc 123 expr
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=loc 123 spreled-expr
140323 : 16 { 0x10 +1.190e129 } : BV:32
=loc 126 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=loc 126 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 127 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=loc 127 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 129 expr
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=loc 129 spreled-expr
140334 : 8 { 0x8 +1.95e129 } : BV:32
=loc 132 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=loc 132 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 133 expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=loc 133 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 134 expr
1 : input.src.cur_rounding_mode.Lentry%1%allocaI3 : ROUNDING_MODE
=loc 134 spreled-expr
140322 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%allocaI3=>Lentry%1%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%1%allocaI4=>Lentry%2%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%2%allocaI3=>Lentry%2%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.body%1%d=>Lfor.cond%1%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%bbentry=>Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.cond%1%bbentry=>Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
10 : not(9) : BOOL
=graph_with_simplified_assets.simplified_edgecond at Lfor.end%1%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>Lentry%1%allocaI3
=src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=src.llvm-%a.Lentry%1%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
=src.local_alloc_count.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%allocaI3=>Lentry%1%allocaI4
=src.llvm-mem.Lentry%1%allocaI4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%1%allocaI4
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 15 { 0xf +1.178e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%1%allocaI4=>Lentry%2%allocaI3
=src.llvm-%d.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
=src.local_alloc_count.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
=src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%2%allocaI3=>Lentry%2%allocaI4
=src.llvm-mem.Lentry%2%allocaI4
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=src.llvm-mem.alloc.Lentry%2%allocaI4
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=src.llvm-%0.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : symbol.1 : BV:32
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 0 { 0x0 } : BV:8
6 : 1 { 0x1 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 1 { 0x1 +1.11e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : store(8, 2, 3, 10, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
12 : 2 { 0x2 +1.23e129 } : BV:32
13 : bvadd(12, 4) : BV:32
14 : store(11, 2, 3, 13, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
15 : 3 { 0x3 +1.35e129 } : BV:32
16 : bvadd(15, 4) : BV:32
17 : store(14, 2, 3, 16, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
18 : 4 { 0x4 +1.47e129 } : BV:32
19 : bvadd(18, 4) : BV:32
20 : store(17, 2, 3, 19, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
21 : 5 { 0x5 +1.59e129 } : BV:32
22 : bvadd(21, 4) : BV:32
23 : store(20, 2, 3, 22, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
24 : 6 { 0x6 +1.71e129 } : BV:32
25 : bvadd(24, 4) : BV:32
26 : store(23, 2, 3, 25, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
27 : 7 { 0x7 +1.83e129 } : BV:32
28 : bvadd(27, 4) : BV:32
29 : store(26, 2, 3, 28, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
30 : 8 { 0x8 +1.95e129 } : BV:32
31 : bvadd(30, 4) : BV:32
32 : store(29, 2, 3, 31, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
33 : 9 { 0x9 +1.107e129 } : BV:32
34 : bvadd(33, 4) : BV:32
35 : store(32, 2, 3, 34, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
36 : 10 { 0xa +1.119e129 } : BV:32
37 : bvadd(36, 4) : BV:32
38 : store(35, 2, 3, 37, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
39 : 11 { 0xb +1.131e129 } : BV:32
40 : bvadd(39, 4) : BV:32
41 : store(38, 2, 3, 40, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
42 : 12 { 0xc +1.143e129 } : BV:32
43 : bvadd(42, 4) : BV:32
44 : store(41, 2, 3, 43, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
45 : 13 { 0xd +1.154e129 } : BV:32
46 : bvadd(45, 4) : BV:32
47 : store(44, 2, 3, 46, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
48 : 14 { 0xe +1.166e129 } : BV:32
49 : bvadd(48, 4) : BV:32
50 : store(47, 2, 3, 49, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
51 : 15 { 0xf +1.178e129 } : BV:32
52 : bvadd(51, 4) : BV:32
53 : store(50, 2, 3, 52, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
54 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
55 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
56 : memlabel-mem--rodata : MEMLABEL
57 : symbol.1 : BV:32
58 : select(1, 2, 56, 57, 6, 7) : BV:8
59 : store(53, 2, 54, 55, 58, 6, 7) : ARRAY[BV:32 -> BV:8]
60 : bvadd(9, 55) : BV:32
61 : bvadd(57, 9) : BV:32
62 : select(1, 2, 56, 61, 6, 7) : BV:8
63 : store(59, 2, 54, 60, 62, 6, 7) : ARRAY[BV:32 -> BV:8]
64 : bvadd(12, 55) : BV:32
65 : bvadd(57, 12) : BV:32
66 : select(1, 2, 56, 65, 6, 7) : BV:8
67 : store(63, 2, 54, 64, 66, 6, 7) : ARRAY[BV:32 -> BV:8]
68 : bvadd(15, 55) : BV:32
69 : bvadd(57, 15) : BV:32
70 : select(1, 2, 56, 69, 6, 7) : BV:8
71 : store(67, 2, 54, 68, 70, 6, 7) : ARRAY[BV:32 -> BV:8]
72 : bvadd(18, 55) : BV:32
73 : bvadd(57, 18) : BV:32
74 : select(1, 2, 56, 73, 6, 7) : BV:8
75 : store(71, 2, 54, 72, 74, 6, 7) : ARRAY[BV:32 -> BV:8]
76 : bvadd(21, 55) : BV:32
77 : bvadd(57, 21) : BV:32
78 : select(1, 2, 56, 77, 6, 7) : BV:8
79 : store(75, 2, 54, 76, 78, 6, 7) : ARRAY[BV:32 -> BV:8]
80 : bvadd(24, 55) : BV:32
81 : bvadd(57, 24) : BV:32
82 : select(1, 2, 56, 81, 6, 7) : BV:8
83 : store(79, 2, 54, 80, 82, 6, 7) : ARRAY[BV:32 -> BV:8]
84 : bvadd(27, 55) : BV:32
85 : bvadd(57, 27) : BV:32
86 : select(1, 2, 56, 85, 6, 7) : BV:8
87 : store(83, 2, 54, 84, 86, 6, 7) : ARRAY[BV:32 -> BV:8]
88 : memlabel-mem--symbol.2.0 : MEMLABEL
89 : symbol.2 : BV:32
90 : 0 { 0x0 +1.0e129 } : BV:32
91 : 4 { 0x4 +1.0e1025 } : INT
92 : store(87, 2, 88, 89, 90, 91, 7) : ARRAY[BV:32 -> BV:8]
=src.local_alloc_count.Lfor.cond%1%bbentry
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
2 : increment_count(1) : COUNT
3 : increment_count(2) : COUNT
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.body%1%d=>Lfor.cond%1%bbentry
=src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-mem.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : memlabel-mem--symbol.2.0 : MEMLABEL
7 : symbol.2 : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(1, 2, 6, 7, 8, 9) : BV:32
11 : bvmul(5, 10) : BV:32
12 : bvadd(4, 11) : BV:32
13 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
14 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
15 : 1 { 0x1 +1.0e1025 } : INT
16 : select(1, 2, 13, 14, 15, 9) : BV:8
17 : store(1, 2, 3, 12, 16, 15, 9) : ARRAY[BV:32 -> BV:8]
18 : 1 { 0x1 +1.11e129 } : BV:32
19 : bvadd(18, 4, 11) : BV:32
20 : bvadd(18, 14) : BV:32
21 : select(1, 2, 13, 20, 15, 9) : BV:8
22 : store(17, 2, 3, 19, 21, 15, 9) : ARRAY[BV:32 -> BV:8]
23 : 2 { 0x2 +1.23e129 } : BV:32
24 : bvadd(23, 4, 11) : BV:32
25 : bvadd(23, 14) : BV:32
26 : select(1, 2, 13, 25, 15, 9) : BV:8
27 : store(22, 2, 3, 24, 26, 15, 9) : ARRAY[BV:32 -> BV:8]
28 : 3 { 0x3 +1.35e129 } : BV:32
29 : bvadd(28, 4, 11) : BV:32
30 : bvadd(28, 14) : BV:32
31 : select(1, 2, 13, 30, 15, 9) : BV:8
32 : store(27, 2, 3, 29, 31, 15, 9) : ARRAY[BV:32 -> BV:8]
33 : 4 { 0x4 +1.47e129 } : BV:32
34 : bvadd(33, 4, 11) : BV:32
35 : bvadd(33, 14) : BV:32
36 : select(1, 2, 13, 35, 15, 9) : BV:8
37 : store(32, 2, 3, 34, 36, 15, 9) : ARRAY[BV:32 -> BV:8]
38 : 5 { 0x5 +1.59e129 } : BV:32
39 : bvadd(38, 4, 11) : BV:32
40 : bvadd(38, 14) : BV:32
41 : select(1, 2, 13, 40, 15, 9) : BV:8
42 : store(37, 2, 3, 39, 41, 15, 9) : ARRAY[BV:32 -> BV:8]
43 : 6 { 0x6 +1.71e129 } : BV:32
44 : bvadd(43, 4, 11) : BV:32
45 : bvadd(43, 14) : BV:32
46 : select(1, 2, 13, 45, 15, 9) : BV:8
47 : store(42, 2, 3, 44, 46, 15, 9) : ARRAY[BV:32 -> BV:8]
48 : 7 { 0x7 +1.83e129 } : BV:32
49 : bvadd(48, 4, 11) : BV:32
50 : bvadd(48, 14) : BV:32
51 : select(1, 2, 13, 50, 15, 9) : BV:8
52 : store(47, 2, 3, 49, 51, 15, 9) : ARRAY[BV:32 -> BV:8]
53 : select(52, 2, 3, 4, 15, 9) : BV:8
54 : store(52, 2, 13, 14, 53, 15, 9) : ARRAY[BV:32 -> BV:8]
55 : bvadd(18, 4) : BV:32
56 : select(52, 2, 3, 55, 15, 9) : BV:8
57 : store(54, 2, 13, 20, 56, 15, 9) : ARRAY[BV:32 -> BV:8]
58 : bvadd(23, 4) : BV:32
59 : select(52, 2, 3, 58, 15, 9) : BV:8
60 : store(57, 2, 13, 25, 59, 15, 9) : ARRAY[BV:32 -> BV:8]
61 : bvadd(28, 4) : BV:32
62 : select(52, 2, 3, 61, 15, 9) : BV:8
63 : store(60, 2, 13, 30, 62, 15, 9) : ARRAY[BV:32 -> BV:8]
64 : bvadd(33, 4) : BV:32
65 : select(52, 2, 3, 64, 15, 9) : BV:8
66 : store(63, 2, 13, 35, 65, 15, 9) : ARRAY[BV:32 -> BV:8]
67 : bvadd(38, 4) : BV:32
68 : select(52, 2, 3, 67, 15, 9) : BV:8
69 : store(66, 2, 13, 40, 68, 15, 9) : ARRAY[BV:32 -> BV:8]
70 : bvadd(43, 4) : BV:32
71 : select(52, 2, 3, 70, 15, 9) : BV:8
72 : store(69, 2, 13, 45, 71, 15, 9) : ARRAY[BV:32 -> BV:8]
73 : bvadd(48, 4) : BV:32
74 : select(52, 2, 3, 73, 15, 9) : BV:8
75 : store(72, 2, 13, 50, 74, 15, 9) : ARRAY[BV:32 -> BV:8]
76 : bvadd(18, 10) : BV:32
77 : store(75, 2, 6, 7, 76, 8, 9) : ARRAY[BV:32 -> BV:8]
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvmul(1, 8) : BV:32
=src.llvm-%3.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%4.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%5.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%6.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=src.llvm-%7.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%8.Lfor.cond%1%bbentry
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : symbol.2 : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(3, 4, 5, 6, 7, 8) : BV:32
10 : bvmul(2, 9) : BV:32
11 : bvadd(1, 10) : BV:32
=src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%inc.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--symbol.2.0 : MEMLABEL
5 : symbol.2 : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : select(2, 3, 4, 5, 6, 7) : BV:32
9 : bvadd(1, 8) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%bbentry=>Lfor.body%1%d
=src.llvm-%2.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.body%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.cond%1%bbentry=>Lfor.end%1%d
=src.llvm-%2.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-%cmp.Lfor.end%1%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
8 : 2 { 0x2 +1.23e129 } : BV:32
9 : bvslt(7, 8) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at Lfor.end%1%d=>E0%0%d
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=src.llvm-%9.E0%0%d
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
6 : bvadd(4, 5) : BV:32
7 : 4 { 0x4 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:32
=src.llvm-%cmp2.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
3 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : bvadd(5, 6) : BV:32
8 : 4 { 0x4 +1.0e1025 } : INT
9 : 0 { 0x0 } : BOOL
10 : select(2, 3, 4, 7, 8, 9) : BV:32
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
=src.llvm-%conv.E0%0%d
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=src.llvm-%f1.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=src.llvm-%hidden-reg.E0%0%d
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : input.src.llvm-callee-save.1 : BV:32
4 : input.src.llvm-callee-save.2 : BV:32
5 : input.src.llvm-callee-save.3 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=src.llvm-%ret-reg.E0%0%d
1 : 0 { 0x0 } : BV:31
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
4 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : bvadd(6, 7) : BV:32
9 : 4 { 0x4 +1.0e1025 } : INT
10 : 0 { 0x0 } : BOOL
11 : select(3, 4, 5, 8, 9, 10) : BV:32
12 : eq(2, 11) : BOOL
13 : not(12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(1, 14) : BV:32
=src.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>Lentry%1%allocaI3
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>Lentry%1%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI3=>Lentry%1%allocaI4
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI4=>Lentry%2%allocaI3
=graph_with_simplified_assets.simplified_assumes at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI3=>Lentry%2%allocaI4
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume# 0
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : islangaligned(4, 2) : BOOL
6 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
7 : islangaligned(6, 2) : BOOL
8 : and(3, 5, 7) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume# 1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : islangaligned(4, 5) : BOOL
7 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
8 : islangaligned(7, 5) : BOOL
9 : 0 { 0x0 +1.0e129 } : BV:32
10 : isgepoffset(4, 9) : BOOL
11 : 8 { 0x8 +1.95e129 } : BV:32
12 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
13 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
14 : memlabel-mem--symbol.2.0 : MEMLABEL
15 : 0 { 0x0 } : BOOL
16 : select(12, 13, 14, 1, 2, 15) : BV:32
17 : bvmul(11, 16) : BV:32
18 : bvadd(4, 17) : BV:32
19 : isgepoffset(18, 17) : BOOL
20 : 8 { 0x8 +1.0e1025 } : BV:64
21 : 32 { 0x20 +1.0e1025 } : INT
22 : bvsign_ext(16, 21) : BV:64
23 : bvmul(20, 22) : BV:64
24 : 63 { 0x3f +1.0e1025 } : INT
25 : bvextract(23, 24, 21) : BV:32
26 : eq(9, 25) : BOOL
27 : 8 { 0x8 +1.0e1025 } : INT
28 : isindexforsize(26, 27) : BOOL
29 : islangaligned(18, 5) : BOOL
30 : and(3, 6, 8, 10, 19, 28, 29) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry assume# 1
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.body%1%d=>Lfor.cond%1%bbentry done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.body%1%d done
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d assume# 0
1 : symbol.2 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.cond%1%bbentry=>Lfor.end%1%d done
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d assume# 0
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : isgepoffset(1, 2) : BOOL
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : bvadd(4, 1) : BV:32
6 : isgepoffset(5, 4) : BOOL
7 : 4 { 0x4 +1.0e1025 } : INT
8 : islangaligned(5, 7) : BOOL
9 : and(3, 6, 8) : BOOL
=graph_with_simplified_assets.simplified_assumes at Lfor.end%1%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
70
=String-contents:
C_SYMBOL1 : 0 : \0\0\0\0\1\0\0\0
=Nextpc-map:
=Nextpc-map done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>Lentry%1%allocaI3
tfg.assumes_around_edge at L0%0%d=>Lentry%1%allocaI3 done
tfg.assumes_around_edge at Lentry%1%allocaI3=>Lentry%1%allocaI4
tfg.assumes_around_edge at Lentry%1%allocaI3=>Lentry%1%allocaI4 done
tfg.assumes_around_edge at Lentry%1%allocaI4=>Lentry%2%allocaI3
tfg.assumes_around_edge at Lentry%1%allocaI4=>Lentry%2%allocaI3 done
tfg.assumes_around_edge at Lentry%2%allocaI3=>Lentry%2%allocaI4
tfg.assumes_around_edge at Lentry%2%allocaI3=>Lentry%2%allocaI4 done
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.ec
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #0.pred
=Comment
undef-behavioursome.edge.Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=LhsExpr
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140799 : islangaligned(258, 140294) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
141472 : and(140799, 141059, 141060) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.ec
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry assume #1.pred
=Comment
undef-behaviour-align-assume.edge.Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lentry%2%allocaI4=>Lfor.cond%1%bbentry done
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.ec
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #0.pred
=Comment
undef-behavioursome.edge.Lfor.body%1%d=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141807 : isgepoffset(140958, 140292) : BOOL
140334 : 8 { 0x8 +1.95e129 } : BV:32
140982 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140295 : 0 { 0x0 } : BOOL
141479 : select(140982, 140983, 140284, 259, 140450, 140295) : BV:32
141542 : bvmul(140334, 141479) : BV:32
141544 : bvadd(140958, 141542) : BV:32
141822 : isgepoffset(141544, 141542) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
141796 : bvsign_ext(141479, 140464) : BV:64
141830 : bvmul(140803, 141796) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
141829 : bvextract(141830, 140468, 140464) : BV:32
141834 : eq(140292, 141829) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
141836 : isindexforsize(141834, 140487) : BOOL
141841 : islangaligned(141544, 140294) : BOOL
141870 : and(140452, 141059, 141060, 141807, 141822, 141836, 141841) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.ec
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry assume #1.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.body%1%d=>Lfor.cond%1%bbentry
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.body%1%d=>Lfor.cond%1%bbentry done
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.ec
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d assume #0.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.cond%1%bbentry=>Lfor.body%1%d
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.body%1%d done
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.ec
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d assume #0.pred
=Comment
undef-behaviour-align-assume.edge.Lfor.cond%1%bbentry=>Lfor.end%1%d
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.cond%1%bbentry=>Lfor.end%1%d done
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.ec
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d assume #0.pred
=Comment
undef-behavioursome.edge.Lfor.end%1%d=>E0%0%d
=LhsExpr
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
142012 : isgepoffset(140969, 140292) : BOOL
140307 : 4 { 0x4 +1.47e129 } : BV:32
141345 : bvadd(140307, 140969) : BV:32
142017 : isgepoffset(141345, 140307) : BOOL
140450 : 4 { 0x4 +1.0e1025 } : INT
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at Lfor.end%1%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=suffixpaths for src.llvm.main
=suffixpath_at_L0%0%d for src.llvm.main
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_Lentry%1%allocaI3 for src.llvm.main
=suffixpath_at_Lentry%1%allocaI3.graph_edge_composition
(L0%0%d=>Lentry%1%allocaI3)
=suffixpath_at_Lentry%1%allocaI4 for src.llvm.main
=suffixpath_at_Lentry%1%allocaI4.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*(Lentry%1%allocaI3=>Lentry%1%allocaI4))
=suffixpath_at_Lentry%2%allocaI3 for src.llvm.main
=suffixpath_at_Lentry%2%allocaI3.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*(Lentry%1%allocaI4=>Lentry%2%allocaI3)))
=suffixpath_at_Lentry%2%allocaI4 for src.llvm.main
=suffixpath_at_Lentry%2%allocaI4.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*(Lentry%2%allocaI3=>Lentry%2%allocaI4))))
=suffixpath_at_Lfor.body%1%d for src.llvm.main
=suffixpath_at_Lfor.body%1%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))))))
=suffixpath_at_Lfor.cond%1%bbentry for src.llvm.main
=suffixpath_at_Lfor.cond%1%bbentry.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)))))
=suffixpath_at_Lfor.end%1%d for src.llvm.main
=suffixpath_at_Lfor.end%1%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))
=suffixpath_at_E0%0%d for src.llvm.main
=suffixpath_at_E0%0%d.graph_edge_composition
((L0%0%d=>Lentry%1%allocaI3)*((Lentry%1%allocaI3=>Lentry%1%allocaI4)*((Lentry%1%allocaI4=>Lentry%2%allocaI3)*((Lentry%2%allocaI3=>Lentry%2%allocaI4)*((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.end%1%d)*(Lfor.end%1%d=>E0%0%d)))))))
=suffixpaths for src.llvm.main done
=PC_to_linename:
=pc
Lentry%3%d
=linename
line 19
=pc
Lentry%4%d
=linename
line 19
=pc
Lentry%5%d
=linename
line 20
=pc
Lentry%6%d
=linename
line 20
=pc
Lentry%7%d
=linename
line 21
=pc
Lentry%8%d
=linename
line 21
=pc
Lfor.body%1%d
=linename
line 22
=pc
Lfor.body%2%d
=linename
line 22
=pc
Lfor.body%3%d
=linename
line 22
=pc
Lfor.body%4%d
=linename
line 22
=pc
Lfor.body%5%d
=linename
line 22
=pc
Lfor.body%6%d
=linename
line 23
=pc
Lfor.body%7%d
=linename
line 23
=pc
Lfor.body%8%d
=linename
line 23
=pc
Lfor.body%9%d
=linename
line 23
=pc
Lfor.body%10%d
=linename
line 24
=pc
Lfor.cond%1%d
=linename
line 21
=pc
Lfor.cond%2%d
=linename
line 21
=pc
Lfor.cond%3%d
=linename
line 21
=pc
Lfor.end%1%d
=linename
line 25
=pc
Lfor.end%2%d
=linename
line 25
=pc
Lfor.end%3%d
=linename
line 25
=pc
Lfor.end%4%d
=linename
line 25
=pc
Lfor.end%5%d
=linename
line 25
=pc
Lfor.inc%1%d
=linename
line 21
=pc
Lfor.inc%2%d
=linename
line 21
=pc
Lfor.inc%3%d
=linename
line 21
=pc
Lfor.inc%4%d
=linename
line 21
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%3%d
=column_name
 at column 12
=pc
Lentry%4%d
=column_name
 at column 12
=pc
Lentry%5%d
=column_name
 at column 12
=pc
Lentry%6%d
=column_name
 at column 12
=pc
Lentry%7%d
=column_name
 at column 10
=pc
Lentry%8%d
=column_name
 at column 8
=pc
Lfor.body%1%d
=column_name
 at column 7
=pc
Lfor.body%2%d
=column_name
 at column 5
=pc
Lfor.body%3%d
=column_name
 at column 12
=pc
Lfor.body%4%d
=column_name
 at column 12
=pc
Lfor.body%5%d
=column_name
 at column 12
=pc
Lfor.body%6%d
=column_name
 at column 9
=pc
Lfor.body%7%d
=column_name
 at column 9
=pc
Lfor.body%8%d
=column_name
 at column 9
=pc
Lfor.body%9%d
=column_name
 at column 9
=pc
Lfor.body%10%d
=column_name
 at column 3
=pc
Lfor.cond%1%d
=column_name
 at column 15
=pc
Lfor.cond%2%d
=column_name
 at column 17
=pc
Lfor.cond%3%d
=column_name
 at column 3
=pc
Lfor.end%1%d
=column_name
 at column 12
=pc
Lfor.end%2%d
=column_name
 at column 12
=pc
Lfor.end%3%d
=column_name
 at column 15
=pc
Lfor.end%4%d
=column_name
 at column 15
=pc
Lfor.end%5%d
=column_name
 at column 3
=pc
Lfor.inc%1%d
=column_name
 at column 23
=pc
Lfor.inc%2%d
=column_name
 at column 23
=pc
Lfor.inc%3%d
=column_name
 at column 23
=pc
Lfor.inc%4%d
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%3%d
=line_and_column
line 19
=pc
Lentry%4%d
=line_and_column
line 19
=pc
Lentry%5%d
=line_and_column
line 20
=pc
Lentry%6%d
=line_and_column
line 20
=pc
Lentry%7%d
=line_and_column
(line 21 at column 10)
=pc
Lentry%8%d
=line_and_column
(line 21 at column 8)
=pc
Lfor.body%1%d
=line_and_column
(line 22 at column 7)
=pc
Lfor.body%2%d
=line_and_column
(line 22 at column 5)
=pc
Lfor.body%3%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%4%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%5%d
=line_and_column
(line 22 at column 12)
=pc
Lfor.body%6%d
=line_and_column
line 23
=pc
Lfor.body%7%d
=line_and_column
line 23
=pc
Lfor.body%8%d
=line_and_column
line 23
=pc
Lfor.body%9%d
=line_and_column
line 23
=pc
Lfor.body%10%d
=line_and_column
line 24
=pc
Lfor.cond%1%d
=line_and_column
(line 21 at column 15)
=pc
Lfor.cond%2%d
=line_and_column
(line 21 at column 17)
=pc
Lfor.cond%3%d
=line_and_column
(line 21 at column 3)
=pc
Lfor.end%1%d
=line_and_column
(line 25 at column 12)
=pc
Lfor.end%2%d
=line_and_column
(line 25 at column 12)
=pc
Lfor.end%3%d
=line_and_column
(line 25 at column 15)
=pc
Lfor.end%4%d
=line_and_column
(line 25 at column 15)
=pc
Lfor.end%5%d
=line_and_column
(line 25 at column 3)
=pc
Lfor.inc%1%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%2%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%3%d
=line_and_column
(line 21 at column 23)
=pc
Lfor.inc%4%d
=line_and_column
(line 21 at column 3)
=PC_to_line_and_column done
=SourceToLLVMVarnames:
a : src.llvm-%a
d : src.llvm-%d
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.src.local_size.=Lentry%1%d= : L0%0%d : 16
input.src.local_alloc_count.=Lentry%1%d= : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.local_size.=Lentry%2%d= : L0%0%d : 8
input.src.local_alloc_count.=Lentry%2%d= : L0%0%d : input.src.local_alloc_count
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : L0%0%d : (input.src.local./*___y___main__x__=Lentry%1%d=/ + 15)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : L0%0%d : (input.src.local./*___y___main__x__=Lentry%2%d=/ + 7)
input.src.llvm-%conv : L0%0%d : 0..input.src.llvm-%cmp2
src.llvm-%a : Lentry%3%bbentry : a
src.llvm-%d : Lentry%5%bbentry : d
input.src.local_alloc_count.=L0%0%d= : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr : L0%0%d : @__const.main.d
input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3 : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset : L0%0%d : input.src.llvm-%a
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : L0%0%d : true
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : L0%0%d : true
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset : L0%0%d : 0
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset : L0%0%d : 4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset : L0%0%d : (input.src.llvm-%d + 4)
input.src.llvm-%9 : L0%0%d : SRCMEM[input.src.llvm-%f1]_4
input.src.llvm-%cmp2 : L0%0%d : not(1 = input.src.llvm-%9)
input.src.llvm-%hidden-reg : L0%0%d : input.src.llvm-%hidden-reg
input.src.llvm-callee-save.0 : L0%0%d : input.src.llvm-callee-save.0
input.src.llvm-callee-save.1 : L0%0%d : input.src.llvm-callee-save.1
input.src.llvm-callee-save.2 : L0%0%d : input.src.llvm-callee-save.2
input.src.llvm-callee-save.3 : L0%0%d : input.src.llvm-callee-save.3
input.src.llvm-%a : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/
input.src.llvm-%d : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/
input.src.llvm-%0 : L0%0%d : input.src.llvm-%a
input.src.llvm-%1 : L0%0%d : input.src.llvm-%d
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%arrayidx : L0%0%d : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset
input.src.llvm-%4 : L0%0%d : input.src.llvm-%arrayidx
input.src.llvm-%5 : L0%0%d : input.src.llvm-%d
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset : L0%0%d : 0
input.src.llvm-%arrayidx1 : L0%0%d : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset
input.src.llvm-%6 : L0%0%d : input.src.llvm-%d
input.src.llvm-%7 : L0%0%d : input.src.llvm-%arrayidx1
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset : L0%0%d : 0
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset : L0%0%d : 4
input.src.llvm-%f1 : L0%0%d : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset
input.src.llvm-%ret-reg : L0%0%d : input.src.llvm-%conv
input.src.llvm-indir_tgt : L0%0%d : return-address
input.src.cur_rounding_mode : L0%0%d : ROUND_to_nearest_ties_to_even
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : L0%0%d : 8
input.src.local_alloc_count.Lentry%2%allocaI3 : L0%0%d : increment_count(input.src.local_alloc_count.=L0%0%d=)
input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3 : L0%0%d : increment_count(input.src.local_alloc_count.=L0%0%d=)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : L0%0%d : (7 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : L0%0%d : false
input.src.local_alloc_count.Lentry%1%allocaI3 : L0%0%d : input.src.local_alloc_count.=L0%0%d=
input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : L0%0%d : 16
input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : L0%0%d : false
input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : L0%0%d : (15 + input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : L0%0%d : 0
input.src.llvm-%2.Lfor.end%1%d : L0%0%d : input.src.llvm-mem.Lfor.cond%1%bbentry[@b]_4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : L0%0%d : 4
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : L0%0%d : (4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : L0%0%d : 0
input.src.llvm-%cmp.Lfor.end%1%d : L0%0%d : (input.src.llvm-mem.Lfor.cond%1%bbentry[@b]_4 <_s 2)
input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : L0%0%d : 4
input.src.llvm-%0.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%9.E0%0%d : L0%0%d : input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4
input.src.llvm-%cmp2.E0%0%d : L0%0%d : not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%1.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : L0%0%d : @__const.main.d
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%f1.E0%0%d : L0%0%d : (4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)
input.src.llvm-%hidden-reg.E0%0%d : L0%0%d : bvxor(input.src.llvm-%hidden-reg, input.src.llvm-callee-save.0, input.src.llvm-callee-save.1, input.src.llvm-callee-save.2, input.src.llvm-callee-save.3)
input.src.llvm-%ret-reg.E0%0%d : L0%0%d : 0..not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-indir_tgt.E0%0%d : L0%0%d : return-address
input.src.llvm-%5.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%6.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%7.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : L0%0%d : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
input.src.llvm-%conv.E0%0%d : L0%0%d : 0..not(1 = input.src.llvm-mem.Lfor.cond%1%bbentry[(4 + input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3)]_4)
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : L0%0%d : 0
input.src.local_alloc_count.Lfor.cond%1%bbentry : L0%0%d : increment_count(increment_count(input.src.local_alloc_count.=L0%0%d=))
input.src.cur_rounding_mode.Lentry%1%allocaI3 : L0%0%d : ROUND_to_nearest_ties_to_even
=InputLLVMToSourceVarnames done
=PotentialSCEVRelations:
=src.llvm-%a
=src.llvm-%a loop pc: L0%0%d
=src.llvm-%a val_scevb
=src.llvm-%a val_scevb scev
=src.llvm-%a val_scevb scev loop: L0%0%d
=src.llvm-%a val_scevb scev scev_overflow_flag: 
=src.llvm-%a val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%a val_scevb scev scev_expr done
=src.llvm-%a val_scevb unsigned lower bound: 32:0
=src.llvm-%a val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%a val_scevb signed lower bound: 32:2147483648
=src.llvm-%a val_scevb signed upper bound: 32:2147483645
=src.llvm-%a atuse_scevb
=src.llvm-%a atuse_scevb scev
=src.llvm-%a atuse_scevb scev loop: L0%0%d
=src.llvm-%a atuse_scevb scev scev_overflow_flag: 
=src.llvm-%a atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%a atuse_scevb scev scev_expr done
=src.llvm-%a atuse_scevb unsigned lower bound: 32:0
=src.llvm-%a atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%a atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%a atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%a atexit_scev nullptr
=src.llvm-%d
=src.llvm-%d loop pc: L0%0%d
=src.llvm-%d val_scevb
=src.llvm-%d val_scevb scev
=src.llvm-%d val_scevb scev loop: L0%0%d
=src.llvm-%d val_scevb scev scev_overflow_flag: 
=src.llvm-%d val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%d val_scevb scev scev_expr done
=src.llvm-%d val_scevb unsigned lower bound: 32:0
=src.llvm-%d val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%d val_scevb signed lower bound: 32:2147483648
=src.llvm-%d val_scevb signed upper bound: 32:2147483645
=src.llvm-%d atuse_scevb
=src.llvm-%d atuse_scevb scev
=src.llvm-%d atuse_scevb scev loop: L0%0%d
=src.llvm-%d atuse_scevb scev scev_overflow_flag: 
=src.llvm-%d atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%d atuse_scevb scev scev_expr done
=src.llvm-%d atuse_scevb unsigned lower bound: 32:0
=src.llvm-%d atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%d atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%d atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%d atexit_scev nullptr
=src.llvm-%0
=src.llvm-%0 loop pc: L0%0%d
=src.llvm-%0 val_scevb
=src.llvm-%0 val_scevb scev
=src.llvm-%0 val_scevb scev loop: L0%0%d
=src.llvm-%0 val_scevb scev scev_overflow_flag: 
=src.llvm-%0 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%0 val_scevb scev scev_expr done
=src.llvm-%0 val_scevb unsigned lower bound: 32:0
=src.llvm-%0 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%0 val_scevb signed lower bound: 32:2147483648
=src.llvm-%0 val_scevb signed upper bound: 32:2147483645
=src.llvm-%0 atuse_scevb
=src.llvm-%0 atuse_scevb scev
=src.llvm-%0 atuse_scevb scev loop: L0%0%d
=src.llvm-%0 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%0 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%0 atuse_scevb scev scev_expr done
=src.llvm-%0 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%0 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%0 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%0 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%0 atexit_scev nullptr
=src.llvm-%1
=src.llvm-%1 loop pc: L0%0%d
=src.llvm-%1 val_scevb
=src.llvm-%1 val_scevb scev
=src.llvm-%1 val_scevb scev loop: L0%0%d
=src.llvm-%1 val_scevb scev scev_overflow_flag: 
=src.llvm-%1 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%1 val_scevb scev scev_expr done
=src.llvm-%1 val_scevb unsigned lower bound: 32:0
=src.llvm-%1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%1 val_scevb signed lower bound: 32:2147483648
=src.llvm-%1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%1 atuse_scevb
=src.llvm-%1 atuse_scevb scev
=src.llvm-%1 atuse_scevb scev loop: L0%0%d
=src.llvm-%1 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%1 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%1 atuse_scevb scev scev_expr done
=src.llvm-%1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%1 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%1 atexit_scev nullptr
=src.llvm-%2
=src.llvm-%2 loop pc: Lfor.cond%1%d
=src.llvm-%2 val_scevb
=src.llvm-%2 val_scevb scev
=src.llvm-%2 val_scevb scev loop: L0%0%d
=src.llvm-%2 val_scevb scev scev_overflow_flag: 
=src.llvm-%2 val_scevb scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 val_scevb scev scev_expr done
=src.llvm-%2 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%2 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%2 val_scevb signed lower bound: 32:4294967295
=src.llvm-%2 val_scevb signed upper bound: 32:4294967295
=src.llvm-%2 atuse_scevb
=src.llvm-%2 atuse_scevb scev
=src.llvm-%2 atuse_scevb scev loop: L0%0%d
=src.llvm-%2 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%2 atuse_scevb scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 atuse_scevb scev scev_expr done
=src.llvm-%2 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%2 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%2 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%2 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%2 atexit_scev
=src.llvm-%2 atexit_scev loop: L0%0%d
=src.llvm-%2 atexit_scev scev_overflow_flag: 
=src.llvm-%2 atexit_scev scev_expr
3 : input.src.llvm-%2 : BV32
=src.llvm-%2 atexit_scev scev_expr done
=src.llvm-%3
=src.llvm-%3 loop pc: Lfor.cond%1%d
=src.llvm-%3 val_scevb
=src.llvm-%3 val_scevb scev
=src.llvm-%3 val_scevb scev loop: L0%0%d
=src.llvm-%3 val_scevb scev scev_overflow_flag: 
=src.llvm-%3 val_scevb scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 val_scevb scev scev_expr done
=src.llvm-%3 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%3 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%3 val_scevb signed lower bound: 32:4294967295
=src.llvm-%3 val_scevb signed upper bound: 32:4294967295
=src.llvm-%3 atuse_scevb
=src.llvm-%3 atuse_scevb scev
=src.llvm-%3 atuse_scevb scev loop: L0%0%d
=src.llvm-%3 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%3 atuse_scevb scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 atuse_scevb scev scev_expr done
=src.llvm-%3 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%3 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%3 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%3 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%3 atexit_scev
=src.llvm-%3 atexit_scev loop: L0%0%d
=src.llvm-%3 atexit_scev scev_overflow_flag: 
=src.llvm-%3 atexit_scev scev_expr
4 : input.src.llvm-%3 : BV32
=src.llvm-%3 atexit_scev scev_expr done
=src.llvm-%arrayidx
=src.llvm-%arrayidx loop pc: Lfor.cond%1%d
=src.llvm-%arrayidx val_scevb
=src.llvm-%arrayidx val_scevb scev
=src.llvm-%arrayidx val_scevb scev loop: L0%0%d
=src.llvm-%arrayidx val_scevb scev scev_overflow_flag: nsw
=src.llvm-%arrayidx val_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx val_scevb scev scev_expr done
=src.llvm-%arrayidx val_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx val_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx val_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx atuse_scevb
=src.llvm-%arrayidx atuse_scevb scev
=src.llvm-%arrayidx atuse_scevb scev loop: L0%0%d
=src.llvm-%arrayidx atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%arrayidx atuse_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx atuse_scevb scev scev_expr done
=src.llvm-%arrayidx atuse_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx atexit_scev
=src.llvm-%arrayidx atexit_scev loop: L0%0%d
=src.llvm-%arrayidx atexit_scev scev_overflow_flag: nsw
=src.llvm-%arrayidx atexit_scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%arrayidx atexit_scev scev_expr done
=src.llvm-%4
=src.llvm-%4 loop pc: Lfor.cond%1%d
=src.llvm-%4 val_scevb
=src.llvm-%4 val_scevb scev
=src.llvm-%4 val_scevb scev loop: L0%0%d
=src.llvm-%4 val_scevb scev scev_overflow_flag: nsw
=src.llvm-%4 val_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 val_scevb scev scev_expr done
=src.llvm-%4 val_scevb unsigned lower bound: 32:0
=src.llvm-%4 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%4 val_scevb signed lower bound: 32:2147483648
=src.llvm-%4 val_scevb signed upper bound: 32:2147483645
=src.llvm-%4 atuse_scevb
=src.llvm-%4 atuse_scevb scev
=src.llvm-%4 atuse_scevb scev loop: L0%0%d
=src.llvm-%4 atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%4 atuse_scevb scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 atuse_scevb scev scev_expr done
=src.llvm-%4 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%4 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%4 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%4 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%4 atexit_scev
=src.llvm-%4 atexit_scev loop: L0%0%d
=src.llvm-%4 atexit_scev scev_overflow_flag: nsw
=src.llvm-%4 atexit_scev scev_expr
5 : 00000000000000000000000000001000b
4 : input.src.llvm-%3 : BV32
6 : scev_op_mul(5, 4) : loop L0%0%d : nsw
1 : input.src.llvm-%a : BV32
7 : scev_op_add(6, 1) : loop L0%0%d : nsw
=src.llvm-%4 atexit_scev scev_expr done
=src.llvm-%5
=src.llvm-%5 loop pc: Lfor.cond%1%d
=src.llvm-%5 val_scevb
=src.llvm-%5 val_scevb scev
=src.llvm-%5 val_scevb scev loop: L0%0%d
=src.llvm-%5 val_scevb scev scev_overflow_flag: 
=src.llvm-%5 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 val_scevb scev scev_expr done
=src.llvm-%5 val_scevb unsigned lower bound: 32:0
=src.llvm-%5 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%5 val_scevb signed lower bound: 32:2147483648
=src.llvm-%5 val_scevb signed upper bound: 32:2147483645
=src.llvm-%5 atuse_scevb
=src.llvm-%5 atuse_scevb scev
=src.llvm-%5 atuse_scevb scev loop: L0%0%d
=src.llvm-%5 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%5 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 atuse_scevb scev scev_expr done
=src.llvm-%5 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%5 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%5 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%5 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%5 atexit_scev
=src.llvm-%5 atexit_scev loop: L0%0%d
=src.llvm-%5 atexit_scev scev_overflow_flag: 
=src.llvm-%5 atexit_scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%5 atexit_scev scev_expr done
=src.llvm-%arrayidx1
=src.llvm-%arrayidx1 loop pc: Lfor.cond%1%d
=src.llvm-%arrayidx1 val_scevb
=src.llvm-%arrayidx1 val_scevb scev
=src.llvm-%arrayidx1 val_scevb scev loop: L0%0%d
=src.llvm-%arrayidx1 val_scevb scev scev_overflow_flag: 
=src.llvm-%arrayidx1 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 val_scevb scev scev_expr done
=src.llvm-%arrayidx1 val_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx1 val_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx1 atuse_scevb
=src.llvm-%arrayidx1 atuse_scevb scev
=src.llvm-%arrayidx1 atuse_scevb scev loop: L0%0%d
=src.llvm-%arrayidx1 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%arrayidx1 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 atuse_scevb scev scev_expr done
=src.llvm-%arrayidx1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%arrayidx1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%arrayidx1 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%arrayidx1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%arrayidx1 atexit_scev
=src.llvm-%arrayidx1 atexit_scev loop: L0%0%d
=src.llvm-%arrayidx1 atexit_scev scev_overflow_flag: 
=src.llvm-%arrayidx1 atexit_scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%arrayidx1 atexit_scev scev_expr done
=src.llvm-%6
=src.llvm-%6 loop pc: Lfor.cond%1%d
=src.llvm-%6 val_scevb
=src.llvm-%6 val_scevb scev
=src.llvm-%6 val_scevb scev loop: L0%0%d
=src.llvm-%6 val_scevb scev scev_overflow_flag: 
=src.llvm-%6 val_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 val_scevb scev scev_expr done
=src.llvm-%6 val_scevb unsigned lower bound: 32:0
=src.llvm-%6 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%6 val_scevb signed lower bound: 32:2147483648
=src.llvm-%6 val_scevb signed upper bound: 32:2147483645
=src.llvm-%6 atuse_scevb
=src.llvm-%6 atuse_scevb scev
=src.llvm-%6 atuse_scevb scev loop: L0%0%d
=src.llvm-%6 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%6 atuse_scevb scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 atuse_scevb scev scev_expr done
=src.llvm-%6 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%6 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%6 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%6 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%6 atexit_scev
=src.llvm-%6 atexit_scev loop: L0%0%d
=src.llvm-%6 atexit_scev scev_overflow_flag: 
=src.llvm-%6 atexit_scev scev_expr
2 : input.src.llvm-%d : BV32
=src.llvm-%6 atexit_scev scev_expr done
=src.llvm-%7
=src.llvm-%7 loop pc: Lfor.cond%1%d
=src.llvm-%7 val_scevb
=src.llvm-%7 val_scevb scev
=src.llvm-%7 val_scevb scev loop: L0%0%d
=src.llvm-%7 val_scevb scev scev_overflow_flag: 
=src.llvm-%7 val_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 val_scevb scev scev_expr done
=src.llvm-%7 val_scevb unsigned lower bound: 32:0
=src.llvm-%7 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%7 val_scevb signed lower bound: 32:2147483648
=src.llvm-%7 val_scevb signed upper bound: 32:2147483645
=src.llvm-%7 atuse_scevb
=src.llvm-%7 atuse_scevb scev
=src.llvm-%7 atuse_scevb scev loop: L0%0%d
=src.llvm-%7 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%7 atuse_scevb scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 atuse_scevb scev scev_expr done
=src.llvm-%7 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%7 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%7 atuse_scevb signed lower bound: 32:2147483648
=src.llvm-%7 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%7 atexit_scev
=src.llvm-%7 atexit_scev loop: L0%0%d
=src.llvm-%7 atexit_scev scev_overflow_flag: 
=src.llvm-%7 atexit_scev scev_expr
1 : input.src.llvm-%a : BV32
=src.llvm-%7 atexit_scev scev_expr done
=src.llvm-%8
=src.llvm-%8 loop pc: Lfor.cond%1%d
=src.llvm-%8 val_scevb
=src.llvm-%8 val_scevb scev
=src.llvm-%8 val_scevb scev loop: L0%0%d
=src.llvm-%8 val_scevb scev scev_overflow_flag: 
=src.llvm-%8 val_scevb scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 val_scevb scev scev_expr done
=src.llvm-%8 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%8 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%8 val_scevb signed lower bound: 32:4294967295
=src.llvm-%8 val_scevb signed upper bound: 32:4294967295
=src.llvm-%8 atuse_scevb
=src.llvm-%8 atuse_scevb scev
=src.llvm-%8 atuse_scevb scev loop: L0%0%d
=src.llvm-%8 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%8 atuse_scevb scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 atuse_scevb scev scev_expr done
=src.llvm-%8 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%8 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%8 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%8 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%8 atexit_scev
=src.llvm-%8 atexit_scev loop: L0%0%d
=src.llvm-%8 atexit_scev scev_overflow_flag: 
=src.llvm-%8 atexit_scev scev_expr
8 : input.src.llvm-%8 : BV32
=src.llvm-%8 atexit_scev scev_expr done
=src.llvm-%inc
=src.llvm-%inc loop pc: Lfor.cond%1%d
=src.llvm-%inc val_scevb
=src.llvm-%inc val_scevb scev
=src.llvm-%inc val_scevb scev loop: L0%0%d
=src.llvm-%inc val_scevb scev scev_overflow_flag: 
=src.llvm-%inc val_scevb scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc val_scevb scev scev_expr done
=src.llvm-%inc val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%inc val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%inc val_scevb signed lower bound: 32:4294967295
=src.llvm-%inc val_scevb signed upper bound: 32:4294967295
=src.llvm-%inc atuse_scevb
=src.llvm-%inc atuse_scevb scev
=src.llvm-%inc atuse_scevb scev loop: L0%0%d
=src.llvm-%inc atuse_scevb scev scev_overflow_flag: 
=src.llvm-%inc atuse_scevb scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc atuse_scevb scev scev_expr done
=src.llvm-%inc atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%inc atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%inc atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%inc atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%inc atexit_scev
=src.llvm-%inc atexit_scev loop: L0%0%d
=src.llvm-%inc atexit_scev scev_overflow_flag: 
=src.llvm-%inc atexit_scev scev_expr
9 : 00000000000000000000000000000001b
8 : input.src.llvm-%8 : BV32
10 : scev_op_add(9, 8) : loop L0%0%d : 
=src.llvm-%inc atexit_scev scev_expr done
=src.llvm-%f1
=src.llvm-%f1 loop pc: L0%0%d
=src.llvm-%f1 val_scevb
=src.llvm-%f1 val_scevb scev
=src.llvm-%f1 val_scevb scev loop: L0%0%d
=src.llvm-%f1 val_scevb scev scev_overflow_flag: nsw
=src.llvm-%f1 val_scevb scev scev_expr
11 : 00000000000000000000000000000100b
2 : input.src.llvm-%d : BV32
12 : scev_op_add(11, 2) : loop L0%0%d : nsw
=src.llvm-%f1 val_scevb scev scev_expr done
=src.llvm-%f1 val_scevb unsigned lower bound: 32:0
=src.llvm-%f1 val_scevb unsigned upper bound: 32:4294967293
=src.llvm-%f1 val_scevb signed lower bound: 32:2147483652
=src.llvm-%f1 val_scevb signed upper bound: 32:2147483645
=src.llvm-%f1 atuse_scevb
=src.llvm-%f1 atuse_scevb scev
=src.llvm-%f1 atuse_scevb scev loop: L0%0%d
=src.llvm-%f1 atuse_scevb scev scev_overflow_flag: nsw
=src.llvm-%f1 atuse_scevb scev scev_expr
11 : 00000000000000000000000000000100b
2 : input.src.llvm-%d : BV32
12 : scev_op_add(11, 2) : loop L0%0%d : nsw
=src.llvm-%f1 atuse_scevb scev scev_expr done
=src.llvm-%f1 atuse_scevb unsigned lower bound: 32:0
=src.llvm-%f1 atuse_scevb unsigned upper bound: 32:4294967293
=src.llvm-%f1 atuse_scevb signed lower bound: 32:2147483652
=src.llvm-%f1 atuse_scevb signed upper bound: 32:2147483645
=src.llvm-%f1 atexit_scev nullptr
=src.llvm-%9
=src.llvm-%9 loop pc: L0%0%d
=src.llvm-%9 val_scevb
=src.llvm-%9 val_scevb scev
=src.llvm-%9 val_scevb scev loop: L0%0%d
=src.llvm-%9 val_scevb scev scev_overflow_flag: 
=src.llvm-%9 val_scevb scev scev_expr
13 : input.src.llvm-%9 : BV32
=src.llvm-%9 val_scevb scev scev_expr done
=src.llvm-%9 val_scevb unsigned lower bound: 32:4294967295
=src.llvm-%9 val_scevb unsigned upper bound: 32:4294967295
=src.llvm-%9 val_scevb signed lower bound: 32:4294967295
=src.llvm-%9 val_scevb signed upper bound: 32:4294967295
=src.llvm-%9 atuse_scevb
=src.llvm-%9 atuse_scevb scev
=src.llvm-%9 atuse_scevb scev loop: L0%0%d
=src.llvm-%9 atuse_scevb scev scev_overflow_flag: 
=src.llvm-%9 atuse_scevb scev scev_expr
13 : input.src.llvm-%9 : BV32
=src.llvm-%9 atuse_scevb scev scev_expr done
=src.llvm-%9 atuse_scevb unsigned lower bound: 32:4294967295
=src.llvm-%9 atuse_scevb unsigned upper bound: 32:4294967295
=src.llvm-%9 atuse_scevb signed lower bound: 32:4294967295
=src.llvm-%9 atuse_scevb signed upper bound: 32:4294967295
=src.llvm-%9 atexit_scev nullptr
=src.llvm-%conv
=src.llvm-%conv loop pc: L0%0%d
=src.llvm-%conv val_scevb
=src.llvm-%conv val_scevb scev
=src.llvm-%conv val_scevb scev loop: L0%0%d
=src.llvm-%conv val_scevb scev scev_overflow_flag: 
=src.llvm-%conv val_scevb scev scev_expr
14 : input.src.llvm-%cmp2 : BV1
15 : scev_op_zeroext(14) : loop L0%0%d : 
=src.llvm-%conv val_scevb scev scev_expr done
=src.llvm-%conv val_scevb unsigned lower bound: 32:0
=src.llvm-%conv val_scevb unsigned upper bound: 32:2
=src.llvm-%conv val_scevb signed lower bound: 32:0
=src.llvm-%conv val_scevb signed upper bound: 32:2
=src.llvm-%conv atuse_scevb
=src.llvm-%conv atuse_scevb scev
=src.llvm-%conv atuse_scevb scev loop: L0%0%d
=src.llvm-%conv atuse_scevb scev scev_overflow_flag: 
=src.llvm-%conv atuse_scevb scev scev_expr
14 : input.src.llvm-%cmp2 : BV1
15 : scev_op_zeroext(14) : loop L0%0%d : 
=src.llvm-%conv atuse_scevb scev scev_expr done
=src.llvm-%conv atuse_scevb unsigned lower bound: 32:0
=src.llvm-%conv atuse_scevb unsigned upper bound: 32:2
=src.llvm-%conv atuse_scevb signed lower bound: 32:0
=src.llvm-%conv atuse_scevb signed upper bound: 32:2
=src.llvm-%conv atexit_scev nullptr
=PotentialSCEVRelations done
=ReachingDefinitionsForLocs:
=Reaching Definitions at L0%0%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns done
=Reaching Definitions at Lentry%1%allocaI3
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 11 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 12 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 12 edges done
=reaching defns done
=Reaching Definitions at Lentry%1%allocaI4
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 11 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 13 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 15 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 15 edges done
=reaching defns done
=Reaching Definitions at Lentry%2%allocaI3
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 17 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 18 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 18 edges done
=reaching defns done
=Reaching Definitions at Lentry%2%allocaI4
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 14 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 17 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 20 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 21 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 21 edges done
=reaching defns done
=Reaching Definitions at Lfor.body%1%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 25 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 26 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 47 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 48 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns done
=Reaching Definitions at Lfor.cond%1%bbentry
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 25 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 26 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 47 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 48 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns done
=Reaching Definitions at Lfor.end%1%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 15 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 18 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 21 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 22 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 23 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 24 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=reaching defns for expr 25 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=reaching defns for expr 26 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 27 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 28 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 29 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 30 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 31 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 32 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 33 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 34 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 35 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 36 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 37 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 38 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 47 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 48 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 49 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 50 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 51 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 52 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 53 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 54 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 55 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns for expr 56
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 56 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 56 edges done
=reaching defns for expr 57
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 57 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 57 edges done
=reaching defns done
=Reaching Definitions at E0%0%d
=reaching defns for expr 0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 4 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 5 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 6 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 7 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 10 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 11 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 12 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
=reaching defns for expr 13 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 14 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.src.llvm-%conv.E0%0%d : BV:32
=reaching defns for expr 15 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 16 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=reaching defns for expr 17 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
=reaching defns for expr 18 edges
  Lentry%1%allocaI3=>Lentry%1%allocaI4
=reaching defns for expr 18 edges done
=reaching defns for expr 19
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=reaching defns for expr 19 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 19 edges done
=reaching defns for expr 20
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 20 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 20 edges done
=reaching defns for expr 21
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=reaching defns for expr 21 edges
  Lentry%2%allocaI3=>Lentry%2%allocaI4
=reaching defns for expr 21 edges done
=reaching defns for expr 22
1 : input.src.llvm-%a.Lentry%1%allocaI3 : BV:32
=reaching defns for expr 22 edges
  L0%0%d=>Lentry%1%allocaI3
=reaching defns for expr 22 edges done
=reaching defns for expr 23
1 : input.src.llvm-%d.Lentry%2%allocaI3 : BV:32
=reaching defns for expr 23 edges
  Lentry%1%allocaI4=>Lentry%2%allocaI3
=reaching defns for expr 23 edges done
=reaching defns for expr 24
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d : BV:32
=reaching defns for expr 24 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 24 edges done
=reaching defns for expr 25
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d : BV:32
=reaching defns for expr 25 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 25 edges done
=reaching defns for expr 26
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d : BV:32
=reaching defns for expr 26 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 26 edges done
=reaching defns for expr 27
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=reaching defns for expr 27 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 27 edges done
=reaching defns for expr 28
1 : input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=reaching defns for expr 28 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 28 edges done
=reaching defns for expr 29
1 : input.src.llvm-%9.E0%0%d : BV:32
=reaching defns for expr 29 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 29 edges done
=reaching defns for expr 30
1 : input.src.llvm-%cmp2.E0%0%d : BOOL
=reaching defns for expr 30 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 30 edges done
=reaching defns for expr 31
1 : input.src.llvm-%f1.E0%0%d : BV:32
=reaching defns for expr 31 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 31 edges done
=reaching defns for expr 32
1 : input.src.llvm-%hidden-reg.E0%0%d : BV:32
=reaching defns for expr 32 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 32 edges done
=reaching defns for expr 33
1 : input.src.llvm-%ret-reg.E0%0%d : BV:32
=reaching defns for expr 33 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 33 edges done
=reaching defns for expr 34
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=reaching defns for expr 34 edges
  Lfor.end%1%d=>E0%0%d
=reaching defns for expr 34 edges done
=reaching defns for expr 35
1 : input.src.llvm-%2.Lfor.body%1%d : BV:32
=reaching defns for expr 35 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 35 edges done
=reaching defns for expr 36
1 : input.src.llvm-%cmp.Lfor.body%1%d : BOOL
=reaching defns for expr 36 edges
  Lfor.cond%1%bbentry=>Lfor.body%1%d
=reaching defns for expr 36 edges done
=reaching defns for expr 37
1 : input.src.llvm-%2.Lfor.end%1%d : BV:32
=reaching defns for expr 37 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 37 edges done
=reaching defns for expr 38
1 : input.src.llvm-%cmp.Lfor.end%1%d : BOOL
=reaching defns for expr 38 edges
  Lfor.cond%1%bbentry=>Lfor.end%1%d
=reaching defns for expr 38 edges done
=reaching defns for expr 39
1 : input.src.llvm-%0.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 39 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 39 edges done
=reaching defns for expr 40
1 : input.src.llvm-%1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 40 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 40 edges done
=reaching defns for expr 41
1 : input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 41 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 41 edges done
=reaching defns for expr 42
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 42 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 42 edges done
=reaching defns for expr 43
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 43 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 43 edges done
=reaching defns for expr 44
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 44 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 44 edges done
=reaching defns for expr 45
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 45 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 45 edges done
=reaching defns for expr 46
1 : input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 46 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 46 edges done
=reaching defns for expr 47
1 : input.src.llvm-%3.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 47 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 47 edges done
=reaching defns for expr 48
1 : input.src.llvm-%4.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 48 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 48 edges done
=reaching defns for expr 49
1 : input.src.llvm-%5.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 49 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 49 edges done
=reaching defns for expr 50
1 : input.src.llvm-%6.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 50 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 50 edges done
=reaching defns for expr 51
1 : input.src.llvm-%7.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 51 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 51 edges done
=reaching defns for expr 52
1 : input.src.llvm-%8.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 52 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 52 edges done
=reaching defns for expr 53
1 : input.src.llvm-%arrayidx.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 53 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 53 edges done
=reaching defns for expr 54
1 : input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 54 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 54 edges done
=reaching defns for expr 55
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 55 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 55 edges done
=reaching defns for expr 56
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 56 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 56 edges done
=reaching defns for expr 57
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 57 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 57 edges done
=reaching defns for expr 58
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 58 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 58 edges done
=reaching defns for expr 59
1 : input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 59 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 59 edges done
=reaching defns for expr 60
1 : input.src.llvm-%inc.Lfor.cond%1%bbentry : BV:32
=reaching defns for expr 60 edges
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 60 edges done
=reaching defns for expr 61
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 61 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 61 edges done
=reaching defns for expr 62
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 62 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 62 edges done
=reaching defns for expr 63
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 63 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 63 edges done
=reaching defns for expr 64
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 64 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 64 edges done
=reaching defns for expr 65
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 65 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 65 edges done
=reaching defns for expr 66
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 66 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 66 edges done
=reaching defns for expr 67
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=reaching defns for expr 67 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 67 edges done
=reaching defns for expr 68
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : symbol.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=reaching defns for expr 68 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
  Lfor.body%1%d=>Lfor.cond%1%bbentry
=reaching defns for expr 68 edges done
=reaching defns for expr 69
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:8
=reaching defns for expr 69 edges
  Lentry%2%allocaI4=>Lfor.cond%1%bbentry
=reaching defns for expr 69 edges done
=reaching defns done
=ReachingDefinitionsForLocs done
=TFG_LLVM_done
=TFG_SSA_done
=dst_tfg
=TFG_SSA:
=TFG:
=Nodes: L0%0%d L0%1%spver L0%2%d L0%2%spver L0%2%allocaI1 L0%2%allocaI2 L0%2%allocaI3 L0%2%allocaI4 L1%1%d L3%1%spver L4%1%d E0%0%d
=Edges:
L0%0%d => L0%1%spver
L0%1%spver => L0%2%d
L0%2%d => L0%2%spver
L1%1%d => L3%1%spver
L3%1%spver => L4%1%d
L4%1%d => E0%0%d
L0%2%allocaI1 => L0%2%allocaI2
L0%2%allocaI2 => L1%1%d
L0%2%spver => L0%2%allocaI3
L0%2%allocaI3 => L0%2%allocaI4
L0%2%allocaI4 => L0%2%allocaI1
=graph done
=is_ssa_graph:
1
=StartState:
=dst.exreg.0.1
1 : input.dst.exreg.0.1 : BV:32
=dst.exreg.0.0
1 : input.dst.exreg.0.0 : BV:32
=dst.exreg.0.2
1 : input.dst.exreg.0.2 : BV:32
=dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=dst.exreg.1.0
1 : input.dst.exreg.1.0 : BV:64
=dst.exreg.1.1
1 : input.dst.exreg.1.1 : BV:64
=dst.exreg.1.2
1 : input.dst.exreg.1.2 : BV:64
=dst.exreg.1.3
1 : input.dst.exreg.1.3 : BV:64
=dst.exreg.1.4
1 : input.dst.exreg.1.4 : BV:64
=dst.exreg.1.5
1 : input.dst.exreg.1.5 : BV:64
=dst.exreg.1.6
1 : input.dst.exreg.1.6 : BV:64
=dst.exreg.1.7
1 : input.dst.exreg.1.7 : BV:64
=dst.exreg.2.0
1 : input.dst.exreg.2.0 : BV:128
=dst.exreg.2.1
1 : input.dst.exreg.2.1 : BV:128
=dst.exreg.2.2
1 : input.dst.exreg.2.2 : BV:128
=dst.exreg.2.3
1 : input.dst.exreg.2.3 : BV:128
=dst.exreg.2.4
1 : input.dst.exreg.2.4 : BV:128
=dst.exreg.2.5
1 : input.dst.exreg.2.5 : BV:128
=dst.exreg.2.6
1 : input.dst.exreg.2.6 : BV:128
=dst.exreg.2.7
1 : input.dst.exreg.2.7 : BV:128
=dst.exreg.3.0
1 : input.dst.exreg.3.0 : BV:256
=dst.exreg.3.1
1 : input.dst.exreg.3.1 : BV:256
=dst.exreg.3.2
1 : input.dst.exreg.3.2 : BV:256
=dst.exreg.3.3
1 : input.dst.exreg.3.3 : BV:256
=dst.exreg.3.4
1 : input.dst.exreg.3.4 : BV:256
=dst.exreg.3.5
1 : input.dst.exreg.3.5 : BV:256
=dst.exreg.3.6
1 : input.dst.exreg.3.6 : BV:256
=dst.exreg.3.7
1 : input.dst.exreg.3.7 : BV:256
=dst.exreg.3.8
1 : input.dst.exreg.3.8 : BV:256
=dst.exreg.3.9
1 : input.dst.exreg.3.9 : BV:256
=dst.exreg.3.10
1 : input.dst.exreg.3.10 : BV:256
=dst.exreg.3.11
1 : input.dst.exreg.3.11 : BV:256
=dst.exreg.3.12
1 : input.dst.exreg.3.12 : BV:256
=dst.exreg.3.13
1 : input.dst.exreg.3.13 : BV:256
=dst.exreg.3.14
1 : input.dst.exreg.3.14 : BV:256
=dst.exreg.3.15
1 : input.dst.exreg.3.15 : BV:256
=dst.exreg.4.0
1 : input.dst.exreg.4.0 : BV:79
=dst.exreg.4.1
1 : input.dst.exreg.4.1 : BV:79
=dst.exreg.4.2
1 : input.dst.exreg.4.2 : BV:79
=dst.exreg.4.3
1 : input.dst.exreg.4.3 : BV:79
=dst.exreg.4.4
1 : input.dst.exreg.4.4 : BV:79
=dst.exreg.4.5
1 : input.dst.exreg.4.5 : BV:79
=dst.exreg.4.6
1 : input.dst.exreg.4.6 : BV:79
=dst.exreg.4.7
1 : input.dst.exreg.4.7 : BV:79
=dst.exreg.5.0
1 : input.dst.exreg.5.0 : BV:16
=dst.exreg.5.1
1 : input.dst.exreg.5.1 : BV:16
=dst.exreg.5.2
1 : input.dst.exreg.5.2 : BV:16
=dst.exreg.5.3
1 : input.dst.exreg.5.3 : BV:16
=dst.exreg.5.4
1 : input.dst.exreg.5.4 : BV:16
=dst.exreg.5.5
1 : input.dst.exreg.5.5 : BV:16
=dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=dst.exreg.7.0
1 : input.dst.exreg.7.0 : BV:1
=dst.exreg.8.0
1 : input.dst.exreg.8.0 : BV:1
=dst.exreg.9.0
1 : input.dst.exreg.9.0 : BV:1
=dst.exreg.10.0
1 : input.dst.exreg.10.0 : BV:1
=dst.exreg.11.0
1 : input.dst.exreg.11.0 : BV:1
=dst.exreg.12.0
1 : input.dst.exreg.12.0 : BV:1
=dst.exreg.13.0
1 : input.dst.exreg.13.0 : BV:1
=dst.exreg.14.0
1 : input.dst.exreg.14.0 : BV:1
=dst.exreg.15.0
1 : input.dst.exreg.15.0 : BV:1
=dst.exreg.16.0
1 : input.dst.exreg.16.0 : BV:1
=dst.exreg.17.0
1 : input.dst.exreg.17.0 : BV:3
=dst.exreg.18.0
1 : input.dst.exreg.18.0 : BV:2
=dst.exreg.19.0
1 : input.dst.exreg.19.0 : BV:16
=dst.exreg.20.0
1 : input.dst.exreg.20.0 : BV:16
=dst.exreg.21.0
1 : input.dst.exreg.21.0 : BV:48
=dst.exreg.22.0
1 : input.dst.exreg.22.0 : BV:48
=dst.exreg.23.0
1 : input.dst.exreg.23.0 : BV:11
=dst.exreg.24.0
1 : input.dst.exreg.24.0 : BV:2
=dst.exreg.25.0
1 : input.dst.exreg.25.0 : BV:1
=dst.exreg.26.0
1 : input.dst.exreg.26.0 : BV:1
=dst.exreg.27.0
1 : input.dst.exreg.27.0 : BV:1
=dst.exreg.28.0
1 : input.dst.exreg.28.0 : BV:1
=dst.exreg.29.0
1 : input.dst.exreg.29.0 : BV:16
=dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.fpstack
1 : input.dst.fpstack : ARRAY[BV:3 -> FLOAT:79]
=dst.contains_float_op
1 : input.dst.contains_float_op : BOOL
=dst.contains_unsupported_op
1 : input.dst.contains_unsupported_op : BOOL
=dst.llvm-indir_tgt
1 : input.dst.llvm-indir_tgt : BV:32
=dst.invisible_regs.0
1 : input.dst.invisible_reg.0.0 : BV:8
=dst.invisible_regs.1
1 : input.dst.invisible_reg.0.1 : BV:8
=dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=state_end
=PC to var-version map at L0%0%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3 : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5 : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6 : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7 : BV:32
=version for dst.mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent : BOOL
=var-version done
=PC to var-version map at L0%1%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=var-version done
=PC to var-version map at L0%2%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI1
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI2
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI3
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L0%2%allocaI4
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=var-version done
=PC to var-version map at L1%1%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=var-version done
=PC to var-version map at L3%1%spver
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=var-version done
=PC to var-version map at L4%1%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=var-version done
=PC to var-version map at E0%0%d
=version for dst.exreg.0.3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=version for dst.exreg.0.4
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=version for dst.exreg.0.5
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=version for dst.exreg.0.6
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=version for dst.exreg.0.7
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=version for dst.mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=version for dst.mem.alloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=version for dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=version for dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=version for dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=var-version done
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d
=Output: symbol.2.0
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: symbol.3.0
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: heap
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: llvm-indir_tgt
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=Output: llvm-%ret-reg
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;main}
=memlabel_map.0 for call-context {*;main}
mlloc.dst.0 : memlabel-mem--esp
=memlabel_map.1 for call-context {*;main}
mlloc.dst.1 : memlabel-mem--esp
=memlabel_map.2 for call-context {*;main}
mlloc.dst.2 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.3 for call-context {*;main}
mlloc.dst.3 : memlabel-mem--symbol.2.0
=memlabel_map.4 for call-context {*;main}
mlloc.dst.4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.5 for call-context {*;main}
mlloc.dst.5 : memlabel-mem--symbol.2.0
=memlabel_map.6 for call-context {*;main}
mlloc.dst.6 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.7 for call-context {*;main}
mlloc.dst.7 : memlabel-mem--esp
=memlabel_map.8 for call-context {*;main}
mlloc.dst.8 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.9 for call-context {*;main}
mlvar.dst.0 : memlabel-mem--symbol.2.0
=memlabel_map.10 for call-context {*;main}
mlvar.dst.1 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
=memlabel_map.11 for call-context {*;main}
mlvar.dst.2 : memlabel-mem--esp
=Edge: L0%0%d => L0%1%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.3.L0%1%spver
1 : callee_save_const.2 : BV:32
=dst.exreg.0.4.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.0.5.L0%1%spver
1 : callee_save_const.0 : BV:32
=dst.exreg.0.6.L0%1%spver
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7.L0%1%spver
1 : callee_save_const.3 : BV:32
=dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.mem.L0%1%spver
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4 : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvsub(1, 2) : BV:32
4 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
5 : bvule(3, 4) : BOOL
6 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
8 : region_agrees_with_memlabel(6, 2, 3, 7) : BOOL
9 : bvule(2, 1) : BOOL
10 : and(8, 9) : BOOL
11 : implies(5, 10) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(start_pc_edge*dst_tfg_add_stack_pointer_translation_at_function_entry)
tfg_edge_comment end

=Edge: L0%1%spver => L0%2%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L0%2%d
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.mem.L0%2%d
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%d
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L0%2%d => L0%2%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
=dst.exreg.10.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 { 0x0 } : BV:31
13 : 1 { 0x1 } : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : not(27) : BOOL
29 : 0 { 0x0 } : BV:1
30 : ite(28, 13, 29) : BV:1
=dst.exreg.11.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvuge(1, 4) : BOOL
19 : and(17, 18) : BOOL
20 : 0 { 0x0 } : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.12.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : bvextract(3, 12, 13) : BV:32
19 : bvextract(6, 12, 13) : BV:32
20 : bvadd(18, 19) : BV:32
21 : 0 { 0x0 } : BV:31
22 : bvconcat(21, 9) : BV:32
23 : bvadd(20, 22) : BV:32
24 : bvextract(23, 12, 12) : BV:1
25 : eq(24, 9) : BOOL
26 : donotsimplify_using_solver_subsign(25, 1, 4) : BOOL
27 : bvextract(3, 12, 12) : BV:1
28 : eq(27, 9) : BOOL
29 : bvextract(6, 12, 12) : BV:1
30 : eq(29, 9) : BOOL
31 : iff(28, 30) : BOOL
32 : xor(28, 25) : BOOL
33 : and(31, 32) : BOOL
34 : donotsimplify_using_solver_suboverflow(33, 1, 4) : BOOL
35 : iff(26, 34) : BOOL
36 : and(17, 35) : BOOL
37 : 0 { 0x0 } : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.13.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvuge(1, 4) : BOOL
18 : not(17) : BOOL
19 : or(16, 18) : BOOL
20 : 0 { 0x0 } : BV:1
21 : ite(19, 9, 20) : BV:1
=dst.exreg.14.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : bvextract(3, 12, 13) : BV:32
18 : bvextract(6, 12, 13) : BV:32
19 : bvadd(17, 18) : BV:32
20 : 0 { 0x0 } : BV:31
21 : bvconcat(20, 9) : BV:32
22 : bvadd(19, 21) : BV:32
23 : bvextract(22, 12, 12) : BV:1
24 : eq(23, 9) : BOOL
25 : donotsimplify_using_solver_subsign(24, 1, 4) : BOOL
26 : bvextract(3, 12, 12) : BV:1
27 : eq(26, 9) : BOOL
28 : bvextract(6, 12, 12) : BV:1
29 : eq(28, 9) : BOOL
30 : iff(27, 29) : BOOL
31 : xor(27, 24) : BOOL
32 : and(30, 31) : BOOL
33 : donotsimplify_using_solver_suboverflow(32, 1, 4) : BOOL
34 : iff(25, 33) : BOOL
35 : not(34) : BOOL
36 : or(16, 35) : BOOL
37 : 0 { 0x0 } : BV:1
38 : ite(36, 9, 37) : BV:1
=dst.exreg.15.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.16.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvnot(7) : BV:32
9 : bvzero_ext(8, 2) : BV:33
10 : bvextract(9, 4, 5) : BV:32
11 : bvadd(6, 10) : BV:32
12 : 0 { 0x0 } : BV:31
13 : 1 { 0x1 } : BV:1
14 : bvconcat(12, 13) : BV:32
15 : bvadd(11, 14) : BV:32
16 : bvextract(15, 4, 4) : BV:1
17 : eq(16, 13) : BOOL
18 : donotsimplify_using_solver_subsign(17, 1, 7) : BOOL
19 : bvextract(3, 4, 4) : BV:1
20 : eq(19, 13) : BOOL
21 : bvextract(9, 4, 4) : BV:1
22 : eq(21, 13) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 17) : BOOL
25 : and(23, 24) : BOOL
26 : donotsimplify_using_solver_suboverflow(25, 1, 7) : BOOL
27 : iff(18, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 13, 28) : BV:1
=dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 1 { 0x1 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.4.L0%2%d : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : bvuge(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 { 0x1 } : BV:1
10 : 0 { 0x0 } : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
13 : 5 { 0x5 +1.0e1025 } : INT
14 : bvextract(12, 2, 13) : BV:27
15 : bvzero_ext(5, 3) : BV:33
16 : bvnot(6) : BV:32
17 : bvzero_ext(16, 3) : BV:33
18 : bvadd(15, 17) : BV:33
19 : 0 { 0x0 +1.0e129 } : BV:32
20 : bvconcat(19, 9) : BV:33
21 : bvadd(18, 20) : BV:33
22 : 0 { 0x0 +1.0e1025 } : INT
23 : bvextract(21, 2, 22) : BV:32
24 : 4 { 0x4 +1.0e1025 } : INT
25 : bvextract(23, 24, 24) : BV:1
26 : eq(25, 9) : BOOL
27 : bvextract(15, 24, 24) : BV:1
28 : eq(27, 9) : BOOL
29 : xor(26, 28) : BOOL
30 : ite(29, 9, 10) : BV:1
31 : 3 { 0x3 +1.0e1025 } : INT
32 : bvextract(12, 31, 22) : BV:4
33 : bvconcat(30, 32) : BV:5
34 : bvconcat(14, 33) : BV:32
35 : 12 { 0xc +1.0e1025 } : INT
36 : bvextract(34, 2, 35) : BV:20
37 : bvextract(15, 2, 2) : BV:1
38 : eq(37, 9) : BOOL
39 : bvextract(17, 2, 2) : BV:1
40 : eq(39, 9) : BOOL
41 : iff(38, 40) : BOOL
42 : bvextract(15, 2, 22) : BV:32
43 : bvextract(17, 2, 22) : BV:32
44 : bvadd(42, 43) : BV:32
45 : 0 { 0x0 } : BV:31
46 : bvconcat(45, 9) : BV:32
47 : bvadd(44, 46) : BV:32
48 : bvextract(47, 2, 2) : BV:1
49 : eq(48, 9) : BOOL
50 : xor(38, 49) : BOOL
51 : and(41, 50) : BOOL
52 : donotsimplify_using_solver_suboverflow(51, 5, 6) : BOOL
53 : ite(52, 9, 10) : BV:1
54 : 10 { 0xa +1.0e1025 } : INT
55 : bvextract(34, 54, 22) : BV:11
56 : bvconcat(53, 55) : BV:12
57 : bvconcat(36, 56) : BV:32
58 : 8 { 0x8 +1.0e1025 } : INT
59 : bvextract(57, 2, 58) : BV:24
60 : donotsimplify_using_solver_subsign(49, 5, 6) : BOOL
61 : ite(60, 9, 10) : BV:1
62 : 6 { 0x6 +1.0e1025 } : INT
63 : bvextract(57, 62, 22) : BV:7
64 : bvconcat(61, 63) : BV:8
65 : bvconcat(59, 64) : BV:32
66 : 7 { 0x7 +1.0e1025 } : INT
67 : bvextract(65, 2, 66) : BV:25
68 : eq(23, 19) : BOOL
69 : donotsimplify_using_solver_subzero(68, 5, 6) : BOOL
70 : ite(69, 9, 10) : BV:1
71 : bvextract(65, 13, 22) : BV:6
72 : bvconcat(70, 71) : BV:7
73 : bvconcat(67, 72) : BV:32
74 : bvextract(73, 2, 31) : BV:29
75 : bvextract(73, 3, 22) : BV:2
76 : bvconcat(10, 75) : BV:3
77 : bvconcat(74, 76) : BV:32
78 : 11 { 0xb +1.0e1025 } : INT
79 : bvextract(77, 2, 78) : BV:21
80 : bvextract(1, 54, 54) : BV:1
81 : eq(80, 9) : BOOL
82 : ite(81, 9, 10) : BV:1
83 : 9 { 0x9 +1.0e1025 } : INT
84 : bvextract(77, 83, 22) : BV:10
85 : bvconcat(82, 84) : BV:11
86 : bvconcat(79, 85) : BV:32
=dst.exreg.7.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 9, 17) : BV:1
=dst.exreg.8.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : eq(14, 8) : BOOL
16 : donotsimplify_using_solver_subzero(15, 1, 4) : BOOL
17 : not(16) : BOOL
18 : 0 { 0x0 } : BV:1
19 : ite(17, 9, 18) : BV:1
=dst.exreg.9.0.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4.L0%2%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvnot(4) : BV:32
6 : bvzero_ext(5, 2) : BV:33
7 : bvadd(3, 6) : BV:33
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : 1 { 0x1 } : BV:1
10 : bvconcat(8, 9) : BV:33
11 : bvadd(7, 10) : BV:33
12 : 31 { 0x1f +1.0e1025 } : INT
13 : 0 { 0x0 +1.0e1025 } : INT
14 : bvextract(11, 12, 13) : BV:32
15 : bvsub(1, 14) : BV:32
16 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
17 : bvule(15, 16) : BOOL
18 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
19 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
20 : region_agrees_with_memlabel(18, 14, 15, 19) : BOOL
21 : bvule(14, 1) : BOOL
22 : and(20, 21) : BOOL
23 : implies(17, 22) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented
tfg_edge_comment end

=Edge: L1%1%d => L3%1%spver
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.0.L3%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.exreg.0.4.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.exreg.10.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : not(21) : BOOL
23 : 0 { 0x0 } : BV:1
24 : ite(22, 12, 23) : BV:1
=dst.exreg.11.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 32 { 0x20 +1.0e1025 } : INT
14 : bvextract(6, 13, 13) : BV:1
15 : 1 { 0x1 } : BV:1
16 : eq(14, 15) : BOOL
17 : not(16) : BOOL
18 : and(12, 17) : BOOL
19 : 0 { 0x0 } : BV:1
20 : ite(18, 15, 19) : BV:1
=dst.exreg.12.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : bvextract(3, 7, 8) : BV:32
14 : bvextract(5, 7, 8) : BV:32
15 : bvadd(13, 14) : BV:32
16 : bvextract(15, 7, 7) : BV:1
17 : 1 { 0x1 } : BV:1
18 : eq(16, 17) : BOOL
19 : bvextract(3, 7, 7) : BV:1
20 : eq(19, 17) : BOOL
21 : bvextract(5, 7, 7) : BV:1
22 : eq(21, 17) : BOOL
23 : iff(20, 22) : BOOL
24 : xor(20, 18) : BOOL
25 : and(23, 24) : BOOL
26 : iff(18, 25) : BOOL
27 : and(12, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 17, 28) : BV:1
=dst.exreg.13.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : 32 { 0x20 +1.0e1025 } : INT
13 : bvextract(6, 12, 12) : BV:1
14 : 1 { 0x1 } : BV:1
15 : eq(13, 14) : BOOL
16 : or(11, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 14, 17) : BV:1
=dst.exreg.14.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : bvextract(3, 7, 8) : BV:32
13 : bvextract(5, 7, 8) : BV:32
14 : bvadd(12, 13) : BV:32
15 : bvextract(14, 7, 7) : BV:1
16 : 1 { 0x1 } : BV:1
17 : eq(15, 16) : BOOL
18 : bvextract(3, 7, 7) : BV:1
19 : eq(18, 16) : BOOL
20 : bvextract(5, 7, 7) : BV:1
21 : eq(20, 16) : BOOL
22 : iff(19, 21) : BOOL
23 : xor(19, 17) : BOOL
24 : and(22, 23) : BOOL
25 : iff(17, 24) : BOOL
26 : not(25) : BOOL
27 : or(11, 26) : BOOL
28 : 0 { 0x0 } : BV:1
29 : ite(27, 16, 28) : BV:1
=dst.exreg.15.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 { 0x20 +1.0e1025 } : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 { 0x1 } : BV:1
10 : eq(8, 9) : BOOL
11 : not(10) : BOOL
12 : 0 { 0x0 } : BV:1
13 : ite(11, 9, 12) : BV:1
=dst.exreg.16.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 31 { 0x1f +1.0e1025 } : INT
5 : 0 { 0x0 +1.0e1025 } : INT
6 : bvextract(3, 4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 2) : BV:33
9 : bvextract(8, 4, 5) : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 4, 4) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : bvextract(3, 4, 4) : BV:1
15 : eq(14, 12) : BOOL
16 : bvextract(8, 4, 4) : BV:1
17 : eq(16, 12) : BOOL
18 : iff(15, 17) : BOOL
19 : xor(15, 13) : BOOL
20 : and(18, 19) : BOOL
21 : iff(13, 20) : BOOL
22 : 0 { 0x0 } : BV:1
23 : ite(21, 12, 22) : BV:1
=dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 1 { 0x1 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.dst.exreg.0.4.L1%1%d : BV:32
6 : bvzero_ext(5, 3) : BV:33
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : bvzero_ext(7, 3) : BV:33
9 : bvadd(6, 8) : BV:33
10 : 32 { 0x20 +1.0e1025 } : INT
11 : bvextract(9, 10, 10) : BV:1
12 : 1 { 0x1 } : BV:1
13 : eq(11, 12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 12, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
17 : 5 { 0x5 +1.0e1025 } : INT
18 : bvextract(16, 2, 17) : BV:27
19 : 0 { 0x0 +1.0e1025 } : INT
20 : bvextract(9, 2, 19) : BV:32
21 : 4 { 0x4 +1.0e1025 } : INT
22 : bvextract(20, 21, 21) : BV:1
23 : eq(22, 12) : BOOL
24 : bvextract(6, 21, 21) : BV:1
25 : eq(24, 12) : BOOL
26 : xor(23, 25) : BOOL
27 : ite(26, 12, 14) : BV:1
28 : 3 { 0x3 +1.0e1025 } : INT
29 : bvextract(16, 28, 19) : BV:4
30 : bvconcat(27, 29) : BV:5
31 : bvconcat(18, 30) : BV:32
32 : 12 { 0xc +1.0e1025 } : INT
33 : bvextract(31, 2, 32) : BV:20
34 : bvextract(6, 2, 2) : BV:1
35 : eq(34, 12) : BOOL
36 : bvextract(8, 2, 2) : BV:1
37 : eq(36, 12) : BOOL
38 : iff(35, 37) : BOOL
39 : bvextract(6, 2, 19) : BV:32
40 : bvextract(8, 2, 19) : BV:32
41 : bvadd(39, 40) : BV:32
42 : bvextract(41, 2, 2) : BV:1
43 : eq(42, 12) : BOOL
44 : xor(35, 43) : BOOL
45 : and(38, 44) : BOOL
46 : ite(45, 12, 14) : BV:1
47 : 10 { 0xa +1.0e1025 } : INT
48 : bvextract(31, 47, 19) : BV:11
49 : bvconcat(46, 48) : BV:12
50 : bvconcat(33, 49) : BV:32
51 : 8 { 0x8 +1.0e1025 } : INT
52 : bvextract(50, 2, 51) : BV:24
53 : ite(43, 12, 14) : BV:1
54 : 6 { 0x6 +1.0e1025 } : INT
55 : bvextract(50, 54, 19) : BV:7
56 : bvconcat(53, 55) : BV:8
57 : bvconcat(52, 56) : BV:32
58 : 7 { 0x7 +1.0e1025 } : INT
59 : bvextract(57, 2, 58) : BV:25
60 : 0 { 0x0 +1.0e129 } : BV:32
61 : eq(20, 60) : BOOL
62 : ite(61, 12, 14) : BV:1
63 : bvextract(57, 17, 19) : BV:6
64 : bvconcat(62, 63) : BV:7
65 : bvconcat(59, 64) : BV:32
66 : bvextract(65, 2, 28) : BV:29
67 : bvextract(65, 3, 19) : BV:2
68 : bvconcat(14, 67) : BV:3
69 : bvconcat(66, 68) : BV:32
70 : 11 { 0xb +1.0e1025 } : INT
71 : bvextract(69, 2, 70) : BV:21
72 : bvextract(1, 47, 47) : BV:1
73 : eq(72, 12) : BOOL
74 : ite(73, 12, 14) : BV:1
75 : 9 { 0x9 +1.0e1025 } : INT
76 : bvextract(69, 75, 19) : BV:10
77 : bvconcat(74, 76) : BV:11
78 : bvconcat(71, 77) : BV:32
=dst.exreg.7.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : 1 { 0x1 } : BV:1
13 : 0 { 0x0 } : BV:1
14 : ite(11, 12, 13) : BV:1
=dst.exreg.8.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : eq(9, 10) : BOOL
12 : not(11) : BOOL
13 : 1 { 0x1 } : BV:1
14 : 0 { 0x0 } : BV:1
15 : ite(12, 13, 14) : BV:1
=dst.exreg.9.0.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 32 { 0x20 +1.0e1025 } : INT
8 : bvextract(6, 7, 7) : BV:1
9 : 1 { 0x1 } : BV:1
10 : eq(8, 9) : BOOL
11 : 0 { 0x0 } : BV:1
12 : ite(10, 9, 11) : BV:1
=dst.mem.L3%1%spver
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.exreg.0.4.L1%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 16 { 0x10 +1.190e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
10 : bvsub(1, 9) : BV:32
11 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
12 : bvule(10, 11) : BOOL
13 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
14 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
15 : region_agrees_with_memlabel(13, 9, 10, 14) : BOOL
16 : bvule(9, 1) : BOOL
17 : and(15, 16) : BOOL
18 : implies(12, 17) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:((te_comment_not_implemented*te_comment_not_implemented)*te_comment_not_implemented)
tfg_edge_comment end

=Edge: L3%1%spver => L4%1%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L4%1%d
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=dst.mem.L4%1%d
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L4%1%d
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L4%1%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.E0%0%d
1 : input.dst.exreg.0.4.L4%1%d : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : bvzero_ext(1, 2) : BV:33
4 : 4 { 0x4 +1.47e129 } : BV:32
5 : bvzero_ext(4, 2) : BV:33
6 : bvadd(3, 5) : BV:33
7 : 31 { 0x1f +1.0e1025 } : INT
8 : 0 { 0x0 +1.0e1025 } : INT
9 : bvextract(6, 7, 8) : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.1 : MEMLABEL
4 : input.dst.exreg.0.4.L4%1%d : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:te_comment_not_implemented
tfg_edge_comment end

=Edge: L0%2%allocaI1 => L0%2%allocaI2
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.mem.L0%2%allocaI2
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI2
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
8 : ite(1, 6, 7) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI2 => L1%1%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:sp-version-added-by-us
tfg_edge_comment end

=Edge: L0%2%spver => L0%2%allocaI3
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-size-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI3 => L0%2%allocaI4
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.mem.L0%2%allocaI4
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
5 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : store_uninit(1, 6, 3, 4, 5, 7) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI4
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 1 { 0x1 +1.11e129 } : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
8 : ite(1, 6, 7) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-edge-added-by-us
tfg_edge_comment end

=Edge: L0%2%allocaI4 => L0%2%allocaI1
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:dst-alloca-size-edge-added-by-us
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in dst
=Loc 100004 in dst.
REGMEM
dst.exreg.0.4
1 : input.dst.exreg.0.4 : BV:32
=Loc 100017 in dst.
REGMEM
dst.exreg.6.0
1 : input.dst.exreg.6.0 : BV:32
=Loc 100024 in dst.
REGMEM
dst.sp=L0%0%d=sp
1 : input.dst.sp=L0%0%d=sp : BV:32
=Loc 100026 in dst.
REGMEM
dst.local_size.=Lentry%1%d=
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=Loc 100027 in dst.
REGMEM
dst.local_size.=Lentry%2%d=
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=Loc 100028 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=Loc 100029 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=Loc 100030 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=Loc 100031 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=Loc 100034 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100035 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100036 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100037 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100038 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100039 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100040 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100041 in dst.
MASKED
=mem
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100044 in dst.
REGMEM
dst.exreg.0.4.L0%2%d
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=Loc 100045 in dst.
REGMEM
dst.exreg.0.4.L0%2%spver
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=Loc 100046 in dst.
REGMEM
dst.exreg.10.0.L0%2%spver
1 : input.dst.exreg.10.0.L0%2%spver : BV:1
=Loc 100047 in dst.
REGMEM
dst.exreg.11.0.L0%2%spver
1 : input.dst.exreg.11.0.L0%2%spver : BV:1
=Loc 100048 in dst.
REGMEM
dst.exreg.12.0.L0%2%spver
1 : input.dst.exreg.12.0.L0%2%spver : BV:1
=Loc 100049 in dst.
REGMEM
dst.exreg.13.0.L0%2%spver
1 : input.dst.exreg.13.0.L0%2%spver : BV:1
=Loc 100050 in dst.
REGMEM
dst.exreg.14.0.L0%2%spver
1 : input.dst.exreg.14.0.L0%2%spver : BV:1
=Loc 100051 in dst.
REGMEM
dst.exreg.15.0.L0%2%spver
1 : input.dst.exreg.15.0.L0%2%spver : BV:1
=Loc 100052 in dst.
REGMEM
dst.exreg.16.0.L0%2%spver
1 : input.dst.exreg.16.0.L0%2%spver : BV:1
=Loc 100053 in dst.
REGMEM
dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
=Loc 100054 in dst.
REGMEM
dst.exreg.7.0.L0%2%spver
1 : input.dst.exreg.7.0.L0%2%spver : BV:1
=Loc 100055 in dst.
REGMEM
dst.exreg.8.0.L0%2%spver
1 : input.dst.exreg.8.0.L0%2%spver : BV:1
=Loc 100056 in dst.
REGMEM
dst.exreg.9.0.L0%2%spver
1 : input.dst.exreg.9.0.L0%2%spver : BV:1
=Loc 100057 in dst.
REGMEM
dst.exreg.0.4.L1%1%d
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=Loc 100058 in dst.
REGMEM
dst.exreg.0.4.L4%1%d
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=Loc 100059 in dst.
REGMEM
dst.exreg.0.4.E0%0%d
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=Loc 100060 in dst.
REGMEM
dst.exreg.0.3.L0%1%spver
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=Loc 100061 in dst.
REGMEM
dst.exreg.0.4.L0%1%spver
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=Loc 100062 in dst.
REGMEM
dst.exreg.0.5.L0%1%spver
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=Loc 100063 in dst.
REGMEM
dst.exreg.0.6.L0%1%spver
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=Loc 100064 in dst.
REGMEM
dst.exreg.0.7.L0%1%spver
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=Loc 100065 in dst.
REGMEM
dst.exreg.18.0.L0%1%spver
1 : input.dst.exreg.18.0.L0%1%spver : BV:2
=Loc 100066 in dst.
REGMEM
dst.exreg.24.0.L0%1%spver
1 : input.dst.exreg.24.0.L0%1%spver : BV:2
=Loc 100067 in dst.
REGMEM
dst.exreg.0.0.L3%1%spver
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=Loc 100068 in dst.
REGMEM
dst.exreg.0.4.L3%1%spver
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=Loc 100069 in dst.
REGMEM
dst.exreg.10.0.L3%1%spver
1 : input.dst.exreg.10.0.L3%1%spver : BV:1
=Loc 100070 in dst.
REGMEM
dst.exreg.11.0.L3%1%spver
1 : input.dst.exreg.11.0.L3%1%spver : BV:1
=Loc 100071 in dst.
REGMEM
dst.exreg.12.0.L3%1%spver
1 : input.dst.exreg.12.0.L3%1%spver : BV:1
=Loc 100072 in dst.
REGMEM
dst.exreg.13.0.L3%1%spver
1 : input.dst.exreg.13.0.L3%1%spver : BV:1
=Loc 100073 in dst.
REGMEM
dst.exreg.14.0.L3%1%spver
1 : input.dst.exreg.14.0.L3%1%spver : BV:1
=Loc 100074 in dst.
REGMEM
dst.exreg.15.0.L3%1%spver
1 : input.dst.exreg.15.0.L3%1%spver : BV:1
=Loc 100075 in dst.
REGMEM
dst.exreg.16.0.L3%1%spver
1 : input.dst.exreg.16.0.L3%1%spver : BV:1
=Loc 100076 in dst.
REGMEM
dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L3%1%spver : BV:32
=Loc 100077 in dst.
REGMEM
dst.exreg.7.0.L3%1%spver
1 : input.dst.exreg.7.0.L3%1%spver : BV:1
=Loc 100078 in dst.
REGMEM
dst.exreg.8.0.L3%1%spver
1 : input.dst.exreg.8.0.L3%1%spver : BV:1
=Loc 100079 in dst.
REGMEM
dst.exreg.9.0.L3%1%spver
1 : input.dst.exreg.9.0.L3%1%spver : BV:1
=Loc 100080 in dst.
REGMEM
dst.llvm-indir_tgt.E0%0%d
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=Loc 100081 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=Loc 100082 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=Loc 100083 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=Loc 100084 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=Loc 100085 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=Loc 100086 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=Loc 100087 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=Loc 100088 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=Loc 100089 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=Loc 100090 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=Loc 100091 in dst.
REGMEM
dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=Loc 100092 in dst.
REGMEM
dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=Loc 100093 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=Loc 100094 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=Loc 100095 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=Loc 100096 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=Loc 100097 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=Loc 100098 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=Loc 100099 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=Loc 100100 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=Loc 100101 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=Loc 100102 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=Loc 100103 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=Loc 100104 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=Loc 100105 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d : BOOL
=Loc 100106 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=Loc 100107 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=Loc 100108 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d : BOOL
=Loc 100109 in dst.
REGMEM
dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=Loc 100110 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100111 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100112 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100113 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100114 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100115 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100116 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100117 in dst.
MASKED
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100118 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100119 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100120 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100121 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100122 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100123 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100124 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100125 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100126 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100127 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100128 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100129 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100130 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100131 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100132 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100133 in dst.
MASKED
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100134 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100135 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100136 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100137 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100138 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100139 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100140 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100141 in dst.
MASKED
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100142 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100143 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100144 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100145 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100146 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100147 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100148 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100149 in dst.
MASKED
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100150 in dst.
SLOT
=mem
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.0
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100151 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.1
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100152 in dst.
SLOT
=mem
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.2
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100153 in dst.
SLOT
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.3
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 100154 in dst.
SLOT
=mem
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.4
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100155 in dst.
SLOT
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.5
=addr
1 : dst_symbol_addr.2 : BV:32
=nbytes
4
=bigendian
false
=Loc 100156 in dst.
SLOT
=mem
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.6
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100157 in dst.
REGMEM
dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=Loc 100158 in dst.
REGMEM
src.local_alloc_count.=L0%0%d=
1 : input.src.local_alloc_count.=L0%0%d= : COUNT
=Loc 100159 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=Loc 100160 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=Loc 100161 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=Loc 100162 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100163 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100164 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100165 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100166 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100167 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100168 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100169 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100170 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.7
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Loc 100171 in dst.
REGMEM
dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=Loc 100172 in dst.
REGMEM
dst.local./*___y___main__x__=Lentry%2%d=/
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=Loc 100173 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=Loc 100174 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=Loc 100175 in dst.
REGMEM
dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=Loc 100176 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--rodata
=Loc 100177 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.2.0
=Loc 100178 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=Loc 100179 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=Loc 100180 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.1.1
=Loc 100181 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--symbol.3.0
=Loc 100182 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 100183 in dst.
MASKED
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--esp
=Loc 100184 in dst.
SLOT
=mem
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=mlvar
mlloc.dst.8
=addr
1 : input.dst.sp=L0%0%d=sp : BV:32
=nbytes
4
=bigendian
false
=Locs end
=Liveness in dst
=live locs at L0%0%d
100024[f], 100034, 100035, 100036, 100037, 100038, 100039, 100040, 100041, 100158, 100172[f], 
=live locs at L0%1%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100091[f], 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100150, 100158, 100172[f], 
=live locs at L0%2%d
100024[f], 100044[f], 100060[f], 100062[f], 100063[f], 100064[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100158, 100172[f], 
=live locs at L0%2%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100158, 100172[f], 
=live locs at L0%2%allocaI1
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100158, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171[f], 100172[f], 
=live locs at L0%2%allocaI2
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184, 
=live locs at L0%2%allocaI3
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100151, 100157[f], 100158, 100172[f], 
=live locs at L0%2%allocaI4
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100092[f], 100158, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100172[f], 
=live locs at L1%1%d
100024[f], 100057[f], 100060[f], 100062[f], 100063[f], 100064[f], 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100152, 
=live locs at L3%1%spver
100024[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100109[f], 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100153, 100154, 
=live locs at L4%1%d
100058[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100155, 100156, 
=live locs at E0%0%d
100059[f], 100060[f], 100062[f], 100063[f], 100064[f], 100067[f], 100080[f], 100143, 100147, 100148, 100155, 

=Definedness in dst
=loc definedness at L0%0%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040
=loc definedness at L0%1%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100085, 100089, 100091, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100150
=loc definedness at L0%2%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151
=loc definedness at L0%2%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151
=loc definedness at L0%2%allocaI1
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171
=loc definedness at L0%2%allocaI2
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L0%2%allocaI3
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157
=loc definedness at L0%2%allocaI4
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100150, 100151, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170
=loc definedness at L1%1%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100150, 100151, 100152, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L3%1%spver
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100150, 100151, 100152, 100153, 100154, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at L4%1%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100058, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100101, 100102, 100103, 100104, 100105, 100106, 100107, 100108, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100150, 100151, 100152, 100153, 100154, 100155, 100156, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184
=loc definedness at E0%0%d
100004, 100017, 100024, 100026, 100027, 100028, 100029, 100030, 100031, 100034, 100035, 100038, 100039, 100040, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051, 100052, 100053, 100054, 100055, 100056, 100057, 100058, 100059, 100060, 100061, 100062, 100063, 100064, 100065, 100066, 100067, 100068, 100069, 100070, 100071, 100072, 100073, 100074, 100075, 100076, 100077, 100078, 100079, 100080, 100081, 100082, 100083, 100084, 100085, 100086, 100087, 100088, 100089, 100090, 100091, 100092, 100093, 100094, 100095, 100096, 100097, 100098, 100099, 100100, 100101, 100102, 100103, 100104, 100105, 100106, 100107, 100108, 100109, 100110, 100111, 100112, 100113, 100114, 100115, 100116, 100117, 100118, 100119, 100120, 100121, 100122, 100123, 100124, 100125, 100126, 100127, 100128, 100129, 100130, 100131, 100132, 100133, 100134, 100135, 100136, 100137, 100138, 100139, 100140, 100141, 100142, 100143, 100144, 100145, 100146, 100147, 100148, 100149, 100150, 100151, 100152, 100153, 100154, 100155, 100156, 100157, 100159, 100160, 100161, 100162, 100163, 100164, 100165, 100166, 100167, 100168, 100169, 100170, 100171, 100173, 100174, 100175, 100176, 100177, 100178, 100179, 100180, 100181, 100182, 100183, 100184

=Branch affecting variable locs in dst
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at L0%1%spver

=branch affecting variable locs at L0%2%d

=branch affecting variable locs at L0%2%spver

=branch affecting variable locs at L0%2%allocaI1

=branch affecting variable locs at L0%2%allocaI2

=branch affecting variable locs at L0%2%allocaI3

=branch affecting variable locs at L0%2%allocaI4

=branch affecting variable locs at L1%1%d

=branch affecting variable locs at L3%1%spver

=branch affecting variable locs at L4%1%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in dst
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100060 {input.dst.exreg.0.3.L0%1%spver }
1 : callee_save_const.2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100061 {input.dst.exreg.0.4.L0%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100062 {input.dst.exreg.0.5.L0%1%spver }
1 : callee_save_const.0 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100063 {input.dst.exreg.0.6.L0%1%spver }
1 : callee_save_const.1 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100064 {input.dst.exreg.0.7.L0%1%spver }
1 : callee_save_const.3 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100065 {input.dst.exreg.18.0.L0%1%spver }
1 : 0 { 0x0 } : BV:2
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100066 {input.dst.exreg.24.0.L0%1%spver }
1 : 0 { 0x0 } : BV:2
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100085 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100089 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100091 {input.dst.sp=L0%1%spver=sp.L0%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100110 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--rodata) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100111 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.2.0) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100112 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100113 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100114 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.1.1) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100115 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.3.0) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100116 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--heap) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100117 {memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp) }
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver for loc_id 100150 {select(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : retaddr_const : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L0%1%spver done
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100044 {input.dst.exreg.0.4.L0%2%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100081 {input.dst.local_size.=Lentry%1%d=.L0%2%d }
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100082 {input.dst.local_size.=Lentry%2%d=.L0%2%d }
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100083 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100084 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100086 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100087 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100088 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100090 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100118 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100119 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100120 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100121 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100122 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100123 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100124 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100125 {memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d for loc_id 100151 {select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%1%spver=>L0%2%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100045 {input.dst.exreg.0.4.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100046 {input.dst.exreg.10.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100047 {input.dst.exreg.11.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100048 {input.dst.exreg.12.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100049 {input.dst.exreg.13.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100050 {input.dst.exreg.14.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100051 {input.dst.exreg.15.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100052 {input.dst.exreg.16.0.L0%2%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100053 {input.dst.exreg.6.0.L0%2%spver }
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100054 {input.dst.exreg.7.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100055 {input.dst.exreg.8.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100056 {input.dst.exreg.9.0.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver for loc_id 100092 {input.dst.sp=L0%2%spver=sp.L0%2%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%d=>L0%2%spver done
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3 for loc_id 100157 {input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L0%2%allocaI3 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100057 {input.dst.exreg.0.4.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100093 {input.dst.local_size.=Lentry%1%d=.L1%1%d }
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100094 {input.dst.local_size.=Lentry%2%d=.L1%1%d }
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100095 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100096 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100097 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100098 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100099 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100100 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d }
1 : 1 { 0x1 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100126 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100127 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100128 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100129 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100130 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100131 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100132 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100133 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d for loc_id 100152 {select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%spver=>L1%1%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100173 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 }
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100174 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 }
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100175 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100176 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100177 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100178 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100179 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100180 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100181 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100182 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100183 {memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 for loc_id 100184 {select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
11 : input.dst.sp=L0%0%d=sp : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : select(9, 6, 10, 11, 12, 13) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI1=>L0%2%allocaI2 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100057 {input.dst.exreg.0.4.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100093 {input.dst.local_size.=Lentry%1%d=.L1%1%d }
1 : 16 { 0x10 +1.190e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100094 {input.dst.local_size.=Lentry%2%d=.L1%1%d }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100095 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100096 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100097 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100098 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100099 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100100 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100126 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100127 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100128 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100129 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100130 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100131 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100132 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100133 {memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d for loc_id 100152 {select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI2=>L1%1%d done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100159 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100160 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100161 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 }
1 : 0 { 0x0 } : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100162 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--rodata) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100163 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100164 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 8, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100165 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100166 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100167 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100168 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--heap) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100169 {memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 for loc_id 100170 {select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(1, 8, 9, 4, 10, 11) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI3=>L0%2%allocaI4 done
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1 for loc_id 100171 {input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 }
1 : 8 { 0x8 +1.95e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%2%allocaI4=>L0%2%allocaI1 done
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100067 {input.dst.exreg.0.0.L3%1%spver }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100068 {input.dst.exreg.0.4.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100069 {input.dst.exreg.10.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100070 {input.dst.exreg.11.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100071 {input.dst.exreg.12.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100072 {input.dst.exreg.13.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100073 {input.dst.exreg.14.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100074 {input.dst.exreg.15.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100075 {input.dst.exreg.16.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100076 {input.dst.exreg.6.0.L3%1%spver }
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100077 {input.dst.exreg.7.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100078 {input.dst.exreg.8.0.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100079 {input.dst.exreg.9.0.L3%1%spver }
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100109 {input.dst.sp=L3%1%spver=sp.L3%1%spver }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100134 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100135 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100136 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100137 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100138 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100139 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100140 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100141 {memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100153 {select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false) }
1 : 2 { 0x2 +1.23e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver for loc_id 100154 {select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%1%d=>L3%1%spver done
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100058 {input.dst.exreg.0.4.L4%1%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100101 {input.dst.local_size.=Lentry%1%d=.L4%1%d }
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100102 {input.dst.local_size.=Lentry%2%d=.L4%1%d }
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100103 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100104 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100105 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100106 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100107 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100108 {input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d }
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100142 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--rodata) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100143 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100144 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100145 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100146 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.1.1) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100147 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.3.0) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100148 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--heap) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100149 {memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--esp) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100155 {select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d for loc_id 100156 {select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false) }
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%1%spver=>L4%1%d done
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d for loc_id 100059 {input.dst.exreg.0.4.E0%0%d }
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d for loc_id 100080 {input.dst.llvm-indir_tgt.E0%0%d }
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L4%1%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
=graph_with_ml_contiguity_info non-vacuous mls
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in dst
=Alias analysis result in dst at call-context {*;main}
=Alias analysis result in dst at call-context {*;main} for loc 100004 (input.dst.exreg.0.4)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100017 (input.dst.exreg.6.0)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100024 (input.dst.sp=L0%0%d=sp)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100026 (input.dst.local_size.=Lentry%1%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100027 (input.dst.local_size.=Lentry%2%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100028 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100029 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100030 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100031 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100034 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100035 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100036 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100037 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100038 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100039 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100040 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100041 (memmask(input.dst.mem, input.dst.mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100044 (input.dst.exreg.0.4.L0%2%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100045 (input.dst.exreg.0.4.L0%2%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100046 (input.dst.exreg.10.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100047 (input.dst.exreg.11.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100048 (input.dst.exreg.12.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100049 (input.dst.exreg.13.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100050 (input.dst.exreg.14.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100051 (input.dst.exreg.15.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100052 (input.dst.exreg.16.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100053 (input.dst.exreg.6.0.L0%2%spver)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100054 (input.dst.exreg.7.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100055 (input.dst.exreg.8.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100056 (input.dst.exreg.9.0.L0%2%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100057 (input.dst.exreg.0.4.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100058 (input.dst.exreg.0.4.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100059 (input.dst.exreg.0.4.E0%0%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100060 (input.dst.exreg.0.3.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100061 (input.dst.exreg.0.4.L0%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100062 (input.dst.exreg.0.5.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100063 (input.dst.exreg.0.6.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100064 (input.dst.exreg.0.7.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100065 (input.dst.exreg.18.0.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100066 (input.dst.exreg.24.0.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100067 (input.dst.exreg.0.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100068 (input.dst.exreg.0.4.L3%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100069 (input.dst.exreg.10.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100070 (input.dst.exreg.11.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100071 (input.dst.exreg.12.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100072 (input.dst.exreg.13.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100073 (input.dst.exreg.14.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100074 (input.dst.exreg.15.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100075 (input.dst.exreg.16.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100076 (input.dst.exreg.6.0.L3%1%spver)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100077 (input.dst.exreg.7.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100078 (input.dst.exreg.8.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100079 (input.dst.exreg.9.0.L3%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100080 (input.dst.llvm-indir_tgt.E0%0%d)
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100081 (input.dst.local_size.=Lentry%1%d=.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100082 (input.dst.local_size.=Lentry%2%d=.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100083 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100084 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100085 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100086 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100087 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100088 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100089 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100090 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100091 (input.dst.sp=L0%1%spver=sp.L0%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100092 (input.dst.sp=L0%2%spver=sp.L0%2%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100093 (input.dst.local_size.=Lentry%1%d=.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100094 (input.dst.local_size.=Lentry%2%d=.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100095 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100096 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100097 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100098 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100099 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100100 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100101 (input.dst.local_size.=Lentry%1%d=.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100102 (input.dst.local_size.=Lentry%2%d=.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100103 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100104 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100105 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100106 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100107 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100108 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100109 (input.dst.sp=L3%1%spver=sp.L3%1%spver)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100110 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100111 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100112 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100113 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100114 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100115 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100116 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100117 (memmask(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100118 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100119 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100120 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100121 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100122 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100123 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100124 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100125 (memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100126 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100127 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100128 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100129 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100130 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100131 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100132 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100133 (memmask(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100134 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100135 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100136 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100137 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100138 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100139 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100140 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100141 (memmask(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100142 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100143 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100144 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100145 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100146 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100147 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100148 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100149 (memmask(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100150 (select(input.dst.mem.L0%1%spver, input.dst.mem.alloc, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100151 (select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100152 (select(input.dst.mem.L1%1%d, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100153 (select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100154 (select(input.dst.mem.L3%1%spver, input.dst.mem.alloc.L1%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100155 (select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem--symbol.2.0, dst_symbol_addr.2, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100156 (select(input.dst.mem.L4%1%d, input.dst.mem.alloc.L4%1%d, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100157 (input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100158 (input.src.local_alloc_count.=L0%0%d=)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100159 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100160 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4)
lr_status
lr_status_linearly_related(local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, esp, ; )
=Alias analysis result in dst at call-context {*;main} for loc 100161 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100162 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100163 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100164 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100165 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100166 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100167 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100168 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100169 (memmask(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100170 (select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, memlabel-mem--esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100171 (input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100172 (input.dst.local./*___y___main__x__=Lentry%2%d=/)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100173 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100174 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2)
lr_status
lr_status_top
=Alias analysis result in dst at call-context {*;main} for loc 100175 (input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2)
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100176 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--rodata))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100177 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.2.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100178 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100179 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis result in dst at call-context {*;main} for loc 100180 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.1.1))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100181 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--symbol.3.0))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100182 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--heap))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100183 (memmask(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem--esp))
lr_status
lr_status_linearly_related(; )
=Alias analysis result in dst at call-context {*;main} for loc 100184 (select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp, input.dst.sp=L0%0%d=sp, 4, false))
lr_status
lr_status_bottom(rodata, symbol.2.0, local./*___y___main__x__=Lentry%1%d=/, local./*___y___main__x__=Lentry%2%d=/, symbol.1.1, symbol.3.0, esp, ; memlabel-mem--heap, )
=Alias analysis results in dst done
=Available expressions in dst
=avail_exprs begin
=loc 100004
=loc_expr
142038 : input.dst.exreg.0.4 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100017
=loc_expr
142088 : input.dst.exreg.6.0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100024
=loc_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100026
=loc_expr
142120 : input.dst.local_size.=Lentry%1%d= : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100027
=loc_expr
142123 : input.dst.local_size.=Lentry%2%d= : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100028
=loc_expr
142122 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100029
=loc_expr
142121 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100030
=loc_expr
142126 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100031
=loc_expr
142125 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100044
=loc_expr
142827 : input.dst.exreg.0.4.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100045
=loc_expr
143031 : input.dst.exreg.0.4.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100046
=loc_expr
143042 : input.dst.exreg.10.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=avail_exprs_val.end
=loc 100047
=loc_expr
143043 : input.dst.exreg.11.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=avail_exprs_val.end
=loc 100048
=loc_expr
143044 : input.dst.exreg.12.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=avail_exprs_val.end
=loc 100049
=loc_expr
143045 : input.dst.exreg.13.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=avail_exprs_val.end
=loc 100050
=loc_expr
143046 : input.dst.exreg.14.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=avail_exprs_val.end
=loc 100051
=loc_expr
143047 : input.dst.exreg.15.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100052
=loc_expr
143048 : input.dst.exreg.16.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=avail_exprs_val.end
=loc 100053
=loc_expr
142972 : input.dst.exreg.6.0.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=avail_exprs_val.end
=loc 100054
=loc_expr
143049 : input.dst.exreg.7.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100055
=loc_expr
143050 : input.dst.exreg.8.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100056
=loc_expr
143051 : input.dst.exreg.9.0.L0%2%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100057
=loc_expr
142941 : input.dst.exreg.0.4.L1%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100058
=loc_expr
142934 : input.dst.exreg.0.4.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100059
=loc_expr
143041 : input.dst.exreg.0.4.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100060
=loc_expr
143026 : input.dst.exreg.0.3.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.2 : BV:32
=avail_exprs_val.end
=loc 100061
=loc_expr
143027 : input.dst.exreg.0.4.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100062
=loc_expr
143028 : input.dst.exreg.0.5.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.0 : BV:32
=avail_exprs_val.end
=loc 100063
=loc_expr
143029 : input.dst.exreg.0.6.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.1 : BV:32
=avail_exprs_val.end
=loc 100064
=loc_expr
143030 : input.dst.exreg.0.7.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : callee_save_const.3 : BV:32
=avail_exprs_val.end
=loc 100065
=loc_expr
143052 : input.dst.exreg.18.0.L0%1%spver : BV:2
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:2
=avail_exprs_val.end
=loc 100066
=loc_expr
143053 : input.dst.exreg.24.0.L0%1%spver : BV:2
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BV:2
=avail_exprs_val.end
=loc 100067
=loc_expr
143025 : input.dst.exreg.0.0.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100068
=loc_expr
143032 : input.dst.exreg.0.4.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100069
=loc_expr
143054 : input.dst.exreg.10.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100070
=loc_expr
143055 : input.dst.exreg.11.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=avail_exprs_val.end
=loc 100071
=loc_expr
143056 : input.dst.exreg.12.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100072
=loc_expr
143057 : input.dst.exreg.13.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100073
=loc_expr
143058 : input.dst.exreg.14.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100074
=loc_expr
143059 : input.dst.exreg.15.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100075
=loc_expr
143060 : input.dst.exreg.16.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=avail_exprs_val.end
=loc 100076
=loc_expr
143061 : input.dst.exreg.6.0.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=avail_exprs_val.end
=loc 100077
=loc_expr
143062 : input.dst.exreg.7.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=avail_exprs_val.end
=loc 100078
=loc_expr
143063 : input.dst.exreg.8.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=avail_exprs_val.end
=loc 100079
=loc_expr
143064 : input.dst.exreg.9.0.L3%1%spver : BV:1
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=avail_exprs_val.end
=loc 100081
=loc_expr
142914 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=avail_exprs_val.end
=loc 100082
=loc_expr
142915 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=avail_exprs_val.end
=loc 100083
=loc_expr
142917 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=avail_exprs_val.end
=loc 100084
=loc_expr
142918 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=avail_exprs_val.end
=loc 100085
=loc_expr
142825 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100086
=loc_expr
142919 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100087
=loc_expr
142920 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=avail_exprs_val.end
=loc 100088
=loc_expr
142921 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=avail_exprs_val.end
=loc 100089
=loc_expr
142826 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100090
=loc_expr
142922 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 } : BOOL
=avail_exprs_val.end
=loc 100091
=loc_expr
142823 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100092
=loc_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100101
=loc_expr
143033 : input.dst.local_size.=Lentry%1%d=.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100102
=loc_expr
143036 : input.dst.local_size.=Lentry%2%d=.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100103
=loc_expr
143035 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100104
=loc_expr
143034 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100106
=loc_expr
143039 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100107
=loc_expr
143038 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=avail_exprs_val.end
=loc 100109
=loc_expr
142923 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
=avail_exprs_val.end
=loc 100110
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143065 : memmask(142824, 142113, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100111
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143066 : memmask(142824, 142113, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100112
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
143067 : memmask(142824, 142113, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100113
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
143068 : memmask(142824, 142113, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100114
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143069 : memmask(142824, 142113, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100115
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143070 : memmask(142824, 142113, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100116
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143071 : memmask(142824, 142113, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100117
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
143072 : memmask(142824, 142113, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100118
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143073 : memmask(142916, 142906, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100119
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143074 : memmask(142916, 142906, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100120
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
143075 : memmask(142916, 142906, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100121
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
143076 : memmask(142916, 142906, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100122
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143077 : memmask(142916, 142906, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100123
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143078 : memmask(142916, 142906, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100124
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143079 : memmask(142916, 142906, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100125
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
143080 : memmask(142916, 142906, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100126
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143081 : memmask(143013, 142927, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100127
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143082 : memmask(143013, 142927, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100130
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143085 : memmask(143013, 142927, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100131
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143086 : memmask(143013, 142927, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100132
=loc_expr
143013 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143087 : memmask(143013, 142927, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100134
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143089 : memmask(142926, 142927, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100135
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143090 : memmask(142926, 142927, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100138
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143093 : memmask(142926, 142927, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100139
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143094 : memmask(142926, 142927, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100140
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143095 : memmask(142926, 142927, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100142
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
143097 : memmask(142938, 142939, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100143
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
143021 : memmask(142938, 142939, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : memmask(8, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100146
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
143100 : memmask(142938, 142939, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100147
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
143022 : memmask(142938, 142939, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100148
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
143023 : memmask(142938, 142939, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100150
=loc_expr
142824 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
140269 : input.dst.sp=L0%0%d=sp : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143140 : select(142824, 142113, 140656, 140269, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 100151
=loc_expr
142916 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
140269 : input.dst.sp=L0%0%d=sp : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143117 : select(142916, 142906, 140656, 140269, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 100153
=loc_expr
142926 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
142927 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
65795 : dst_symbol_addr.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143843 : select(142926, 142927, 140284, 65795, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 2 { 0x2 +1.23e129 } : BV:32
=avail_exprs_val.end
=loc 100155
=loc_expr
142938 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
142939 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
65795 : dst_symbol_addr.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
143867 : select(142938, 142939, 140284, 65795, 140450, 140295) : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 2 { 0x2 +1.23e129 } : BV:32
=avail_exprs_val.end
=loc 100157
=loc_expr
145241 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 16 { 0x10 +1.190e129 } : BV:32
=avail_exprs_val.end
=loc 100158
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100159
=loc_expr
145600 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100160
=loc_expr
145601 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100161
=loc_expr
145602 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 100162
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
145606 : memmask(145257, 145258, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100163
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
145607 : memmask(145257, 145258, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100164
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
145608 : memmask(145257, 145258, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
11 : memmask(10, 8, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100165
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
145609 : memmask(145257, 145258, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100166
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
145610 : memmask(145257, 145258, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100167
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
145611 : memmask(145257, 145258, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100168
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
145612 : memmask(145257, 145258, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100169
=loc_expr
145257 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
145613 : memmask(145257, 145258, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : memlabel-mem--esp : MEMLABEL
10 : memmask(1, 8, 9) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100171
=loc_expr
145259 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=avail_exprs_val.end
=loc 100172
=loc_expr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100173
=loc_expr
145603 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=avail_exprs_val.end
=loc 100174
=loc_expr
145604 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100175
=loc_expr
145605 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 } : BOOL
=avail_exprs_val.end
=loc 100176
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
145659 : memmask(145305, 145307, 140291) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100177
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
145660 : memmask(145305, 145307, 140284) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100178
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
145661 : memmask(145305, 145307, 140326) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100179
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
145662 : memmask(145305, 145307, 140335) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
10 : memmask(9, 6, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100180
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140653 : memlabel-mem--symbol.1.1 : MEMLABEL
145663 : memmask(145305, 145307, 140653) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.1.1 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100181
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
145664 : memmask(145305, 145307, 140286) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100182
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
145665 : memmask(145305, 145307, 140288) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100183
=loc_expr
145305 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
145307 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
140656 : memlabel-mem--esp : MEMLABEL
145666 : memmask(145305, 145307, 140656) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : memlabel-mem--esp : MEMLABEL
8 : memmask(1, 6, 7) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=avail_exprs end
=sprel_map in dst
=loc 100044 expr
1 : input.dst.exreg.0.4.L0%2%d : BV:32
=loc 100044 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100045 expr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=loc 100045 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100057 expr
1 : input.dst.exreg.0.4.L1%1%d : BV:32
=loc 100057 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100058 expr
1 : input.dst.exreg.0.4.L4%1%d : BV:32
=loc 100058 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100059 expr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
=loc 100059 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
140307 : 4 { 0x4 +1.47e129 } : BV:32
143891 : bvadd(140269, 140307) : BV:32
=loc 100060 expr
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=loc 100060 spreled-expr
140131 : callee_save_const.2 : BV:32
=loc 100061 expr
1 : input.dst.exreg.0.4.L0%1%spver : BV:32
=loc 100061 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100062 expr
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=loc 100062 spreled-expr
140129 : callee_save_const.0 : BV:32
=loc 100063 expr
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=loc 100063 spreled-expr
140130 : callee_save_const.1 : BV:32
=loc 100064 expr
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=loc 100064 spreled-expr
140132 : callee_save_const.3 : BV:32
=loc 100065 expr
1 : input.dst.exreg.18.0.L0%1%spver : BV:2
=loc 100065 spreled-expr
142131 : 0 { 0x0 } : BV:2
=loc 100066 expr
1 : input.dst.exreg.24.0.L0%1%spver : BV:2
=loc 100066 spreled-expr
142131 : 0 { 0x0 } : BV:2
=loc 100067 expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=loc 100067 spreled-expr
140292 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100068 expr
1 : input.dst.exreg.0.4.L3%1%spver : BV:32
=loc 100068 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100085 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver : BOOL
=loc 100085 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100086 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d : BOOL
=loc 100086 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100089 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver : BOOL
=loc 100089 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100090 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d : BOOL
=loc 100090 spreled-expr
140320 : 1 { 0x1 } : BOOL
=loc 100091 expr
1 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=loc 100091 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100092 expr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=loc 100092 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100109 expr
1 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=loc 100109 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=loc 100150 expr
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100150 spreled-expr
140267 : retaddr_const : BV:32
=loc 100151 expr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100151 spreled-expr
140267 : retaddr_const : BV:32
=loc 100153 expr
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100153 spreled-expr
140301 : 2 { 0x2 +1.23e129 } : BV:32
=loc 100155 expr
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=loc 100155 spreled-expr
140301 : 2 { 0x2 +1.23e129 } : BV:32
=loc 100157 expr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=loc 100157 spreled-expr
140323 : 16 { 0x10 +1.190e129 } : BV:32
=loc 100159 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=loc 100159 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
=loc 100160 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=loc 100160 spreled-expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
145630 : bvadd(140269, 140470) : BV:32
=loc 100161 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=loc 100161 spreled-expr
140295 : 0 { 0x0 } : BOOL
=loc 100171 expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=loc 100171 spreled-expr
140334 : 8 { 0x8 +1.95e129 } : BV:32
=loc 100175 expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=loc 100175 spreled-expr
140295 : 0 { 0x0 } : BOOL
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L0%1%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%1%spver=>L0%2%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%d=>L0%2%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%spver=>L0%2%allocaI3
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%spver=>L1%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI1=>L0%2%allocaI2
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI2=>L1%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI3=>L0%2%allocaI4
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L0%2%allocaI4=>L0%2%allocaI1
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%1%d=>L3%1%spver
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%1%spver=>L4%1%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L4%1%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L0%1%spver
=dst.exreg.0.3.L0%1%spver
1 : callee_save_const.2 : BV:32
=dst.exreg.0.4.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.0.5.L0%1%spver
1 : callee_save_const.0 : BV:32
=dst.exreg.0.6.L0%1%spver
1 : callee_save_const.1 : BV:32
=dst.exreg.0.7.L0%1%spver
1 : callee_save_const.3 : BV:32
=dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=dst.mem.L0%1%spver
1 : input.dst.mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : retaddr_const : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=dst.sp=L0%1%spver=sp.L0%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%1%spver=>L0%2%d
=dst.exreg.0.4.L0%2%d
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.local_size.=Lentry%1%d=.L0%2%d
1 : input.dst.local_size.=Lentry%1%d= : BV:32
=dst.local_size.=Lentry%2%d=.L0%2%d
1 : input.dst.local_size.=Lentry%2%d= : BV:32
=dst.mem.L0%2%d
1 : input.dst.mem.L0%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%d
1 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%d=>L0%2%spver
=dst.exreg.0.4.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 0 { 0x0 } : BV:1
15 : ite(13, 1, 14) : BV:1
=dst.exreg.11.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : eq(1, 2) : BOOL
5 : andnot2(3, 4) : BOOL
6 : 1 { 0x1 } : BV:1
7 : 0 { 0x0 } : BV:1
8 : ite(5, 6, 7) : BV:1
=dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 16 { 0x10 +1.190e129 } : BV:32
14 : eq(2, 13) : BOOL
15 : andnot2(12, 14) : BOOL
16 : 0 { 0x0 } : BV:1
17 : ite(15, 1, 16) : BV:1
=dst.exreg.13.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : bvuge(1, 2) : BOOL
5 : not(4) : BOOL
6 : or(3, 5) : BOOL
7 : 1 { 0x1 } : BV:1
8 : 0 { 0x0 } : BV:1
9 : ite(6, 7, 8) : BV:1
=dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : not(12) : BOOL
14 : 16 { 0x10 +1.190e129 } : BV:32
15 : eq(2, 14) : BOOL
16 : or(13, 15) : BOOL
17 : 0 { 0x0 } : BV:1
18 : ite(16, 1, 17) : BV:1
=dst.exreg.15.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 31 { 0x1f +1.0e1025 } : INT
6 : bvextract(4, 5, 5) : BV:1
7 : eq(1, 6) : BOOL
8 : bvextract(2, 5, 5) : BV:1
9 : eq(1, 8) : BOOL
10 : xor(9, 7) : BOOL
11 : and(9, 10) : BOOL
12 : iff(7, 11) : BOOL
13 : 0 { 0x0 } : BV:1
14 : ite(12, 1, 13) : BV:1
=dst.exreg.6.0.L0%2%spver
1 : input.dst.exreg.6.0 : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 1 { 0x1 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : bvextract(6, 2, 2) : BV:1
8 : eq(5, 7) : BOOL
9 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
10 : bvadd(6, 9) : BV:32
11 : bvextract(10, 2, 2) : BV:1
12 : eq(5, 11) : BOOL
13 : xor(8, 12) : BOOL
14 : and(8, 13) : BOOL
15 : 0 { 0x0 } : BV:1
16 : ite(14, 5, 15) : BV:1
17 : 10 { 0xa +1.0e1025 } : INT
18 : bvextract(1, 17, 17) : BV:1
19 : eq(5, 18) : BOOL
20 : ite(19, 5, 15) : BV:1
21 : 9 { 0x9 +1.0e1025 } : INT
22 : 8 { 0x8 +1.0e1025 } : INT
23 : bvextract(1, 21, 22) : BV:2
24 : ite(12, 5, 15) : BV:1
25 : 16 { 0x10 +1.190e129 } : BV:32
26 : eq(6, 25) : BOOL
27 : ite(26, 5, 15) : BV:1
28 : 5 { 0x5 +1.0e1025 } : INT
29 : bvextract(1, 28, 28) : BV:1
30 : 4 { 0x4 +1.0e1025 } : INT
31 : bvextract(10, 30, 30) : BV:1
32 : eq(5, 31) : BOOL
33 : bvextract(6, 30, 30) : BV:1
34 : eq(5, 33) : BOOL
35 : xor(32, 34) : BOOL
36 : ite(35, 5, 15) : BV:1
37 : 3 { 0x3 +1.0e1025 } : INT
38 : bvextract(1, 37, 37) : BV:1
39 : 1 { 0x1 +1.0e1025 } : INT
40 : bvextract(1, 39, 39) : BV:1
41 : bvuge(6, 25) : BOOL
42 : not(41) : BOOL
43 : ite(42, 5, 15) : BV:1
44 : bvconcat(4, 16, 20, 23, 24, 27, 29, 36, 38, 15, 40, 43) : BV:32
=dst.exreg.7.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 16 { 0x10 +1.190e129 } : BV:32
3 : bvuge(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.sp=L0%2%spver=sp.L0%2%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%spver=>L0%2%allocaI3
=dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%spver=>L1%1%d
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : input.dst.local_size.=Lentry%1%d=.L0%2%d : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI1=>L0%2%allocaI2
=dst.mem.L0%2%allocaI2
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
5 : 8 { 0x8 +1.95e129 } : BV:32
6 : alloca(2, 3, 4, 5) : ARRAY[BV:32 -> MEMLABEL]
7 : input.src.local_alloc_count.=L0%0%d= : COUNT
8 : increment_count(7) : COUNT
9 : store_uninit(1, 6, 3, 4, 5, 8) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI2
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI2=>L1%1%d
=dst.exreg.0.4.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.local_size.=Lentry%1%d=.L1%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=dst.local_size.=Lentry%2%d=.L1%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst.mem.L1%1%d
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L1%1%d
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI3=>L0%2%allocaI4
=dst.mem.L0%2%allocaI4
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 16 { 0x10 +1.190e129 } : BV:32
8 : alloca(2, 3, 6, 7) : ARRAY[BV:32 -> MEMLABEL]
9 : input.src.local_alloc_count.=L0%0%d= : COUNT
10 : store_uninit(1, 8, 3, 6, 7, 9) : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L0%2%allocaI4
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : input.dst.sp=L0%0%d=sp : BV:32
4 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
5 : bvadd(3, 4) : BV:32
6 : 16 { 0x10 +1.190e129 } : BV:32
7 : alloca(1, 2, 5, 6) : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L0%2%allocaI4=>L0%2%allocaI1
=dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%1%d=>L3%1%spver
=dst.exreg.0.0.L3%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.exreg.0.4.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.exreg.10.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : ite(15, 1, 6) : BV:1
=dst.exreg.11.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 16 { 0x10 } : BV:33
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(1, 7) : BV:32
9 : bvconcat(6, 8) : BV:33
10 : bvadd(5, 9) : BV:33
11 : 32 { 0x20 +1.0e1025 } : INT
12 : bvextract(10, 11, 11) : BV:1
13 : eq(4, 12) : BOOL
14 : not(13) : BOOL
15 : andnot1(3, 14) : BOOL
16 : ite(15, 4, 6) : BV:1
=dst.exreg.12.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : 0 { 0x0 +1.0e129 } : BV:32
16 : eq(2, 15) : BOOL
17 : andnot2(14, 16) : BOOL
18 : ite(17, 1, 6) : BV:1
=dst.exreg.13.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : 0 { 0x0 +1.0e129 } : BV:32
13 : eq(4, 12) : BOOL
14 : or(11, 13) : BOOL
15 : ite(14, 1, 3) : BV:1
=dst.exreg.14.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : not(14) : BOOL
16 : 0 { 0x0 +1.0e129 } : BV:32
17 : eq(2, 16) : BOOL
18 : or(15, 17) : BOOL
19 : ite(18, 1, 6) : BV:1
=dst.exreg.15.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : not(11) : BOOL
13 : ite(12, 1, 3) : BV:1
=dst.exreg.16.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 31 { 0x1f +1.0e1025 } : INT
4 : bvextract(2, 3, 3) : BV:1
5 : eq(1, 4) : BOOL
6 : 0 { 0x0 } : BV:1
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(2, 7) : BV:32
9 : bvextract(8, 3, 3) : BV:1
10 : eq(6, 9) : BOOL
11 : eq(1, 9) : BOOL
12 : xor(11, 5) : BOOL
13 : and(10, 12) : BOOL
14 : iff(5, 13) : BOOL
15 : ite(14, 1, 6) : BV:1
=dst.exreg.6.0.L3%1%spver
1 : input.dst.exreg.6.0.L0%2%spver : BV:32
2 : 31 { 0x1f +1.0e1025 } : INT
3 : 12 { 0xc +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:20
5 : 0 { 0x0 } : BV:1
6 : input.dst.sp=L0%0%d=sp : BV:32
7 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
8 : bvadd(6, 7) : BV:32
9 : bvextract(8, 2, 2) : BV:1
10 : eq(5, 9) : BOOL
11 : 1 { 0x1 } : BV:1
12 : eq(11, 9) : BOOL
13 : bvextract(6, 2, 2) : BV:1
14 : eq(11, 13) : BOOL
15 : xor(12, 14) : BOOL
16 : and(10, 15) : BOOL
17 : ite(16, 11, 5) : BV:1
18 : 10 { 0xa +1.0e1025 } : INT
19 : bvextract(1, 18, 18) : BV:1
20 : eq(11, 19) : BOOL
21 : ite(20, 11, 5) : BV:1
22 : 9 { 0x9 +1.0e1025 } : INT
23 : 8 { 0x8 +1.0e1025 } : INT
24 : bvextract(1, 22, 23) : BV:2
25 : ite(14, 11, 5) : BV:1
26 : 0 { 0x0 +1.0e129 } : BV:32
27 : eq(6, 26) : BOOL
28 : ite(27, 11, 5) : BV:1
29 : 5 { 0x5 +1.0e1025 } : INT
30 : bvextract(1, 29, 29) : BV:1
31 : 4 { 0x4 +1.0e1025 } : INT
32 : bvextract(6, 31, 31) : BV:1
33 : eq(11, 32) : BOOL
34 : bvextract(8, 31, 31) : BV:1
35 : eq(11, 34) : BOOL
36 : xor(33, 35) : BOOL
37 : ite(36, 11, 5) : BV:1
38 : 3 { 0x3 +1.0e1025 } : INT
39 : bvextract(1, 38, 38) : BV:1
40 : 1 { 0x1 +1.0e1025 } : INT
41 : bvextract(1, 40, 40) : BV:1
42 : 16 { 0x10 } : BV:33
43 : bvconcat(5, 8) : BV:33
44 : bvadd(42, 43) : BV:33
45 : 32 { 0x20 +1.0e1025 } : INT
46 : bvextract(44, 45, 45) : BV:1
47 : eq(11, 46) : BOOL
48 : ite(47, 11, 5) : BV:1
49 : bvconcat(4, 17, 21, 24, 25, 28, 30, 37, 39, 5, 41, 48) : BV:32
=dst.exreg.7.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : 1 { 0x1 } : BV:1
5 : 0 { 0x0 } : BV:1
6 : ite(3, 4, 5) : BV:1
=dst.exreg.8.0.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
5 : 1 { 0x1 } : BV:1
6 : 0 { 0x0 } : BV:1
7 : ite(4, 5, 6) : BV:1
=dst.exreg.9.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
2 : 16 { 0x10 } : BV:33
3 : 0 { 0x0 } : BV:1
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvconcat(3, 6) : BV:33
8 : bvadd(2, 7) : BV:33
9 : 32 { 0x20 +1.0e1025 } : INT
10 : bvextract(8, 9, 9) : BV:1
11 : eq(1, 10) : BOOL
12 : ite(11, 1, 3) : BV:1
=dst.mem.L3%1%spver
1 : input.dst.mem.L1%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : dst_symbol_addr.2 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=dst.sp=L3%1%spver=sp.L3%1%spver
1 : input.dst.sp=L0%0%d=sp : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%1%spver=>L4%1%d
=dst.exreg.0.4.L4%1%d
1 : input.dst.sp=L0%0%d=sp : BV:32
=dst.local_size.=Lentry%1%d=.L4%1%d
1 : input.dst.local_size.=Lentry%1%d=.L1%1%d : BV:32
=dst.local_size.=Lentry%2%d=.L4%1%d
1 : input.dst.local_size.=Lentry%2%d=.L1%1%d : BV:32
=dst.mem.L4%1%d
1 : input.dst.mem.L3%1%spver : ARRAY[BV:32 -> BV:8]
=dst.mem.alloc.L4%1%d
1 : input.dst.mem.alloc.L1%1%d : ARRAY[BV:32 -> MEMLABEL]
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d : BOOL
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d : BV:32
=dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L4%1%d=>E0%0%d
=dst.exreg.0.4.E0%0%d
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver assume# 0
1 : input.dst.exreg.0.4 : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
6 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
7 : bvule(5, 6) : BOOL
8 : bvule(2, 1) : BOOL
9 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
10 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
11 : region_agrees_with_memlabel(9, 2, 5, 10) : BOOL
12 : and(8, 11) : BOOL
13 : implies(7, 12) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L0%1%spver done
=graph_with_simplified_assets.simplified_assumes at L0%1%spver=>L0%2%d
=graph_with_simplified_assets.simplified_assumes at L0%1%spver=>L0%2%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver assume# 0
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
7 : region_agrees_with_memlabel(1, 4, 5, 6) : BOOL
8 : bvule(4, 2) : BOOL
9 : and(7, 8) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%2%d=>L0%2%spver done
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L0%2%allocaI3
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L0%2%allocaI3 done
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L1%1%d
=graph_with_simplified_assets.simplified_assumes at L0%2%spver=>L1%1%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI1=>L0%2%allocaI2
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI1=>L0%2%allocaI2 done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI2=>L1%1%d
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI2=>L1%1%d done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI3=>L0%2%allocaI4
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI3=>L0%2%allocaI4 done
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI4=>L0%2%allocaI1
=graph_with_simplified_assets.simplified_assumes at L0%2%allocaI4=>L0%2%allocaI1 done
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver assume# 0
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_assumes at L1%1%d=>L3%1%spver done
=graph_with_simplified_assets.simplified_assumes at L3%1%spver=>L4%1%d
=graph_with_simplified_assets.simplified_assumes at L3%1%spver=>L4%1%d done
=graph_with_simplified_assets.simplified_assumes at L4%1%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L4%1%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
3
=String-contents:
=Nextpc-map:
=Nextpc-map done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L0%1%spver
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.ec
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L0%0%d=>L0%1%spver assume #0.pred
=Comment
undef-behavioursome.edge.L0%0%d=>L0%1%spver
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L0%0%d=>L0%1%spver done
tfg.assumes_around_edge at L0%1%spver=>L0%2%d
tfg.assumes_around_edge at L0%1%spver=>L0%2%d done
tfg.assumes_around_edge at L0%2%d=>L0%2%spver
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.ec
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L0%2%d=>L0%2%spver assume #0.pred
=Comment
undef-behavioursome.edge.L0%2%d=>L0%2%spver
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L0%2%d=>L0%2%spver done
tfg.assumes_around_edge at L0%2%spver=>L0%2%allocaI3
tfg.assumes_around_edge at L0%2%spver=>L0%2%allocaI3 done
tfg.assumes_around_edge at L0%2%spver=>L1%1%d
tfg.assumes_around_edge at L0%2%spver=>L1%1%d done
tfg.assumes_around_edge at L0%2%allocaI1=>L0%2%allocaI2
tfg.assumes_around_edge at L0%2%allocaI1=>L0%2%allocaI2 done
tfg.assumes_around_edge at L0%2%allocaI2=>L1%1%d
tfg.assumes_around_edge at L0%2%allocaI2=>L1%1%d done
tfg.assumes_around_edge at L0%2%allocaI3=>L0%2%allocaI4
tfg.assumes_around_edge at L0%2%allocaI3=>L0%2%allocaI4 done
tfg.assumes_around_edge at L0%2%allocaI4=>L0%2%allocaI1
tfg.assumes_around_edge at L0%2%allocaI4=>L0%2%allocaI1 done
tfg.assumes_around_edge at L1%1%d=>L3%1%spver
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.ec
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L1%1%d=>L3%1%spver assume #0.pred
=Comment
undef-behavioursome.edge.L1%1%d=>L3%1%spver
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L1%1%d=>L3%1%spver done
tfg.assumes_around_edge at L3%1%spver=>L4%1%d
tfg.assumes_around_edge at L3%1%spver=>L4%1%d done
tfg.assumes_around_edge at L4%1%d=>E0%0%d
tfg.assumes_around_edge at L4%1%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=PCLocalSprelAssumptionsBegin:
=PC: L0%1%d
=local.=Lentry%1%d=
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=PCLocalSprelAssumptionsEnd
=sp_version_relations begin
=loc 100044
=loc_expr
142827 : input.dst.exreg.0.4.L0%2%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100045
=loc_expr
143031 : input.dst.exreg.0.4.L0%2%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100057
=loc_expr
142941 : input.dst.exreg.0.4.L1%1%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100058
=loc_expr
142934 : input.dst.exreg.0.4.L4%1%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100059
=loc_expr
143041 : input.dst.exreg.0.4.E0%0%d : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4
=sp_version_relations_val.end
=loc 100061
=loc_expr
143027 : input.dst.exreg.0.4.L0%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100068
=loc_expr
143032 : input.dst.exreg.0.4.L3%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100091
=loc_expr
142823 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100092
=loc_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=sp_version_relations_val.end
=loc 100109
=loc_expr
142923 : input.dst.sp=L3%1%spver=sp.L3%1%spver : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100158
=loc_expr
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
=sp_version_relations_val.m_is_top 1
=sp_version_relations_val.end
=loc 100159
=loc_expr
145600 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4 : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967280
=spv_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:0
=sp_version_relations_val.end
=loc 100160
=loc_expr
145601 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4 : BV:32
=sp_version_relations_val.m_is_top 0
=spv_expr
140269 : input.dst.sp=L0%0%d=sp : BV:32
=sp_relation
SP_RELATION_STATUS_AND_MASK_OFFSET : 0 : 32:4294967295
=spv_expr
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=sp_relation
SP_RELATION_STATUS_GT
=sp_version_relations_val.end
=loc 100172
=loc_expr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=sp_version_relations_val.m_is_top 1
=sp_version_relations_val.end
=sp_version_relations end
=AllocaSpvToMemlabel Begin:
=spv:
142913 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=AllocaSpvToMemlabel End
=TFG_SSA_done
=eqcheck_info
=eqcheck
=proof_filename eq.proof.ALL
=function_name main
=asm_filename emi9f.fixed.s
=fixed_reg_mappings begin
0 : 0 : 0
0 : 4 : 4
=fixed_reg_mappings end
=rodata_map begin
=rodata_map end
=dst_iseq
.i0: subl $0x10,%exvr0.4d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i1: movl $0x0,%exvr0.0d #
.i2: movl $0x2,%exvr5.3w:C_SYMBOL0 #
.i3: addl $0x10,%exvr0.4d #,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0,%exvr16.0
.i4: retl  #%exvr0.4d,%exvr5.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
=dst_iseq done
=dst_insn_pcs
0 : 0x0
1 : 0x3
2 : 0x8
3 : 0x12
4 : 0x15
=dst_insn_pcs done
=xml_output_format text-color
=use_only_relocatable_memlabels 0
=run_safety_check 1
=debug_header_pc_lsprels
=PC: L0%1%d
=local.=Lentry%1%d=
1 : input.dst.sp=L0%0%d=sp : BV:32
2 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=eqcheck done
=graph_with_guessing
=Nodes: L0%0%d_L0%0%d Lentry%1%allocaI3_L0%2%allocaI3 Lentry%1%allocaI4_L0%2%allocaI4 Lentry%2%allocaI3_L0%2%allocaI1 Lentry%2%allocaI4_L0%2%allocaI2 E0%0%d_E0%0%d
=Edges:
L0%0%d_L0%0%d => Lentry%1%allocaI3_L0%2%allocaI3
Lentry%1%allocaI3_L0%2%allocaI3 => Lentry%1%allocaI4_L0%2%allocaI4
Lentry%1%allocaI4_L0%2%allocaI4 => Lentry%2%allocaI3_L0%2%allocaI1
Lentry%2%allocaI3_L0%2%allocaI1 => Lentry%2%allocaI4_L0%2%allocaI2
Lentry%2%allocaI4_L0%2%allocaI2 => E0%0%d_E0%0%d
=graph done
=is_ssa_graph:
0
=StartState:
=state_end
=graph_with_var_versions done
=FunctionName: main
=Node outputs: E0%0%d_E0%0%d
=Node outputs done for E0%0%d_E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=Global assumes
=global assume pred 0
=Comment
symbol1.char0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 1
=Comment
symbol1.char1
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 2
=Comment
symbol1.char4
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 1 { 0x1 } : BV:8
=predicate done
=global assume pred 3
=Comment
symbol1.char2
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 2 { 0x2 +1.23e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 4
=Comment
symbol1.char5
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 5
=Comment
symbol1.char3
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 3 { 0x3 +1.35e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 6
=Comment
symbol1.char6
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 6 { 0x6 +1.71e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume pred 7
=Comment
symbol1.char7
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : symbol.1 : BV:32
5 : 7 { 0x7 +1.83e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : 1 { 0x1 +1.0e1025 } : INT
8 : 0 { 0x0 } : BOOL
9 : select(1, 2, 3, 6, 7, 8) : BV:8
=RhsExpr
1 : 0 { 0x0 } : BV:8
=predicate done
=global assume predicate_set done
=Edge: L0%0%d_L0%0%d => Lentry%1%allocaI3_L0%2%allocaI3
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from L0%0%d to Lentry%1%allocaI3 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(L0%0%d=>Lentry%1%allocaI3)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%0%d to L0%2%allocaI3 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L0%0%d=>L0%1%spver)*((L0%1%spver=>L0%2%d)*((L0%2%d=>L0%2%spver)*(L0%2%spver=>L0%2%allocaI3))))
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
7 : input.dst.sp=L0%0%d=sp : BV:32
8 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
9 : bvadd(7, 8) : BV:32
10 : eq(6, 9) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%1%allocaI3_L0%2%allocaI3 => Lentry%1%allocaI4_L0%2%allocaI4
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%1%allocaI3 to Lentry%1%allocaI4 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%1%allocaI3=>Lentry%1%allocaI4)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI3 to L0%2%allocaI4 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI3=>L0%2%allocaI4)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%1%allocaI4_L0%2%allocaI4 => Lentry%2%allocaI3_L0%2%allocaI1
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%1%allocaI4 to Lentry%2%allocaI3 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%1%allocaI4=>Lentry%2%allocaI3)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI4 to L0%2%allocaI1 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI4=>L0%2%allocaI1)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
8 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
9 : eq(7, 8) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%2%allocaI3_L0%2%allocaI1 => Lentry%2%allocaI4_L0%2%allocaI2
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%2%allocaI3 to Lentry%2%allocaI4 at unroll 1 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI1 to L0%2%allocaI2 at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumesAssume.0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=Edge.cg_edge_assumesAssume.1
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=Edge.cg_edge_assumesAssume.2
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Edge.cg_edge_assumesAssume.3
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : memlabel-mem--heap : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=Edge.cg_edge_assumes.Assumes.end

=Edge: Lentry%2%allocaI4_L0%2%allocaI2 => E0%0%d_E0%0%d
=Edge.src_tfg_full_pathset
=Edge.src_tfg_full_pathset.ec from Lentry%2%allocaI4 to E0%0%d at unroll 3 delta 1
=Edge.src_tfg_full_pathset.graph_edge_composition
((((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))*(Lfor.end%1%d=>E0%0%d))
=Edge.src_tfg_full_pathset done
=Edge.dst_tfg_full_pathset
=Edge.dst_tfg_full_pathset.ec from L0%2%allocaI2 to E0%0%d at unroll 1 delta 1
=Edge.dst_tfg_full_pathset.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*((L1%1%d=>L3%1%spver)*((L3%1%spver=>L4%1%d)*(L4%1%d=>E0%0%d))))
=Edge.dst_tfg_full_pathset done
=Edge.cg_edge_assumes.Assumes.begin:
=Edge.cg_edge_assumes.Assumes.end

=graph_with_predicates_done

=start_pc_preconditions
=start_pc_precondition.0
=Comment
precond-mem.alloc
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.1
=Comment
precond-mlasserts
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.2
=Comment
precond-memmask-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.3
=Comment
precond-memmask-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.4
=Comment
precond-memmask-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.5
=Comment
precond-memmask-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.6
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=start_pc_precondition.7
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : memlabel_is_absent(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=graph_with_precondition_done

=Locs in main.A7
=Locs end
=Liveness in main.A7
=live locs at L0%0%d_L0%0%d

=live locs at Lentry%1%allocaI3_L0%2%allocaI3

=live locs at Lentry%1%allocaI4_L0%2%allocaI4

=live locs at Lentry%2%allocaI3_L0%2%allocaI1

=live locs at Lentry%2%allocaI4_L0%2%allocaI2

=live locs at E0%0%d_E0%0%d


=Definedness in main.A7

=Branch affecting variable locs in main.A7

=Relevant Memlabels in main.A7
=relevant memlabels
memlabel-mem--rodata
memlabel-mem--symbol.2.0
memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
memlabel-mem--symbol.1.1
memlabel-mem--symbol.3.0
memlabel-mem--heap
memlabel-mem--esp
=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
=graph_with_ml_contiguity_info non-vacuous mls
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done

=Alias analysis results in main.A7
=Alias analysis results in main.A7 done
=Available expressions in main.A7
=avail_exprs begin
=avail_exprs end
=sprel_map in main.A7
=sprel_map done
=graph_with_aliasing_done
=Memlabel assertions
=Symbol-map:
C_SYMBOL1 : __const.main.d : 8 : 4 : 1
C_SYMBOL2 : b : 4 : 4 : 0
C_SYMBOL3 : main : 32 : 1 : 0
=Symbol-map done
=Locals-map:
C_LOCAL=Lentry%1%d= : src.llvm-%a : 16 : 4 : 0
C_LOCAL=Lentry%2%d= : src.llvm-%d : 8 : 4 : 0
=Locals-map done
=graph_arg_regs
=graph_arg_regs done
=rodata_map begin
=rodata_map end

=concrete_assertion_submap
=from
1 : symbol.1 : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : symbol.2 : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : symbol.3 : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : dst_symbol_addr.1 : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : dst_symbol_addr.2 : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : dst_symbol_addr.3 : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : input.memlabel-mem--rodata_begin : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : input.memlabel-mem--rodata_end : BV:32
=to
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=from
1 : rodata.size : BV:32
=to
1 : 8 { 0x8 +1.95e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.2.0_begin : BV:32
=to
1 : 0 { 0x0 +1.0e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.2.0_end : BV:32
=to
1 : 3 { 0x3 +1.35e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.1.1_begin : BV:32
=to
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.1.1_end : BV:32
=to
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.3.0_begin : BV:32
=to
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=from
1 : input.memlabel-mem--symbol.3.0_end : BV:32
=to
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=submap done

=use_concrete_assertion : 1
=Memlabel assertions done
=graph_with_proofs done
=global counterexamples for reason inductive-invariants
=global nodece 0
=global nodece 0 nodece z3.ce3.fuzzed.num_edges_traversed0
=global nodece 0 nodece_path
=global nodece 0 nodece_path.graph_edge_composition
(epsilon)
=global nodece 0 nodece_cached_counterexample
=counter_example_begin z3.ce3.fuzzed 651ce53213c4ee6b937d945b9704ea3
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4169682956 { 0xf888500c -125284340 -1.6494283e114 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 5640192; 4222930943 ] -> 0, { [ 0; 4055 ], [ 4064; 5640191 ], [ 4222930944; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 5640191 ] -> memlabel-mem--heap, [ 5640192; 4222930943 ] -> memlabel-mem--esp, [ 4222930944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 5640192; 4222930943 ] -> 0, { [ 0; 4055 ], [ 4064; 5640191 ], [ 4222930944; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 5640191 ] -> memlabel-mem--heap, [ 5640192; 4222930943 ] -> memlabel-mem--esp, [ 4222930944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4217290752 { 0xfb5ec000 -77676544 -1.74023437e119 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 5640192 { 0x561000 +1.67236328e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4222930943 { 0xfbb4cfff -72036353 -1.41259753e120 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 201 , m_adder -> 161), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
3323776219
=counter_example_end
=global nodece 0 num_edges_traversed 0
=global nodece 0 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 1
=global nodece 1 nodece z3v487.ce4.fuzzed.num_edges_traversed0
=global nodece 1 nodece_path
=global nodece 1 nodece_path.graph_edge_composition
(epsilon)
=global nodece 1 nodece_cached_counterexample
=counter_example_begin z3v487.ce4.fuzzed b4e8b134b3a3594a0d9fbc2a535aa99
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294959116 { 0xffffe00c -8180 -1.99902486e128 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 8192; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 8191 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 8192; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 8191 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4294959104 { 0xffffe000 -8192 -1.99902343e128 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 8192 { 0x2000 +1.97656e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 139 , m_adder -> 104), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2032656889
=counter_example_end
=global nodece 1 num_edges_traversed 0
=global nodece 1 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 2
=global nodece 2 nodece yices.ce5.fuzzed.num_edges_traversed0
=global nodece 2 nodece_path
=global nodece 2 nodece_path.graph_edge_composition
(epsilon)
=global nodece 2 nodece_cached_counterexample
=counter_example_begin yices.ce5.fuzzed 3ce0f5e2d6661048f1bce517b3e865f
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967292 { 0xfffffffc -4 -1.99999952e128 } : BV:32
=input.src.llvm-mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 2147483648; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 2147483647 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483647 ] -> memlabel-mem--heap, [ 2147483648; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem
1 : ([ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 2147483648; 4294967295 ] -> 0, { [ 0; 4055 ], [ 4064; 2147483647 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483647 ] -> memlabel-mem--heap, [ 2147483648; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--rodata
1 : ([ 4056; 4056 ] -> 0, [ 4057; 4057 ] -> 0, [ 4058; 4058 ] -> 0, [ 4059; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4061 ] -> 0, [ 4062; 4062 ] -> 0, [ 4063; 4063 ] -> 0, { [ 0; 4055 ], [ 4064; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--heap
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.3.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.mem.cluster.memlabel-mem--symbol.2.0
1 : ({ [ 0; 4294967295 ], } -> (RAC: m_multiplier -> 60 , m_adder -> 177), ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1929904615
=counter_example_end
=global nodece 2 num_edges_traversed 0
=global nodece 2 nodece_visted_pcs: 
L0%0%d_L0%0%d
=global nodece 3
=global nodece 3 nodece z3v487.ce7866.num_edges_traversed2
=global nodece 3 nodece_path
=global nodece 3 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 3 nodece_cached_counterexample
=counter_example_begin z3v487.ce7866 9aa1c82077fdf7b8d712d73a38261d2f
=input.dst.exreg.0.4
1 : 2166358016 { 0x81200000 -2128609280 -1.25000000e131 } : BV:32
=input.dst.exreg.6.0
1 : 437600010 { 0x1a153f0a +1.16598629e181 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1266262569 { 0x4b79a229 +1.95026123e23 } : BV:32
=callee_save_const.1
1 : 177928919 { 0xa9afad7 +1.21078002e150 } : BV:32
=callee_save_const.2
1 : 1189521921 { 0x46e6aa01 +1.80206310e14 } : BV:32
=callee_save_const.3
1 : 989245581 { 0x3af6b08d +1.92726290e246 } : BV:32
=retaddr_const
1 : 569322177 { 0x21ef2ac1 +1.86849224e196 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2248167158 { 0x86004ef6 -2046800138 -1.240969e141 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483643 ] -> 2, [ 2147483644; 2147483659 ] -> 0, [ 2147483660; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1189521921 { 0x46e6aa01 +1.80206310e14 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1266262569 { 0x4b79a229 +1.95026123e23 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 177928919 { 0xa9afad7 +1.21078002e150 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 989245581 { 0x3af6b08d +1.92726290e246 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 224427559 { 0xd607e27 +1.75384986e155 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 982700975 { 0x3a92d3af +1.14708507e246 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1744541775 { 0x67fb984f +1.96558558e80 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1399716225 { 0x536df981 +1.85917675e39 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1688865419 { 0x64aa0a8b +1.32844674e74 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1132143233 { 0x437b2281 +1.96199047e7 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 437600026 { 0x1a153f1a +1.16598820e181 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 224427559 { 0xd607e27 +1.75384986e155 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 982700975 { 0x3a92d3af +1.14708507e246 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1744541775 { 0x67fb984f +1.96558558e80 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1399716225 { 0x536df981 +1.85917675e39 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1688865419 { 0x64aa0a8b +1.32844674e74 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1132143233 { 0x437b2281 +1.96199047e7 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 201326592 { 0xc000000 +1.0e153 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1979748352 { 0x76009000 +1.439453e109 } : BV:32
=input.memlabel-mem--esp_end
1 : 2181074943 { 0x82008fff -2113892353 -1.439441e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483643 ] -> 2, [ 2147483644; 2147483659 ] -> 0, [ 2147483660; 2147483660 ] -> 193, [ 2147483661; 2147483661 ] -> 42, [ 2147483662; 2147483662 ] -> 239, [ 2147483663; 2147483663 ] -> 33, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3997834985
=counter_example_end
=global nodece 3 num_edges_traversed 2
=global nodece 3 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 4
=global nodece 4 nodece z3.ce7867.num_edges_traversed2
=global nodece 4 nodece_path
=global nodece 4 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 4 nodece_cached_counterexample
=counter_example_begin z3.ce7867 bdbf17469c7d34b4e525d63a3b3ba56
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 2081715793 { 0x7c147651 +1.15986073e121 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1234188767 { 0x499039df +1.12676608e20 } : BV:32
=callee_save_const.1
1 : 1079704204 { 0x405afa8c +1.71077108e1 } : BV:32
=callee_save_const.2
1 : 557775600 { 0x213efaf0 +1.49203300e195 } : BV:32
=callee_save_const.3
1 : 272015058 { 0x10369ed2 +1.42672181e161 } : BV:32
=retaddr_const
1 : 1902786080 { 0x716a3620 +1.82977676e99 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 557775600 { 0x213efaf0 +1.49203300e195 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1234188767 { 0x499039df +1.12676608e20 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1079704204 { 0x405afa8c +1.71077108e1 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 272015058 { 0x10369ed2 +1.42672181e161 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 226520413 { 0xd806d5d +1.333750e156 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 275925388 { 0x1072498c +1.89286947e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1140392243 { 0x43f90133 +1.94534909e8 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2021049466 { 0x7876c47a +1.92787098e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 2027330581 { 0x78d69c15 +1.67663824e114 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1258497762 { 0x4b0326e2 +1.2462410e23 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 2081715856 { 0x7c147690 +1.15986824e121 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 226520413 { 0xd806d5d +1.333750e156 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 275925388 { 0x1072498c +1.89286947e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1140392243 { 0x43f90133 +1.94534909e8 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2021049466 { 0x7876c47a +1.92787098e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2027330581 { 0x78d69c15 +1.67663824e114 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1258497762 { 0x4b0326e2 +1.2462410e23 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967276 ] -> 32, [ 4294967277; 4294967277 ] -> 54, [ 4294967278; 4294967278 ] -> 106, [ 4294967279; 4294967279 ] -> 113, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
4160058223
=counter_example_end
=global nodece 4 num_edges_traversed 2
=global nodece 4 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 5
=global nodece 5 nodece z3v487.ce8000.num_edges_traversed2
=global nodece 5 nodece_path
=global nodece 5 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 5 nodece_cached_counterexample
=counter_example_begin z3v487.ce8000 5b8a45825fc57f4e51ba8237a0786d2
=input.dst.exreg.0.4
1 : 1358987520 { 0x51008100 +1.393676e35 } : BV:32
=input.dst.exreg.6.0
1 : 1692562372 { 0x64e273c4 +1.76915788e74 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 809982933 { 0x30475bd5 +1.55748999e225 } : BV:32
=callee_save_const.1
1 : 1153250723 { 0x44bd35a3 +1.47819936e10 } : BV:32
=callee_save_const.2
1 : 182432956 { 0xadfb4bc +1.74770307e150 } : BV:32
=callee_save_const.3
1 : 1805428689 { 0x6b9ca7d1 +1.22387135e88 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1860796415 ] -> 4, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 26216415 { 0x19007df +1.12524020e132 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 856082 { 0xd1012 +1.10205292e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 1359218444, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 1359218443 ] -> memlabel-mem--esp, [ 1359218444; 1359218459 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1359218460; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218443 ] -> 4, [ 1359218444; 1359218459 ] -> 0, [ 1359218460; 1860796415 ] -> 4, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1359218459 { 0x5104071b +1.3146684e35 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 182432956 { 0xadfb4bc +1.74770307e150 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 809982933 { 0x30475bd5 +1.55748999e225 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1153250723 { 0x44bd35a3 +1.47819936e10 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1805428689 { 0x6b9ca7d1 +1.22387135e88 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218459 ] -> 2, [ 1359218460; 1359218460 ] -> 0, [ 1359218461; 1359218461 ] -> 0, [ 1359218462; 1359218462 ] -> 0, [ 1359218463; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1359218460 { 0x5104071c +1.3146696e35 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218459 ] -> 2, [ 1359218460; 1359218460 ] -> 0, [ 1359218461; 1359218461 ] -> 0, [ 1359218462; 1359218462 ] -> 0, [ 1359218463; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1493258484 { 0x590150f4 +1.1028299e51 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 840302637 { 0x3216002d +1.17188036e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 2028631949 { 0x78ea778d +1.83177340e114 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1158684986 { 0x4510213a +1.12601399e11 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 135140181 { 0x80e1355 +1.10996496e145 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 483107482 { 0x1ccba29a +1.59089970e186 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1692562192 { 0x64e27310 +1.76913642e74 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1493258484 { 0x590150f4 +1.1028299e51 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 840302637 { 0x3216002d +1.17188036e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 2028631949 { 0x78ea778d +1.83177340e114 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1158684986 { 0x4510213a +1.12601399e11 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 135140181 { 0x80e1355 +1.10996496e145 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 483107482 { 0x1ccba29a +1.59089970e186 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1860796416 { 0x6ee98000 +1.82421875e94 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 287313920 { 0x11201000 +1.25048828e163 } : BV:32
=input.memlabel-mem--esp_end
1 : 2148110335 { 0x80098fff -2146856961 -1.7470691e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2294303 ] -> 0, [ 2294304; 26216414 ] -> 32, [ 26216415; 287313920 ] -> 0, [ 287313921; 1359218443 ] -> 2, [ 1359218444; 1359218463 ] -> 0, [ 1359218464; 1860796415 ] -> 2, [ 1860796416; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 287313919 ] -> memlabel-mem--heap, [ 287313920; 1359218443 ] -> memlabel-mem--esp, [ 1359218444; 1359218459 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1359218460; 2148110335 ] -> memlabel-mem--esp, [ 2148110336; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 1359218459 { 0x5104071b +1.3146684e35 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 1359218444 { 0x5104070c +1.3146505e35 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
2370976543
=counter_example_end
=global nodece 5 num_edges_traversed 2
=global nodece 5 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 6
=global nodece 6 nodece z3.ce8001.num_edges_traversed2
=global nodece 6 nodece_path
=global nodece 6 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 6 nodece_cached_counterexample
=counter_example_begin z3.ce8001 fa79aa7f49c72d91dda22c84624a4eb
=input.dst.exreg.0.4
1 : 2290614277 { 0x88880005 -2004353019 -1.6250059e146 } : BV:32
=input.dst.exreg.6.0
1 : 1185554436 { 0x46aa2004 +1.32910203e14 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 732932422 { 0x2bafa946 +1.37235331e216 } : BV:32
=callee_save_const.1
1 : 14472596 { 0xdcd594 +1.72526788e130 } : BV:32
=callee_save_const.2
1 : 319873742 { 0x1310e2ce +1.13192152e167 } : BV:32
=callee_save_const.3
1 : 503222423 { 0x1dfe9097 +1.98878753e188 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 137, [ 4294963947; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4278187329 { 0xfefff541 -16779967 -1.99967205e126 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2147483650 { 0x80000002 -2147483646 -1.23e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967244, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967243 ] -> memlabel-mem--esp, [ 4294967244; 4294967259 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967260; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 137, [ 4294963947; 4294967243 ] -> 71, [ 4294967244; 4294967259 ] -> 0, [ 4294967260; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967259 { 0xffffffdb -37 -1.99999558e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 319873742 { 0x1310e2ce +1.13192152e167 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 732932422 { 0x2bafa946 +1.37235331e216 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 14472596 { 0xdcd594 +1.72526788e130 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 503222423 { 0x1dfe9097 +1.98878753e188 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967259 ] -> 71, [ 4294967260; 4294967260 ] -> 0, [ 4294967261; 4294967261 ] -> 0, [ 4294967262; 4294967262 ] -> 0, [ 4294967263; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967259 ] -> 71, [ 4294967260; 4294967260 ] -> 0, [ 4294967261; 4294967261 ] -> 0, [ 4294967262; 4294967262 ] -> 0, [ 4294967263; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1054415777 { 0x3ed91ba1 +1.69615566e254 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 498272761 { 0x1db309f9 +1.39874184e188 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1838728993 { 0x6d98c721 +1.19357693e92 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1084139995 { 0x409ea9db +1.23955857e2 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 439514091 { 0x1a3273eb +1.39416253e181 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1833664156 { 0x6d4b7e9c +1.58980131e91 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1185554576 { 0x46aa2090 +1.32911872e14 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1054415777 { 0x3ed91ba1 +1.69615566e254 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 498272761 { 0x1db309f9 +1.39874184e188 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1838728993 { 0x6d98c721 +1.19357693e92 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1084139995 { 0x409ea9db +1.23955857e2 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 439514091 { 0x1a3273eb +1.39416253e181 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1833664156 { 0x6d4b7e9c +1.58980131e91 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4055 ] -> 71, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 71, [ 4096; 4096 ] -> 0, [ 4097; 2147483649 ] -> 71, [ 2147483650; 2147483650 ] -> 0, [ 2147483651; 2676729263 ] -> 71, [ 2676729264; 2676729264 ] -> 144, [ 2676729265; 2902123221 ] -> 71, [ 2902123222; 2902123222 ] -> 64, [ 2902123223; 4278187328 ] -> 71, [ 4278187329; 4278187329 ] -> 0, [ 4278187330; 4294963945 ] -> 71, [ 4294963946; 4294963946 ] -> 18, [ 4294963947; 4294967243 ] -> 71, [ 4294967244; 4294967263 ] -> 0, [ 4294967264; 4294967295 ] -> 71, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967243 ] -> memlabel-mem--esp, [ 4294967244; 4294967259 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967260; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967259 { 0xffffffdb -37 -1.99999558e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967244 { 0xffffffcc -52 -1.99999380e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3258788417
=counter_example_end
=global nodece 6 num_edges_traversed 2
=global nodece 6 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 7
=global nodece 7 nodece z3v487.ce8134.num_edges_traversed2
=global nodece 7 nodece_path
=global nodece 7 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 7 nodece_cached_counterexample
=counter_example_begin z3v487.ce8134 5d503d60bb5519561a826b48a0c77d
=input.dst.exreg.0.4
1 : 2248146954 { 0x8600000a -2046820342 -1.119e141 } : BV:32
=input.dst.exreg.6.0
1 : 1080866545 { 0x406cb6f1 +1.84933292e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 1665805147 { 0x634a2b5b +1.57944810e71 } : BV:32
=callee_save_const.2
1 : 497648046 { 0x1da981ae +1.32427000e188 } : BV:32
=callee_save_const.3
1 : 1145416289 { 0x4445aa61 +1.54426205e9 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 19 { 0x13 +1.226e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 10 { 0xa +1.119e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4227858428, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 497648046 { 0x1da981ae +1.32427000e188 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1665805147 { 0x634a2b5b +1.57944810e71 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1145416289 { 0x4445aa61 +1.54426205e9 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1476094835 { 0x57fb6b73 +1.96421658e48 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1092355515 { 0x411c05bb +1.21892488e3 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 302329018 { 0x12052cba +1.4042744e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 2099539181 { 0x7d246ced +1.28457415e123 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 284231476 { 0x10f10734 +1.88303232e162 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1080866480 { 0x406cb6b0 +1.84932518e1 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1476094835 { 0x57fb6b73 +1.96421658e48 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1092355515 { 0x411c05bb +1.21892488e3 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 302329018 { 0x12052cba +1.4042744e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2099539181 { 0x7d246ced +1.28457415e123 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 284231476 { 0x10f10734 +1.88303232e162 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221225472 { 0xc0000000 -1073741824 -1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 267265513 { 0xfee25e9 +1.86053192e160 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1038670483
=counter_example_end
=global nodece 7 num_edges_traversed 2
=global nodece 7 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 8
=global nodece 8 nodece z3.ce8135.num_edges_traversed2
=global nodece 8 nodece_path
=global nodece 8 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 8 nodece_cached_counterexample
=counter_example_begin z3.ce8135 5e2bd8fd8cf02b8aab7bfe86d50f26
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 656588967 { 0x2722c0a7 +1.27150428e207 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 1703718086 { 0x658cacc6 +1.9902262e76 } : BV:32
=callee_save_const.2
1 : 1534446992 { 0x5b75cd90 +1.92033576e55 } : BV:32
=callee_save_const.3
1 : 46749147 { 0x2c955db +1.57293260e134 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1534446992 { 0x5b75cd90 +1.92033576e55 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1703718086 { 0x658cacc6 +1.9902262e76 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 46749147 { 0x2c955db +1.57293260e134 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 846426522 { 0x3273719a +1.90190434e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 2084712337 { 0x7c422f91 +1.51707661e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1150552826 { 0x44940afa +1.15658497e10 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1822267994 { 0x6c9d9a5a +1.23127293e90 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 2128570853 { 0x7edf69e5 +1.74541914e126 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 656588978 { 0x2722c0b2 +1.27150559e207 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 846426522 { 0x3273719a +1.90190434e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 2084712337 { 0x7c422f91 +1.51707661e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1150552826 { 0x44940afa +1.15658497e10 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1822267994 { 0x6c9d9a5a +1.23127293e90 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2128570853 { 0x7edf69e5 +1.74541914e126 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 267265513 { 0xfee25e9 +1.86053192e160 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1044116899
=counter_example_end
=global nodece 8 num_edges_traversed 2
=global nodece 8 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 9
=global nodece 9 nodece z3v487.ce8268.num_edges_traversed2
=global nodece 9 nodece_path
=global nodece 9 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 9 nodece_cached_counterexample
=counter_example_begin z3v487.ce8268 e3570dd64ffb0c4b1f7455a577133c
=input.dst.exreg.0.4
1 : 961333760 { 0x394cca00 +1.59991455e243 } : BV:32
=input.dst.exreg.6.0
1 : 1926189685 { 0x72cf5275 +1.61970388e102 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 855462221 { 0x32fd514d +1.97904360e230 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 4, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 32572406 { 0x1f103f6 +1.88293337e132 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 6422 { 0x1916 +1.76556e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 4, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 855462221 { 0x32fd514d +1.97904360e230 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 371228583 { 0x16207fa7 +1.25389564e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 251678240 { 0xf004e20 +1.238418e159 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 508425994 { 0x1e4df70a +1.60910153e189 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1893450474 { 0x70dbc2ea +1.71688580e98 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1848732155 { 0x6e3169fb +1.38604676e93 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1926191664 { 0x72cf5a30 +1.61993980e102 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 371228583 { 0x16207fa7 +1.25389564e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 251678240 { 0xf004e20 +1.238418e159 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 508425994 { 0x1e4df70a +1.60910153e189 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1893450474 { 0x70dbc2ea +1.71688580e98 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1848732155 { 0x6e3169fb +1.38604676e93 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2081447936 { 0x7c106000 +1.12792968e121 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 66072576 { 0x3f03000 +1.87646484e136 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147520511 { 0x80008fff -2147446785 -1.439441e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 3880244140 { 0xe747d3ac -414723156 -1.56114721e79 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 66072576 ] -> 0, [ 66072577; 2081447935 ] -> 2, [ 2081447936; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 66072575 ] -> memlabel-mem--heap, [ 66072576; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 2147520511 ] -> memlabel-mem--esp, [ 2147520512; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
1701144241
=counter_example_end
=global nodece 9 num_edges_traversed 2
=global nodece 9 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 10
=global nodece 10 nodece z3.ce8269.num_edges_traversed2
=global nodece 10 nodece_path
=global nodece 10 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 10 nodece_cached_counterexample
=counter_example_begin z3.ce8269 6221cd2d03d9d6aa029e0b85b11
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 1201087218 { 0x479722f2 +1.18075394e16 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 1706571492 { 0x65b836e4 +1.43917512e76 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 141, [ 4294963205; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 141, [ 4294963205; 4294967259 ] -> 9, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1706571492 { 0x65b836e4 +1.43917512e76 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967275 ] -> 9, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967275 ] -> 9, [ 4294967276; 4294967276 ] -> 0, [ 4294967277; 4294967277 ] -> 0, [ 4294967278; 4294967278 ] -> 0, [ 4294967279; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 824253994 { 0x31211e2a +1.25873303e227 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1208407610 { 0x4806d63a +1.5341267e17 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1118844893 { 0x42b037dd +1.37670481e6 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 448957498 { 0x1ac28c3a +1.51990437e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 486217371 { 0x1cfb169b +1.96162736e186 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1201087154 { 0x479722b2 +1.18074631e16 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 824253994 { 0x31211e2a +1.25873303e227 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1208407610 { 0x4806d63a +1.5341267e17 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1118844893 { 0x42b037dd +1.37670481e6 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 448957498 { 0x1ac28c3a +1.51990437e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 486217371 { 0x1cfb169b +1.96162736e186 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 3880244140 { 0xe747d3ac -414723156 -1.56114721e79 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 9, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 9, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 9, [ 4096; 4096 ] -> 0, [ 4097; 4294959118 ] -> 9, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294963203 ] -> 9, [ 4294963204; 4294963204 ] -> 18, [ 4294963205; 4294967259 ] -> 9, [ 4294967260; 4294967279 ] -> 0, [ 4294967280; 4294967295 ] -> 9, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
924262317
=counter_example_end
=global nodece 10 num_edges_traversed 2
=global nodece 10 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 11
=global nodece 11 nodece z3v487.ce8402.num_edges_traversed2
=global nodece 11 nodece_path
=global nodece 11 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 11 nodece_cached_counterexample
=counter_example_begin z3v487.ce8402 792ec5302810fe907a689f4e5f1e4e2
=input.dst.exreg.0.4
1 : 4146085888 { 0xf7204000 -148881408 -1.25195312e111 } : BV:32
=input.dst.exreg.6.0
1 : 981978828 { 0x3a87cecc +1.6099843e246 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 15794176 { 0xf10000 +1.88281250e130 } : BV:32
=callee_save_const.1
1 : 67108864 { 0x4000000 +1.0e137 } : BV:32
=callee_save_const.2
1 : 369475584 { 0x1605c000 +1.4492187e173 } : BV:32
=callee_save_const.3
1 : 85991434 { 0x520200a +1.25097775e139 } : BV:32
=retaddr_const
1 : 68419584 { 0x4140000 +1.15625000e137 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2961702939 { 0xb088001b -1333264357 -1.6250321e226 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3399745450 { 0xcaa3ffaa -895221846 -1.28123974e22 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 941622460, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 941622459 ] -> memlabel-mem--esp, [ 941622460; 941622475 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 941622476; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 941622475 { 0x382004cb +1.25014626e241 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 369475584 { 0x1605c000 +1.4492187e173 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 15794176 { 0xf10000 +1.88281250e130 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 67108864 { 0x4000000 +1.0e137 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 85991434 { 0x520200a +1.25097775e139 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 941622476 { 0x382004cc +1.25014638e241 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 1527914284 { 0x5b121f2c +1.14157629e55 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 2019873472 { 0x7864d2c0 +1.78768157e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1471798893 { 0x57b9de6d +1.45210039e48 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 3297779 { 0x3251f3 +1.39312589e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 814132694 { 0x3086add6 +1.5218005e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 844831307 { 0x325b1a4b +1.71173989e229 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 981976600 { 0x3a87c618 +1.6073284e246 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 1527914284 { 0x5b121f2c +1.14157629e55 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 2019873472 { 0x7864d2c0 +1.78768157e113 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1471798893 { 0x57b9de6d +1.45210039e48 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 3297779 { 0x3251f3 +1.39312589e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 814132694 { 0x3086add6 +1.5218005e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 844831307 { 0x325b1a4b +1.71173989e229 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2768699392 { 0xa5070000 -1526267904 -1.5468750e203 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 8388608 { 0x800000 +1.0e130 } : BV:32
=input.memlabel-mem--esp_end
1 : 2777087999 { 0xa586ffff -1517879297 -1.5468738e204 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 132160 { 0x20440 +1.1575469e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 8388608 ] -> 0, [ 8388609; 33554431 ] -> 2, [ 33554432; 941622477 ] -> 0, [ 941622478; 941622478 ] -> 20, [ 941622479; 941622479 ] -> 4, [ 941622480; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8388607 ] -> memlabel-mem--heap, [ 8388608; 941622459 ] -> memlabel-mem--esp, [ 941622460; 941622475 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 941622476; 2777087999 ] -> memlabel-mem--esp, [ 2777088000; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 941622475 { 0x382004cb +1.25014626e241 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 941622460 { 0x382004bc +1.25014448e241 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
4046332565
=counter_example_end
=global nodece 11 num_edges_traversed 2
=global nodece 11 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 12
=global nodece 12 nodece z3.ce8403.num_edges_traversed2
=global nodece 12 nodece_path
=global nodece 12 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 12 nodece_cached_counterexample
=counter_example_begin z3.ce8403 9f12d44dace7f159f41a8cdbdb2c16a
=input.dst.exreg.0.4
1 : 2147483649 { 0x80000001 -2147483647 -1.11e129 } : BV:32
=input.dst.exreg.6.0
1 : 2048811536 { 0x7a1e6210 +1.23736763e117 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 38068416 { 0x244e0c0 +1.53810882e133 } : BV:32
=callee_save_const.1
1 : 37957634 { 0x2433002 +1.52490258e133 } : BV:32
=callee_save_const.2
1 : 289692076 { 0x114459ac +1.53398656e163 } : BV:32
=callee_save_const.3
1 : 11542407 { 0xb01f87 +1.37596213e130 } : BV:32
=retaddr_const
1 : 51651586 { 0x3142402 +1.15734887e135 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 270663777 { 0x10220061 +1.26563656e161 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2189426684, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2189426683 ] -> memlabel-mem--esp, [ 2189426684; 2189426699 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2189426700; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 2189426683 ] -> 22, [ 2189426684; 2189426699 ] -> 0, [ 2189426700; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2189426699 { 0x8280000b -2105540597 -1.131e134 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 289692076 { 0x114459ac +1.53398656e163 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 38068416 { 0x244e0c0 +1.53810882e133 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 37957634 { 0x2433002 +1.52490258e133 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 11542407 { 0xb01f87 +1.37596213e130 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426699 ] -> 22, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2189426700 { 0x8280000c -2105540596 -1.143e134 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426699 ] -> 22, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 560858718 { 0x216e065e +1.85956931e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 513793365 { 0x1e9fdd55 +1.24894201e190 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 326422102 { 0x1374ce56 +1.91254687e167 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 30212680 { 0x1cd0248 +1.60163211e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 372023547 { 0x162ca0fb +1.34866273e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 786754767 { 0x2ee4eccf +1.78847682e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 2048811664 { 0x7a1e6290 +1.23738288e117 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 560858718 { 0x216e065e +1.85956931e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 513793365 { 0x1e9fdd55 +1.24894201e190 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 326422102 { 0x1374ce56 +1.91254687e167 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 30212680 { 0x1cd0248 +1.60163211e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 372023547 { 0x162ca0fb +1.34866273e173 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 786754767 { 0x2ee4eccf +1.78847682e222 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2224947200 { 0x849e0000 -2070020096 -1.23437500e138 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 346161152 { 0x14a20000 +1.26562500e170 } : BV:32
=input.memlabel-mem--esp_end
1 : 2571108351 { 0x993fffff -1723858945 -1.49999988e179 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 59508945 { 0x38c08d1 +1.9401905e136 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 15 ] -> 22, [ 16; 16 ] -> 0, [ 17; 4055 ] -> 22, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 270663776 ] -> 22, [ 270663777; 270663777 ] -> 0, [ 270663778; 849432779 ] -> 22, [ 849432780; 849432780 ] -> 112, [ 849432781; 1247879167 ] -> 22, [ 1247879168; 1247879168 ] -> 0, [ 1247879169; 2189426683 ] -> 22, [ 2189426684; 2189426699 ] -> 0, [ 2189426700; 2189426700 ] -> 2, [ 2189426701; 2189426701 ] -> 36, [ 2189426702; 2189426702 ] -> 20, [ 2189426703; 2189426703 ] -> 3, [ 2189426704; 2571108351 ] -> 22, [ 2571108352; 2571108352 ] -> 0, [ 2571108353; 2995403625 ] -> 22, [ 2995403626; 2995403626 ] -> 0, [ 2995403627; 4294967295 ] -> 22, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 346161151 ] -> memlabel-mem--heap, [ 346161152; 2189426683 ] -> memlabel-mem--esp, [ 2189426684; 2189426699 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2189426700; 2571108351 ] -> memlabel-mem--esp, [ 2571108352; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2189426699 { 0x8280000b -2105540597 -1.131e134 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2189426684 { 0x827ffffc -2105540612 -1.99999952e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
3340121225
=counter_example_end
=global nodece 12 num_edges_traversed 2
=global nodece 12 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 13
=global nodece 13 nodece z3v487.ce8536.num_edges_traversed2
=global nodece 13 nodece_path
=global nodece 13 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 13 nodece_cached_counterexample
=counter_example_begin z3v487.ce8536 3b9a11e6593637bbe215a7ccffa7f4e
=input.dst.exreg.0.4
1 : 2248146954 { 0x8600000a -2046820342 -1.119e141 } : BV:32
=input.dst.exreg.6.0
1 : 1070323266 { 0x3fcbd642 +1.59247612e0 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 1823976423 { 0x6cb7abe7 +1.43493354e90 } : BV:32
=callee_save_const.1
1 : 1958779156 { 0x74c09914 +1.50467157e106 } : BV:32
=callee_save_const.2
1 : 1365039214 { 0x515cd86e +1.72535490e35 } : BV:32
=callee_save_const.3
1 : 1131506071 { 0x43716997 +1.88603484e7 } : BV:32
=retaddr_const
1 : 1801759133 { 0x6b64a99d +1.78642618e87 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 19 { 0x13 +1.226e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 10 { 0xa +1.119e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4227858428, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1365039214 { 0x515cd86e +1.72535490e35 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 1823976423 { 0x6cb7abe7 +1.43493354e90 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1958779156 { 0x74c09914 +1.50467157e106 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1131506071 { 0x43716997 +1.88603484e7 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4227858444 { 0xfc00000c -67108852 -1.143e121 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 276616483 { 0x107cd523 +1.97525441e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1046144772 { 0x3e5ae704 +1.71017503e253 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 704154156 { 0x29f88a2c +1.94171667e212 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1437736206 { 0x55b21d0e +1.39151167e44 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 817432878 { 0x30b9092e +1.44559264e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 972308083 { 0x39f43e73 +1.90815579e244 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1070323346 { 0x3fcbd692 +1.59248566e0 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 276616483 { 0x107cd523 +1.97525441e161 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1046144772 { 0x3e5ae704 +1.71017503e253 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 704154156 { 0x29f88a2c +1.94171667e212 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1437736206 { 0x55b21d0e +1.39151167e44 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 817432878 { 0x30b9092e +1.44559264e226 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 972308083 { 0x39f43e73 +1.90815579e244 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221225472 { 0xc0000000 -1073741824 -1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 3221225472 ] -> 0, [ 3221225473; 3974374187 ] -> 2, [ 3974374188; 4227858443 ] -> 0, [ 4227858444; 4227858444 ] -> 157, [ 4227858445; 4227858445 ] -> 169, [ 4227858446; 4227858446 ] -> 100, [ 4227858447; 4227858447 ] -> 107, [ 4227858448; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221225471 ] -> memlabel-mem--heap, [ 3221225472; 4227858427 ] -> memlabel-mem--esp, [ 4227858428; 4227858443 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4227858444; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4227858443 { 0xfc00000b -67108853 -1.131e121 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4227858428 { 0xfbfffffc -67108868 -1.99999952e120 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=callee_save_const.2_0_0
1 : 0 { 0x0 } : BV:1
=retaddr_const_0_0
1 : 1 { 0x1 } : BV:1
=counter_example.random_seed
2112729204
=counter_example_end
=global nodece 13 num_edges_traversed 2
=global nodece 13 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 14
=global nodece 14 nodece z3.ce8537.num_edges_traversed2
=global nodece 14 nodece_path
=global nodece 14 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 14 nodece_cached_counterexample
=counter_example_begin z3.ce8537 f3e415c99c6cb86b4efc3c1290a1c9e8
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=input.dst.exreg.6.0
1 : 1164769268 { 0x456cf7f4 +1.85131692e11 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 733968883 { 0x2bbf79f3 +1.49590909e216 } : BV:32
=callee_save_const.1
1 : 726457716 { 0x2b4cdd74 +1.60050821e215 } : BV:32
=callee_save_const.2
1 : 128661410 { 0x7ab37a2 +1.33763527e144 } : BV:32
=callee_save_const.3
1 : 623585743 { 0x252b29cf +1.33721339e203 } : BV:32
=retaddr_const
1 : 555148651 { 0x2116e56b +1.17887628e195 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294959119 { 0xffffe00f -8177 -1.99902522e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 22 { 0x16 +1.262e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 4294967260, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967211 ] -> 66, [ 4294967212; 4294967212 ] -> 140, [ 4294967213; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 128661410 { 0x7ab37a2 +1.33763527e144 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 733968883 { 0x2bbf79f3 +1.49590909e216 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 726457716 { 0x2b4cdd74 +1.60050821e215 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 623585743 { 0x252b29cf +1.33721339e203 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967275 ] -> 66, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 710012367 { 0x2a51edcf +1.64006984e213 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1311408432 { 0x4e2a8130 +1.33206748e29 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1207258463 { 0x47f54d5f +1.91642367e16 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 31337214 { 0x1de2afe +1.73568701e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1386192941 { 0x529fa02d +1.24707567e38 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 605373322 { 0x2415438a +1.16612362e201 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1164769200 { 0x456cf7b0 +1.85130882e11 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 710012367 { 0x2a51edcf +1.64006984e213 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1311408432 { 0x4e2a8130 +1.33206748e29 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1207258463 { 0x47f54d5f +1.91642367e16 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 31337214 { 0x1de2afe +1.73568701e132 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1386192941 { 0x529fa02d +1.24707567e38 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 605373322 { 0x2415438a +1.16612362e201 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 21 ] -> 66, [ 22; 22 ] -> 0, [ 23; 4055 ] -> 66, [ 4056; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4063 ] -> 0, [ 4064; 4095 ] -> 66, [ 4096; 4096 ] -> 0, [ 4097; 777841925 ] -> 66, [ 777841926; 777841926 ] -> 128, [ 777841927; 1927258089 ] -> 66, [ 1927258090; 1927258090 ] -> 32, [ 1927258091; 4294959118 ] -> 66, [ 4294959119; 4294959119 ] -> 0, [ 4294959120; 4294967259 ] -> 66, [ 4294967260; 4294967275 ] -> 0, [ 4294967276; 4294967276 ] -> 107, [ 4294967277; 4294967277 ] -> 229, [ 4294967278; 4294967278 ] -> 22, [ 4294967279; 4294967279 ] -> 33, [ 4294967280; 4294967295 ] -> 66, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=callee_save_const.2_0_0
1 : 0 { 0x0 } : BV:1
=retaddr_const_0_0
1 : 1 { 0x1 } : BV:1
=counter_example.random_seed
1645585881
=counter_example_end
=global nodece 14 num_edges_traversed 2
=global nodece 14 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 15
=global nodece 15 nodece z3v487.ce8674.num_edges_traversed2
=global nodece 15 nodece_path
=global nodece 15 nodece_path.graph_edge_composition
((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)*(Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4))
=global nodece 15 nodece_cached_counterexample
=counter_example_begin z3v487.ce8674 658e7c9dd331f482f147956abc2532a
=input.dst.exreg.0.4
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.dst.exreg.6.0
1 : 455899565 { 0x1b2c79ad +1.34746325e183 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 855630500 { 0x32ffe2a4 +1.99910402e230 } : BV:32
=callee_save_const.1
1 : 909094570 { 0x362faeaa +1.37251782e237 } : BV:32
=callee_save_const.2
1 : 1248971970 { 0x4a71ccc2 +1.88906121e21 } : BV:32
=callee_save_const.3
1 : 1178031101 { 0x463753fd +1.43225061e13 } : BV:32
=retaddr_const
1 : 1234694266 { 0x4997f07a +1.18702626e20 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 1006632959 ] -> 5, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1392517120 { 0x53002000 +1.97656e39 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2669682687 { 0x9f201fff -1625284609 -1.25097644e191 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 402653180, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 402653179 ] -> memlabel-mem--esp, [ 402653180; 402653195 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 402653196; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653179 ] -> 5, [ 402653180; 402653195 ] -> 0, [ 402653196; 1006632959 ] -> 5, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 402653195 { 0x1800000b +1.131e177 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 1248971970 { 0x4a71ccc2 +1.88906121e21 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 855630500 { 0x32ffe2a4 +1.99910402e230 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 909094570 { 0x362faeaa +1.37251782e237 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1178031101 { 0x463753fd +1.43225061e13 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653195 ] -> 4, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 402653196 { 0x1800000c +1.143e177 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653195 ] -> 4, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 694298166 { 0x29622636 +1.76679110e211 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 190395838 { 0xb5935be +1.69695258e151 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 2018866464 { 0x78557520 +1.66763687e113 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 1277165568 { 0x4c200000 +1.25000000e25 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 780505005 { 0x2e858fad +1.4344713e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1605290620 { 0x5faeca7c +1.36555433e64 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 455897400 { 0x1b2c7138 +1.34720516e183 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 694298166 { 0x29622636 +1.76679110e211 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 190395838 { 0xb5935be +1.69695258e151 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 2018866464 { 0x78557520 +1.66763687e113 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 1277165568 { 0x4c200000 +1.25000000e25 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 780505005 { 0x2e858fad +1.4344713e222 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1605290620 { 0x5faeca7c +1.36555433e64 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1006632960 { 0x3c000000 +1.0e249 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 134217728 { 0x8000000 +1.0e145 } : BV:32
=input.memlabel-mem--esp_end
1 : 1140850687 { 0x43ffffff +1.99999988e8 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 134217728 ] -> 0, [ 134217729; 402653179 ] -> 4, [ 402653180; 402653195 ] -> 0, [ 402653196; 402653196 ] -> 122, [ 402653197; 402653197 ] -> 240, [ 402653198; 402653198 ] -> 151, [ 402653199; 402653199 ] -> 73, [ 402653200; 1006632959 ] -> 4, [ 1006632960; 1146094057 ] -> 0, [ 1146094058; 1277165567 ] -> 2, [ 1277165568; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 134217727 ] -> memlabel-mem--heap, [ 134217728; 402653179 ] -> memlabel-mem--esp, [ 402653180; 402653195 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 402653196; 1140850687 ] -> memlabel-mem--esp, [ 1140850688; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 402653195 { 0x1800000b +1.131e177 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 402653180 { 0x17fffffc +1.99999952e176 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4
1 : 0 { 0x0 } : BOOL
=counter_example.random_seed
2432481153
=counter_example_end
=global nodece 15 num_edges_traversed 2
=global nodece 15 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3 -> Lentry%1%allocaI4_L0%2%allocaI4
=global nodece 16
=global nodece 16 nodece z3v487.ce8767.num_edges_traversed1
=global nodece 16 nodece_path
=global nodece 16 nodece_path.graph_edge_composition
(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3)
=global nodece 16 nodece_cached_counterexample
=counter_example_begin z3v487.ce8767 e91da8151eb1e639c9bc405b13907b
=input.dst.exreg.0.4
1 : 2166358016 { 0x81200000 -2128609280 -1.25000000e131 } : BV:32
=input.dst.exreg.6.0
1 : 1284621553 { 0x4c91c4f1 +1.13882267e26 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 573640674 { 0x22310fe2 +1.38329720e197 } : BV:32
=callee_save_const.1
1 : 1415563455 { 0x545fc8bf +1.74831378e41 } : BV:32
=callee_save_const.2
1 : 554555587 { 0x210dd8c3 +1.10817754e195 } : BV:32
=callee_save_const.3
1 : 1616463068 { 0x605944dc +1.69741392e65 } : BV:32
=retaddr_const
1 : 381254654 { 0x16b97bfe +1.44909644e174 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.llvm-mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 15 { 0xf +1.178e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2248167158 { 0x86004ef6 -2046800138 -1.240969e141 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 2147483644, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local_alloc_count.=Lentry%1%d=.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%a.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 554555587 { 0x210dd8c3 +1.10817754e195 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 573640674 { 0x22310fe2 +1.38329720e197 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 1415563455 { 0x545fc8bf +1.74831378e41 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 1616463068 { 0x605944dc +1.69741392e65 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.mem.L0%1%spver
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 254, [ 2147483661; 2147483661 ] -> 123, [ 2147483662; 2147483662 ] -> 185, [ 2147483663; 2147483663 ] -> 22, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%spver
1 : 1 { 0x1 } : BOOL
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2147483659 ] -> 2, [ 2147483660; 2147483660 ] -> 254, [ 2147483661; 2147483661 ] -> 123, [ 2147483662; 2147483662 ] -> 185, [ 2147483663; 2147483663 ] -> 22, [ 2147483664; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 591244415 { 0x233dac7f +1.48182666e199 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1538528099 { 0x5bb41363 +1.40684163e56 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1802911788 { 0x6b76402c +1.92383337e87 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 447668333 { 0x1aaee06d +1.36622393e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1900686111 { 0x714a2b1f +1.57944095e99 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 1990292405 { 0x76a173b5 +1.26134359e110 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1284623408 { 0x4c91cc30 +1.13904380e26 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.18.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.exreg.24.0.L0%1%spver
1 : 0 { 0x0 } : BV:2
=input.dst.mem
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1979748352 ] -> 0, [ 1979748353; 2181074943 ] -> 2, [ 2181074944; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1979748351 ] -> memlabel-mem--heap, [ 1979748352; 2181074943 ] -> memlabel-mem--esp, [ 2181074944; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=
1 : 591244415 { 0x233dac7f +1.48182666e199 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end
1 : 1538528099 { 0x5bb41363 +1.40684163e56 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin
1 : 1802911788 { 0x6b76402c +1.92383337e87 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 447668333 { 0x1aaee06d +1.36622393e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1900686111 { 0x714a2b1f +1.57944095e99 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1990292405 { 0x76a173b5 +1.26134359e110 } : BV:32
=input.src.cur_rounding_mode.Lentry%1%allocaI3
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 201326592 { 0xc000000 +1.0e153 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1979748352 { 0x76009000 +1.439453e109 } : BV:32
=input.memlabel-mem--esp_end
1 : 2181074943 { 0x82008fff -2113892353 -1.439441e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=counter_example.random_seed
1644667384
=counter_example_end
=global nodece 16 num_edges_traversed 1
=global nodece 16 nodece_visted_pcs: 
Lentry%1%allocaI3_L0%2%allocaI3
=global nodece 17
=global nodece 17 nodece z3v487.ce8849.num_edges_traversed1
=global nodece 17 nodece_path
=global nodece 17 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 17 nodece_cached_counterexample
=counter_example_begin z3v487.ce8849 ede06863cd0801e9c39ee6fb9148b54
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
691531229
=counter_example_end
=global nodece 17 num_edges_traversed 1
=global nodece 17 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 18
=global nodece 18 nodece z3.ce8850.num_edges_traversed1
=global nodece 18 nodece_path
=global nodece 18 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 18 nodece_cached_counterexample
=counter_example_begin z3.ce8850 f036aae4faa4dfba46b731148b5bd27a
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4055 { 0xfd7 +1.48339e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
322959500
=counter_example_end
=global nodece 18 num_edges_traversed 1
=global nodece 18 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 19
=global nodece 19 nodece z3v487.ce8913.num_edges_traversed1
=global nodece 19 nodece_path
=global nodece 19 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 19 nodece_cached_counterexample
=counter_example_begin z3v487.ce8913 a2d6feb116428945dfe5e4d3f55dcb2d
=input.dst.exreg.0.4
1 : 3223068681 { 0xc01c2009 -1071898615 -1.21972763e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147538923 { 0x8000d7eb -2147428373 -1.658929e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4194 { 0x1062 +1.49996e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 53247 ] -> memlabel-mem--heap, [ 53248; 311819 ] -> memlabel-mem--esp, [ 311820; 311835 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 311836; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 311835 { 0x4c21b +1.3717362e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 311836 { 0x4c21c +1.3717374e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147434496 { 0x7fff4000 +1.99414062e128 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 53248 { 0xd000 +1.634765e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 53247 ] -> memlabel-mem--heap, [ 53248; 311819 ] -> memlabel-mem--esp, [ 311820; 311835 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 311836; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 311835 { 0x4c21b +1.3717362e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 311820 { 0x4c20c +1.3717184e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1344815548
=counter_example_end
=global nodece 19 num_edges_traversed 1
=global nodece 19 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 20
=global nodece 20 nodece z3v487.ce8971.num_edges_traversed1
=global nodece 20 nodece_path
=global nodece 20 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 20 nodece_cached_counterexample
=counter_example_begin z3v487.ce8971 675d45b644088f8333bcc90d4deba89
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 2155905152 { 0x80808080 -2139062144 -1.392150e130 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4294909950 { 0xffff1ffe -57346 -1.99316382e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1073682262 { 0x3fff1756 +1.99289965e0 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147422207 ] -> memlabel-mem--heap, [ 2147422208; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 3221164031 ] -> memlabel-mem--esp, [ 3221164032; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147422207 ] -> 0, [ 2147422208; 3221164031 ] -> 128, [ 3221164032; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147422208 { 0x7fff1000 +1.99267578e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 3221164031 { 0xbfff0fff -1073803265 -1.99267566e0 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147422207 ] -> 0, [ 2147422208; 3221164031 ] -> 128, [ 3221164032; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147422207 ] -> memlabel-mem--heap, [ 2147422208; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 3221164031 ] -> memlabel-mem--esp, [ 3221164032; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 2155905152 { 0x80808080 -2139062144 -1.392150e130 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 128, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
720528026
=counter_example_end
=global nodece 20 num_edges_traversed 1
=global nodece 20 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 21
=global nodece 21 nodece z3.ce8972.num_edges_traversed1
=global nodece 21 nodece_path
=global nodece 21 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 21 nodece_cached_counterexample
=counter_example_begin z3.ce8972 84eeda8a67c9613a5483921e48a3aa
=input.dst.exreg.0.4
1 : 4294967277 { 0xffffffed -19 -1.99999773e128 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 16843009 { 0x1010101 +1.784313e131 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4055 { 0xfd7 +1.48339e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294963199 ] -> 0, [ 4294963200; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967276 { 0xffffffec -20 -1.99999761e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294963199 ] -> 0, [ 4294963200; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967259 ] -> memlabel-mem--esp, [ 4294967260; 4294967275 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967276; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967275 { 0xffffffeb -21 -1.99999749e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967260 { 0xffffffdc -36 -1.99999570e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 16843009 { 0x1010101 +1.784313e131 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 1, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
198034307
=counter_example_end
=global nodece 21 num_edges_traversed 1
=global nodece 21 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 22
=global nodece 22 nodece z3v487.ce9035.num_edges_traversed2
=global nodece 22 nodece_path
=global nodece 22 nodece_path.graph_edge_composition
((Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)*(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2))
=global nodece 22 nodece_cached_counterexample
=counter_example_begin z3v487.ce9035 374db2e6f348cafda9649eca9103286
=input.dst.exreg.0.4
1 : 3222274057 { 0xc0100009 -1072693239 -1.12500107e1 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 4193251298 { 0xf9efefe2 -101715998 -1.87450814e116 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1409155080 { 0x53fe0008 +1.98437595e40 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 33554432, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 33554439 { 0x2000007 +1.83e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 33554431 ] -> memlabel-mem--heap, [ 33554432; 33554439 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 33554440; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147483660 { 0x8000000c -2147483636 -1.143e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2449473536 { 0x92000000 -1845493760 -1.0e165 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.memlabel-mem--esp_end
1 : 4060086271 { 0xf1ffffff -234881025 -1.99999988e100 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147483659 { 0x8000000b -2147483637 -1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 33554431 ] -> memlabel-mem--heap, [ 33554432; 33554439 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 33554440; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 2147483643 ] -> memlabel-mem--esp, [ 2147483644; 2147483659 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147483660; 4060086271 ] -> memlabel-mem--esp, [ 4060086272; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 33554439 { 0x2000007 +1.83e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 33554432 { 0x2000000 +1.0e133 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
512508528
=counter_example_end
=global nodece 22 num_edges_traversed 2
=global nodece 22 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1 -> Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 23
=global nodece 23 nodece z3.ce9036.num_edges_traversed1
=global nodece 23 nodece_path
=global nodece 23 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 23 nodece_cached_counterexample
=counter_example_begin z3.ce9036 ff226481d0ab98386d32c6ae52368919
=input.dst.exreg.0.4
1 : 2684374797 { 0xa0004f0d -1610592499 -1.241243e193 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 367 { 0x16f +1.4374e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 4054 { 0xfd6 +1.48327e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 1, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967035 ] -> memlabel-mem--esp, [ 4294967036; 4294967051 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967052; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 4294967051 { 0xffffff0b -245 -1.99997079e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 4294967052 { 0xffffff0c -244 -1.99997091e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 4294963199 ] -> memlabel-mem--heap, [ 4294963200; 4294967035 ] -> memlabel-mem--esp, [ 4294967036; 4294967051 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 4294967052; 4294967295 ] -> memlabel-mem--esp, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 4294967051 { 0xffffff0b -245 -1.99997079e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 4294967036 { 0xfffffefc -260 -1.99996900e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
693402750
=counter_example_end
=global nodece 23 num_edges_traversed 1
=global nodece 23 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 24
=global nodece 24 nodece z3v487.ce9158.num_edges_traversed1
=global nodece 24 nodece_path
=global nodece 24 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 24 nodece_cached_counterexample
=counter_example_begin z3v487.ce9158 e06f6ea2c140e9656222b19da68a6ddc
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1246940183
=counter_example_end
=global nodece 24 num_edges_traversed 1
=global nodece 24 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 25
=global nodece 25 nodece z3v487.ce9216.num_edges_traversed1
=global nodece 25 nodece_path
=global nodece 25 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 25 nodece_cached_counterexample
=counter_example_begin z3v487.ce9216 cb6a2cf45b0d213fc8ad16960e25983
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1362757102
=counter_example_end
=global nodece 25 num_edges_traversed 1
=global nodece 25 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 26
=global nodece 26 nodece z3v487.ce9274.num_edges_traversed1
=global nodece 26 nodece_path
=global nodece 26 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 26 nodece_cached_counterexample
=counter_example_begin z3v487.ce9274 7b35b9dfd6ce97fdb0764c5bae1939c4
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1050020550
=counter_example_end
=global nodece 26 num_edges_traversed 1
=global nodece 26 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 27
=global nodece 27 nodece z3v487.ce9332.num_edges_traversed1
=global nodece 27 nodece_path
=global nodece 27 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 27 nodece_cached_counterexample
=counter_example_begin z3v487.ce9332 5f3ec8e437e8f5d7decc38e45bd9659c
=input.dst.exreg.0.4
1 : 2147483657 { 0x80000009 -2147483639 -1.107e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2147616753 { 0x800207f1 -2147350543 -1.1586735e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 3572 { 0xdf4 +1.42581e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 8204 { 0x200c +1.97799e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 4096 { 0x1000 +1.48828e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8187 ] -> memlabel-mem--esp, [ 8188; 8203 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 8204; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 8203 { 0x200b +1.97787e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 8188 { 0x1ffc +1.97608e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1796375271
=counter_example_end
=global nodece 27 num_edges_traversed 1
=global nodece 27 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 28
=global nodece 28 nodece z3v487.ce9390.num_edges_traversed1
=global nodece 28 nodece_path
=global nodece 28 nodece_path.graph_edge_composition
(Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1)
=global nodece 28 nodece_cached_counterexample
=counter_example_begin z3v487.ce9390 9f6473b913eb5025f9dbb766dcc3c08e
=input.dst.exreg.0.4
1 : 2125594635 { 0x7eb2000b +1.39062631e126 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 536683056 { 0x1ffd2230 +1.97760581e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 536683063 { 0x1ffd2237 +1.97760665e192 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=alloca_ptr
1 : (() -> 0, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147287039 ] -> memlabel-mem--heap, [ 2147287040; 2147385339 ] -> memlabel-mem--esp, [ 2147385340; 2147385355 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147385356; 2684157951 ] -> memlabel-mem--esp, [ 2684157952; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2147385355 { 0x7ffe800b +1.98828256e128 } : BV:32
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2147385356 { 0x7ffe800c +1.98828268e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 536870912 { 0x20000000 +1.0e193 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 2147287040 { 0x7ffd0000 +1.97656250e128 } : BV:32
=input.memlabel-mem--esp_end
1 : 2684157951 { 0x9ffcffff -1610809345 -1.97656238e192 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147287039 ] -> memlabel-mem--heap, [ 2147287040; 2147385339 ] -> memlabel-mem--esp, [ 2147385340; 2147385355 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2147385356; 2684157951 ] -> memlabel-mem--esp, [ 2684157952; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2147385355 { 0x7ffe800b +1.98828256e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2147385340 { 0x7ffe7ffc +1.98828077e128 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1018157499
=counter_example_end
=global nodece 28 num_edges_traversed 1
=global nodece 28 nodece_visted_pcs: 
Lentry%2%allocaI3_L0%2%allocaI1
=global nodece 29
=global nodece 29 nodece z3v487.ce9448.num_edges_traversed1
=global nodece 29 nodece_path
=global nodece 29 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 29 nodece_cached_counterexample
=counter_example_begin z3v487.ce9448 dd5131c280b07ccb7cc2d584f1d98eaf
=input.dst.exreg.0.4
1 : 947650560 { 0x387c0000 +1.96875000e241 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 2155905024 { 0x80808000 -2139062272 -1.390625e130 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 5 { 0x5 +1.59e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 6 { 0x6 +1.71e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 63 { 0x3f +1.751e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 64 { 0x40 +1.762e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 11 { 0xb +1.131e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1073741824 ] -> 0, [ 1073741825; 1241513983 ] -> 2, [ 1241513984; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1910249627 { 0x71dc189b +1.71950089e100 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1073741824 ] -> 0, [ 1073741825; 1241513983 ] -> 2, [ 1241513984; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 11 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 12; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1910249628 { 0x71dc189c +1.71950101e100 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1241513984 { 0x4a000000 +1.0e21 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 2315255807 { 0x89ffffff -1979711489 -1.99999988e148 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 1910249627 { 0x71dc189b +1.71950089e100 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 1910249612 { 0x71dc188c +1.71949911e100 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 11 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 12; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 1073741823 ] -> memlabel-mem--heap, [ 1073741824; 1910249611 ] -> memlabel-mem--esp, [ 1910249612; 1910249627 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1910249628; 2315255807 ] -> memlabel-mem--esp, [ 2315255808; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 11 { 0xb +1.131e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=solver-mem_12
1 : ([ 0; 3 ] -> 0, [ 4; 11 ] -> 64, [ 12; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1910249628 ] -> 0, [ 1910249629; 2315255807 ] -> 128, [ 2315255808; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1640594339
=counter_example_end
=global nodece 29 num_edges_traversed 1
=global nodece 29 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 30
=global nodece 30 nodece z3.ce9449.num_edges_traversed1
=global nodece 30 nodece_path
=global nodece 30 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 30 nodece_cached_counterexample
=counter_example_begin z3.ce9449 ea26aeb1477b1881bd4f3f3a7ac4cb7f
=input.dst.exreg.0.4
1 : 2621440 { 0x280000 +1.31250000e129 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1073745906 { 0x40000ff2 +1.48661e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2148436292 { 0x800e8944 -2146531004 -1.11356401e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 255 { 0xff +1.3039e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 256 { 0x100 +1.3051e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2706575367 { 0xa1531007 -1588391929 -1.64892661e195 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 36843 ] -> 0, [ 36844; 36844 ] -> 64, [ 36845; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2719755 { 0x29800b +1.32422006e129 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 36843 ] -> 0, [ 36844; 36844 ] -> 64, [ 36845; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 2706575359 ] -> memlabel-mem--heap, [ 2706575360; 2706575367 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2706575368; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 2719756 { 0x29800c +1.32422018e129 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 537694208 { 0x200c9000 +1.9814453e193 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 32768 { 0x8000 +1.390625e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 537726975 { 0x200d0fff +1.10205066e193 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 2719755 { 0x29800b +1.32422006e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 2719740 { 0x297ffc +1.32421827e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 32767 ] -> memlabel-mem--heap, [ 32768; 2719739 ] -> memlabel-mem--esp, [ 2719740; 2719755 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2719756; 537726975 ] -> memlabel-mem--esp, [ 537726976; 2706575359 ] -> memlabel-mem--heap, [ 2706575360; 2706575367 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2706575368; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2706575367 { 0xa1531007 -1588391929 -1.64892661e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2706575360 { 0xa1531000 -1588391936 -1.64892578e195 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=solver-mem_12
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2719755 ] -> 0, [ 2719756; 2719756 ] -> 1, [ 2719757; 2148436291 ] -> 0, [ 2148436292; 2148436292 ] -> 1, [ 2148436293; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2010589799
=counter_example_end
=global nodece 30 num_edges_traversed 1
=global nodece 30 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 31
=global nodece 31 nodece z3v487.ce9590.num_edges_traversed1
=global nodece 31 nodece_path
=global nodece 31 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 31 nodece_cached_counterexample
=counter_example_begin z3v487.ce9590 cc1a7f7ca88e2186951fe77ec12958a
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1110525289
=counter_example_end
=global nodece 31 num_edges_traversed 1
=global nodece 31 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 32
=global nodece 32 nodece z3.ce9591.num_edges_traversed1
=global nodece 32 nodece_path
=global nodece 32 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 32 nodece_cached_counterexample
=counter_example_begin z3.ce9591 18cef567e89bcaaccec9f04ee88f4f
=input.dst.exreg.0.4
1 : 3272609793 { 0xc3101001 -1022357503 -1.12548840e7 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 1073758207 { 0x40003fff +1.195300e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 64 { 0x40 +1.762e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 1610612743 { 0x60000007 +1.83e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 306188811 { 0x1240120b +1.50055062e165 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1610612735 ] -> 0, [ 1610612736; 1610612743 ] -> 1, [ 1610612744; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 1610612743 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1610612744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 306188812 { 0x1240120c +1.50055074e165 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1073733632 { 0x3fffe000 +1.99902343e0 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 12288 { 0x3000 +1.146484e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 1073745919 { 0x40000fff +1.48816e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 306188811 { 0x1240120b +1.50055062e165 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 306188796 { 0x124011fc +1.50054883e165 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1610612735 ] -> 0, [ 1610612736; 1610612743 ] -> 1, [ 1610612744; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 12287 ] -> memlabel-mem--heap, [ 12288; 306188795 ] -> memlabel-mem--esp, [ 306188796; 306188811 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 306188812; 1073745919 ] -> memlabel-mem--esp, [ 1073745920; 1610612735 ] -> memlabel-mem--heap, [ 1610612736; 1610612743 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1610612744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 1610612743 { 0x60000007 +1.83e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 1610612736 { 0x60000000 +1.0e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1778288880
=counter_example_end
=global nodece 32 num_edges_traversed 1
=global nodece 32 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 33
=global nodece 33 nodece z3v487.ce9734.num_edges_traversed1
=global nodece 33 nodece_path
=global nodece 33 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 33 nodece_cached_counterexample
=counter_example_begin z3v487.ce9734 7e2871184ae4ce17e75dcaaf606cce7
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2038944465
=counter_example_end
=global nodece 33 num_edges_traversed 1
=global nodece 33 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 34
=global nodece 34 nodece z3v487.ce9845.num_edges_traversed1
=global nodece 34 nodece_path
=global nodece 34 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 34 nodece_cached_counterexample
=counter_example_begin z3v487.ce9845 1238ac7fa3664dd5ecea19c854a6744
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
220674984
=counter_example_end
=global nodece 34 num_edges_traversed 1
=global nodece 34 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=global nodece 35
=global nodece 35 nodece z3v487.ce9956.num_edges_traversed1
=global nodece 35 nodece_path
=global nodece 35 nodece_path.graph_edge_composition
(Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)
=global nodece 35 nodece_cached_counterexample
=counter_example_begin z3v487.ce9956 bf97b82d754687bb3a97fb7b595555
=input.dst.exreg.0.4
1 : 1828782082 { 0x6d010002 +1.781273e91 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 2953315309 { 0xb00803ed -1341651987 -1.6261980e225 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 2101234 { 0x200ff2 +1.25048661e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 3758686220 { 0xe009000c -536281076 -1.7031393e65 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 670826496 { 0x27fc0000 +1.96875000e208 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 3221917696 { 0xc00a9000 -1073049600 -1.8251953e1 } : BV:32
=input.memlabel-mem--esp_end
1 : 3892744191 { 0xe8068fff -402223105 -1.5126941e81 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%allocaI4
1 : 3758686219 { 0xe009000b -536281077 -1.7031381e65 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%allocaI4
1 : 3758686204 { 0xe008fffc -536281092 -1.7031202e65 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 3221917695 ] -> memlabel-mem--heap, [ 3221917696; 3758686203 ] -> memlabel-mem--esp, [ 3758686204; 3758686219 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 3758686220; 3892744191 ] -> memlabel-mem--esp, [ 3892744192; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%2%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1861226951
=counter_example_end
=global nodece 35 num_edges_traversed 1
=global nodece 35 nodece_visted_pcs: 
Lentry%2%allocaI4_L0%2%allocaI2
=graph_with_ce done
=point_set for reason inductive-invariants
=inductive-invariants point_set global exprs map
=inductive-invariants point_set point_expr 1
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 3
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 5
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 7
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 11
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=inductive-invariants point_set point_expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=inductive-invariants point_set point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=inductive-invariants point_set point_expr 17
1 : retaddr_const : BV:32
=inductive-invariants point_set point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=inductive-invariants point_set point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=inductive-invariants point_set point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=inductive-invariants point_set point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=inductive-invariants point_set point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=inductive-invariants point_set point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=inductive-invariants point_set point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=inductive-invariants point_set point_expr 28
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 29
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 30
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 31
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 32
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 34
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 35
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 36
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 37
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 38
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 39
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 42
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 44
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 46
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 48
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=inductive-invariants point_set point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=inductive-invariants point_set point_expr 81
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 82
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 83
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 84
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 85
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 86
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 87
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=inductive-invariants point_set point_expr 88
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 89
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 90
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 91
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 92
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 93
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 94
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 95
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 96
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 97
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=inductive-invariants point_set point_expr 98
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 99
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=inductive-invariants point_set point_expr 100
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=inductive-invariants point_set point_expr 101
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 102
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 103
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=inductive-invariants point_set point_expr 104
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 105
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 106
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=inductive-invariants point_set point_expr 107
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 108
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 109
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 110
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=inductive-invariants point_set point_expr 111
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=inductive-invariants point_set point_expr 112
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=inductive-invariants point_set point_expr 113
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 114
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set point_expr 115
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=inductive-invariants point_set global exprs map done
=inductive-invariants point_set points
=inductive-invariants point_set point z3v487.ce8134
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 18 for input.dst.sp=L0%0%d=sp
4227858444
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2147483648
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 21 for input.dst.exreg.0.3.L0%1%spver
497648046
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 23 for input.dst.exreg.0.6.L0%1%spver
1665805147
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 24 for input.dst.exreg.0.7.L0%1%spver
1145416289
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 25 for input.dst.exreg.0.4.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
267265513
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8134 expr point z3v487.ce8134 done
=inductive-invariants point_set point z3.ce8537
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 17 for retaddr_const
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
31337214
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 21 for input.dst.exreg.0.3.L0%1%spver
128661410
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 22 for input.dst.exreg.0.5.L0%1%spver
733968883
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 23 for input.dst.exreg.0.6.L0%1%spver
726457716
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 24 for input.dst.exreg.0.7.L0%1%spver
623585743
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
693587218
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
555148651
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8537 expr point z3.ce8537 done
=inductive-invariants point_set point z3v487.ce7866
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 17 for retaddr_const
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1399716225
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 21 for input.dst.exreg.0.3.L0%1%spver
1189521921
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 22 for input.dst.exreg.0.5.L0%1%spver
1266262569
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 23 for input.dst.exreg.0.6.L0%1%spver
177928919
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 24 for input.dst.exreg.0.7.L0%1%spver
989245581
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1124152292
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
569322177
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce7866 expr point z3v487.ce7866 done
=inductive-invariants point_set point z3v487.ce8674
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 17 for retaddr_const
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 18 for input.dst.sp=L0%0%d=sp
402653196
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1277165568
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 21 for input.dst.exreg.0.3.L0%1%spver
1248971970
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 22 for input.dst.exreg.0.5.L0%1%spver
855630500
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 23 for input.dst.exreg.0.6.L0%1%spver
909094570
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 24 for input.dst.exreg.0.7.L0%1%spver
1178031101
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 25 for input.dst.exreg.0.4.L0%2%spver
402653180
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
614343281
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1234694266
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8674 expr point z3v487.ce8674 done
=inductive-invariants point_set point z3.ce8135
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2147483648
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 21 for input.dst.exreg.0.3.L0%1%spver
1534446992
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 23 for input.dst.exreg.0.6.L0%1%spver
1703718086
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 24 for input.dst.exreg.0.7.L0%1%spver
46749147
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
267265513
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8135 expr point z3.ce8135 done
=inductive-invariants point_set point z3v487.ce8268
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 24 for input.dst.exreg.0.7.L0%1%spver
855462221
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
3880244140
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8268 expr point z3v487.ce8268 done
=inductive-invariants point_set point z3.ce7867
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 17 for retaddr_const
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
2021049466
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 21 for input.dst.exreg.0.3.L0%1%spver
557775600
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 22 for input.dst.exreg.0.5.L0%1%spver
1234188767
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 23 for input.dst.exreg.0.6.L0%1%spver
1079704204
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 24 for input.dst.exreg.0.7.L0%1%spver
272015058
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
948231559
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1902786080
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce7867 expr point z3.ce7867 done
=inductive-invariants point_set point z3.ce8269
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 24 for input.dst.exreg.0.7.L0%1%spver
1706571492
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
3880244140
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8269 expr point z3.ce8269 done
=inductive-invariants point_set point z3v487.ce8767
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 17 for retaddr_const
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
447668333
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 21 for input.dst.exreg.0.3.L0%1%spver
554555587
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 22 for input.dst.exreg.0.5.L0%1%spver
573640674
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 23 for input.dst.exreg.0.6.L0%1%spver
1415563455
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 24 for input.dst.exreg.0.7.L0%1%spver
1616463068
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1721594739
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
381254654
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8767 expr point z3v487.ce8767 done
=inductive-invariants point_set point z3v487.ce8402
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 17 for retaddr_const
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 18 for input.dst.sp=L0%0%d=sp
941622476
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
3297779
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 21 for input.dst.exreg.0.3.L0%1%spver
369475584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 22 for input.dst.exreg.0.5.L0%1%spver
15794176
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 23 for input.dst.exreg.0.6.L0%1%spver
67108864
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 24 for input.dst.exreg.0.7.L0%1%spver
85991434
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 25 for input.dst.exreg.0.4.L0%2%spver
941622460
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
132160
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
68419584
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8402 expr point z3v487.ce8402 done
=inductive-invariants point_set point z3v487.ce8849
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8849 expr point z3v487.ce8849 done
=inductive-invariants point_set point z3v487.ce9845
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9845 expr point z3v487.ce9845 done
=inductive-invariants point_set point z3v487.ce8000
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 18 for input.dst.sp=L0%0%d=sp
1359218460
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1158684986
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 21 for input.dst.exreg.0.3.L0%1%spver
182432956
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 22 for input.dst.exreg.0.5.L0%1%spver
809982933
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 23 for input.dst.exreg.0.6.L0%1%spver
1153250723
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 24 for input.dst.exreg.0.7.L0%1%spver
1805428689
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 25 for input.dst.exreg.0.4.L0%2%spver
1359218444
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
805770165
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8000 expr point z3v487.ce8000 done
=inductive-invariants point_set point z3.ce8001
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 18 for input.dst.sp=L0%0%d=sp
4294967260
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1084139995
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 21 for input.dst.exreg.0.3.L0%1%spver
319873742
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 22 for input.dst.exreg.0.5.L0%1%spver
732932422
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 23 for input.dst.exreg.0.6.L0%1%spver
14472596
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 24 for input.dst.exreg.0.7.L0%1%spver
503222423
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1661336839
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8001 expr point z3.ce8001 done
=inductive-invariants point_set point z3.ce8850
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8850 expr point z3.ce8850 done
=inductive-invariants point_set point z3.ce8403
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 17 for retaddr_const
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 18 for input.dst.sp=L0%0%d=sp
2189426700
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
30212680
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 21 for input.dst.exreg.0.3.L0%1%spver
289692076
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 22 for input.dst.exreg.0.5.L0%1%spver
38068416
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 23 for input.dst.exreg.0.6.L0%1%spver
37957634
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 24 for input.dst.exreg.0.7.L0%1%spver
11542407
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 25 for input.dst.exreg.0.4.L0%2%spver
2189426684
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
59508945
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
51651586
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8403 expr point z3.ce8403 done
=inductive-invariants point_set point z3v487.ce9158
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9158 expr point z3v487.ce9158 done
=inductive-invariants point_set point z3v487.ce8536
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 17 for retaddr_const
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 18 for input.dst.sp=L0%0%d=sp
4227858444
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
1437736206
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 21 for input.dst.exreg.0.3.L0%1%spver
1365039214
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 22 for input.dst.exreg.0.5.L0%1%spver
1823976423
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 23 for input.dst.exreg.0.6.L0%1%spver
1958779156
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 24 for input.dst.exreg.0.7.L0%1%spver
1131506071
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 25 for input.dst.exreg.0.4.L0%2%spver
4227858428
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2063572555
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 50 for eq(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.dst.mem.alloc.L0%2%allocaI4)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
1801759133
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8536 expr point z3v487.ce8536 done
=inductive-invariants point_set point z3.ce8675
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 17 for retaddr_const
1339265355
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 21 for input.dst.exreg.0.3.L0%1%spver
105213780
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 22 for input.dst.exreg.0.5.L0%1%spver
176716684
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 23 for input.dst.exreg.0.6.L0%1%spver
1843948724
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 24 for input.dst.exreg.0.7.L0%1%spver
1097739511
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
628778508
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
1339265355
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8675 expr point z3.ce8675 done
=inductive-invariants point_set point z3.ce8768
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 1 for eq(input.src.llvm-mem.alloc, input.dst.mem.alloc.L0%2%d)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 10 for memmask(input.src.llvm-mem, input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 11 for memmask(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/)
([ 0; 4294967295 ] -> 0, )
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 13 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 14 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 17 for retaddr_const
873668766
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 20 for input.dst.local_size.=Lentry%2%d=.L0%2%d
784334685
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 21 for input.dst.exreg.0.3.L0%1%spver
2138056357
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 22 for input.dst.exreg.0.5.L0%1%spver
1265814353
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 23 for input.dst.exreg.0.6.L0%1%spver
882532319
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 24 for input.dst.exreg.0.7.L0%1%spver
592956121
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1388380318
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 28 for select(input.dst.mem.L0%2%d, input.dst.mem.alloc.L0%2%d, mlvar.dst.2, input.dst.sp=L0%0%d=sp, 4, false)
873668766
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 29 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 30 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 31 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%d, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 32 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 33 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=, input.dst.local_size.=Lentry%2%d=.L0%2%d))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 34 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 35 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 36 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 37 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 38 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 39 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 41 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d)))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 42 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
0
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 43 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 44 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 45 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%d, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 46 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 47 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 48 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 val 49 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8768 expr point z3.ce8768 done
=inductive-invariants point_set point z3v487.ce8913
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 18 for input.dst.sp=L0%0%d=sp
311836
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 25 for input.dst.exreg.0.4.L0%2%spver
311820
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8913 expr point z3v487.ce8913 done
=inductive-invariants point_set point z3.ce8914
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 18 for input.dst.sp=L0%0%d=sp
4294967260
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967244
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8914 expr point z3.ce8914 done
=inductive-invariants point_set point z3v487.ce8971
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 17 for retaddr_const
2155905152
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
2155905152
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce8971 expr point z3v487.ce8971 done
=inductive-invariants point_set point z3.ce8972
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 17 for retaddr_const
16843009
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
16843009
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce8972 expr point z3.ce8972 done
=inductive-invariants point_set point z3v487.ce9035
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 18 for input.dst.sp=L0%0%d=sp
2147483660
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 25 for input.dst.exreg.0.4.L0%2%spver
2147483644
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
33554432
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
33554432
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9035 expr point z3v487.ce9035 done
=inductive-invariants point_set point z3.ce9036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 18 for input.dst.sp=L0%0%d=sp
4294967052
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967036
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9036 expr point z3.ce9036 done
=inductive-invariants point_set point z3.ce9159
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9159 expr point z3.ce9159 done
=inductive-invariants point_set point z3v487.ce9216
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9216 expr point z3v487.ce9216 done
=inductive-invariants point_set point z3.ce9217
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9217 expr point z3.ce9217 done
=inductive-invariants point_set point z3v487.ce9274
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9274 expr point z3v487.ce9274 done
=inductive-invariants point_set point z3.ce9275
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9275 expr point z3.ce9275 done
=inductive-invariants point_set point z3v487.ce9332
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 18 for input.dst.sp=L0%0%d=sp
8204
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 25 for input.dst.exreg.0.4.L0%2%spver
8188
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9332 expr point z3v487.ce9332 done
=inductive-invariants point_set point z3.ce9333
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9333 expr point z3.ce9333 done
=inductive-invariants point_set point z3v487.ce9390
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 18 for input.dst.sp=L0%0%d=sp
2147385356
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 25 for input.dst.exreg.0.4.L0%2%spver
2147385340
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9390 expr point z3v487.ce9390 done
=inductive-invariants point_set point z3.ce9391
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 18 for input.dst.sp=L0%0%d=sp
4294967276
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 25 for input.dst.exreg.0.4.L0%2%spver
4294967260
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 40 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 61 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 62 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 63 for select(input.dst.mem.L0%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI4, mlloc.dst.7, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 64 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 4, memlabel-mem--esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 65 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 66 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI4, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 68 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 69 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 70 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 71 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 81 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 82 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 83 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
0
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 84 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 85 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 val 86 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9391 expr point z3.ce9391 done
=inductive-invariants point_set point z3.ce9449
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 17 for retaddr_const
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 18 for input.dst.sp=L0%0%d=sp
2719756
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 25 for input.dst.exreg.0.4.L0%2%spver
2719740
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2706575360
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2706575360
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9449 expr point z3.ce9449 done
=inductive-invariants point_set point z3v487.ce9448
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 17 for retaddr_const
2155905024
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 18 for input.dst.sp=L0%0%d=sp
1910249628
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 25 for input.dst.exreg.0.4.L0%2%spver
1910249612
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
4
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
4
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
2155905024
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9448 expr point z3v487.ce9448 done
=inductive-invariants point_set point z3v487.ce9590
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9590 expr point z3v487.ce9590 done
=inductive-invariants point_set point z3.ce9591
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 22 for input.dst.exreg.0.5.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9591 expr point z3.ce9591 done
=inductive-invariants point_set point z3.ce9735
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9735 expr point z3.ce9735 done
=inductive-invariants point_set point z3.ce9846
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 23 for input.dst.exreg.0.6.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9846 expr point z3.ce9846 done
=inductive-invariants point_set point z3v487.ce9956
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9956 expr point z3v487.ce9956 done
=inductive-invariants point_set point z3v487.ce9734
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 17 for retaddr_const
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 18 for input.dst.sp=L0%0%d=sp
3758686220
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 21 for input.dst.exreg.0.3.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 24 for input.dst.exreg.0.7.L0%1%spver
4294967295
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 25 for input.dst.exreg.0.4.L0%2%spver
3758686204
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
2147483644
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
2147483644
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
0
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3v487.ce9734 expr point z3v487.ce9734 done
=inductive-invariants point_set point z3.ce9957
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 15 for bvule(input.dst.exreg.0.4.L0%2%spver, input.dst.sp=L0%0%d=sp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 16 for input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 17 for retaddr_const
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 18 for input.dst.sp=L0%0%d=sp
306188812
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 19 for input.dst.sp=L0%2%spver=sp.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 21 for input.dst.exreg.0.3.L0%1%spver
4294967295
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 22 for input.dst.exreg.0.5.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 23 for input.dst.exreg.0.6.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 24 for input.dst.exreg.0.7.L0%1%spver
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 25 for input.dst.exreg.0.4.L0%2%spver
306188796
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 26 for input.dst.local./*___y___main__x__=Lentry%2%d=/
1610612736
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 27 for input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3
16
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 67 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 72 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 73 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3)))
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 74 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 75 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 76 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 77 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 78 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3, input.dst.sp=L0%2%spver=sp.L0%2%spver))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 79 for input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1610612736
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 80 for input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
8
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 87 for eq(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.dst.mem.alloc.L0%2%allocaI2)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 98 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 99 for eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, memlabel_is_absent(input.src.llvm-mem.alloc.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 100 for select(input.dst.mem.L0%2%allocaI2, input.dst.mem.alloc.L0%2%allocaI2, mlloc.dst.8, input.dst.sp=L0%0%d=sp, 4, false)
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 101 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 4, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 102 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%0%d=sp, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 103 for region_agrees_with_memlabel(input.dst.mem.alloc.L0%2%allocaI2, input.dst.sp=L0%2%spver=sp.L0%2%spver, 1, memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp)
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 104 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 105 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 106 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, iscontiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 107 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%1%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 108 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, isprobably_contiguous_memlabel(input.src.llvm-mem.alloc.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, memlabel-mem--local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 109 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 110 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(input.dst.exreg.0.4.L0%2%spver, bvsub(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1)))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 111 for xor(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 112 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvule(bvadd(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1, 4294967295), input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 113 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4, input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 114 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, bvult(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4, input.dst.sp=L0%1%spver=sp.L0%1%spver))
0
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 val 115 for or(input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4, eq(input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3, input.dst.local./*___y___main__x__=Lentry%2%d=/))
1
=inductive-invariants point_set point z3.ce9957 expr point z3.ce9957 done
=inductive-invariants point_set points done
=out-of-bound-exprs for reason inductive-invariants
=out-of-bound-exprs for reason inductive-invariants at L0%0%d_L0%0%d

=out-of-bound-exprs for reason inductive-invariants at Lentry%1%allocaI3_L0%2%allocaI3

=out-of-bound-exprs for reason inductive-invariants at Lentry%1%allocaI4_L0%2%allocaI4

=out-of-bound-exprs for reason inductive-invariants at Lentry%2%allocaI3_L0%2%allocaI1

=out-of-bound-exprs for reason inductive-invariants at Lentry%2%allocaI4_L0%2%allocaI2

=out-of-bound-exprs for reason inductive-invariants at E0%0%d_E0%0%d

=graph_with_points done
=Invariant state at node L0%0%d_L0%0%d for reason inductive-invariants
=pc L0%0%d_L0%0%d inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond.description

=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond.expr is null
=pc L0%0%d_L0%0%d inductive-invariants invariant_state failcond done
=pc L0%0%d_L0%0%d inductive-invariants invariant_state done
=Invariant state at node Lentry%1%allocaI3_L0%2%allocaI3 for reason inductive-invariants
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond.description

=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state failcond done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 1
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr point_expr 2
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr point_expr 3
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr point_expr 4
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr point_expr 5
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr point_expr 6
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr point_expr 7
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr point_expr 8
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr point_expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr point_expr 10
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr point_expr 11
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 13
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 14
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 13 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv point_expr 28
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.28
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8134
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8537
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce7866
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3.ce8135
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8268
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce7867
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3.ce8269
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce8402
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce8000
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3.ce8001
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3.ce8403
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ce 11: z3v487.ce8536
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=13; number of visited CEs=12; number of preds=6
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
19
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 28->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 28->0; 
28
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->1; 
matrix done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 29
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 30
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini point_expr 31
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini point_expr 32
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini point_expr 34
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini point_expr 35
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini point_expr 36
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini point_expr 37
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 38
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 39
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini pred 3
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=0; number of preds=4
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini point_expr 42
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce8674
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ce 1: z3v487.ce8767
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=2; number of preds=0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini point_expr 44
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini point_expr 46
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini name local-eq-lsprel-guess
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini point_expr 48
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI3_L0%2%allocaI3 inductive-invariants invariant_state done
=Invariant state at node Lentry%1%allocaI4_L0%2%allocaI4 for reason inductive-invariants
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond.description

=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state failcond done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 13 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 20
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.63
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8134
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8537
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3.ce8135
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8268
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce7867
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3.ce8269
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce8402
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce8000
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3.ce8001
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3.ce8403
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ce 11: z3v487.ce8536
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=13; number of visited CEs=12; number of preds=6
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
19
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 63->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 63->0; 
63
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 20->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->1; 
matrix done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini point_expr 33
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d= : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 41
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce7866
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=3
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini point_expr 43
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce8674
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini point_expr 45
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini point_expr 47
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 1 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini point_expr 49
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%1%allocaI4_L0%2%allocaI4 inductive-invariants invariant_state done
=Invariant state at node Lentry%2%allocaI3_L0%2%allocaI1 for reason inductive-invariants
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond.description

=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state failcond done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 50
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr point_expr 51
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr point_expr 52
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr point_expr 53
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr point_expr 54
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr point_expr 55
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr point_expr 56
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr point_expr 57
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr point_expr 58
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr point_expr 59
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr point_expr 60
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%1%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 61
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 62
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 14 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 63
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear1-32-free_var_idx.80
=LhsExpr
1 : 8 { 0x8 +1.95e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear2-32-free_var_idx.63
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear1-4-free_var_idx.19
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.18
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 6
=Comment
expr-group-bvs.linear2-32-free_var_idx.79
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv pred 7
=Comment
expr-group-bvs.linear2-32-free_var_idx.16
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3.ce8850
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3v487.ce9158
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3v487.ce8913
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce8971
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce8972
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3v487.ce9035
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3.ce9036
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 8: z3v487.ce9216
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 9: z3v487.ce9274
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ce 10: z3v487.ce9332
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=14; number of visited CEs=11; number of preds=8
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
18
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
19
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 63->0; 79->0; 80->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 63->0; 79->0; 80->0; 
63
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->1; 79->0; 80->0; 
79
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->4294967295; 27->0; 63->0; 79->1; 80->0; 
80
-2147483648->4294967288; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 63->0; 79->0; 80->1; 
matrix done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 64
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 65
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini point_expr 66
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini point_expr 81
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini point_expr 68
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini point_expr 69
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini point_expr 70
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini point_expr 71
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 40
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini point_expr 82
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 1
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini pred 2
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce8849
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=3
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini point_expr 83
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini visited ce 0: z3v487.ce9390
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini point_expr 84
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini point_expr 85
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 1 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini point_expr 86
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI3_L0%2%allocaI1 inductive-invariants invariant_state done
=Invariant state at node Lentry%2%allocaI4_L0%2%allocaI2 for reason inductive-invariants
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond.description

=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond.expr is null
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state failcond done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability name mem-allocs-equality
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability point_expr 87
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability pred 0
=Comment
mem-allocs-equality-houdini-guess
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 0 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr name memory-equality-memlabel-mem--rodata
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr point_expr 88
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr point_expr 89
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--rodata : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr pred 0
=Comment
guess-memeq-memlabel-mem--rodata
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--rodata : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 1 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr name memory-equality-memlabel-mem--symbol.2.0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr point_expr 90
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr point_expr 91
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.2.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 2 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr name memory-equality-memlabel-mem--symbol.3.0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr point_expr 92
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr point_expr 93
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--symbol.3.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr pred 0
=Comment
guess-memeq-memlabel-mem--symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 3 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr name memory-equality-memlabel-mem--heap
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr point_expr 94
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr point_expr 95
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr pred 0
=Comment
guess-memeq-memlabel-mem--heap
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 4 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr name memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr expr_group_type ARR_EQ with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr point_expr 96
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr point_expr 97
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr pred 0
=Comment
guess-memeq-local-memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=LhsExpr
1 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 5 type arr summary: number of exprs=2; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability name abstract-memlabel-asserts
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability point_expr 12
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability pred 0
=Comment
abstract-memlabel-asserts-houdini-guess
=LhsExpr
1 : input.memlabel-mem--rodata_begin : BV:32
2 : input.memlabel-mem--rodata_end : BV:32
3 : bvule(1, 2) : BOOL
4 : rodata.size : BV:32
5 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : eq(2, 7) : BOOL
9 : and(3, 8) : BOOL
10 : 0 { 0x0 +1.0e129 } : BV:32
11 : bvugt(4, 10) : BOOL
12 : and(9, 11) : BOOL
13 : input.memlabel-mem--symbol.2.0_begin : BV:32
14 : input.memlabel-mem--symbol.2.0_end : BV:32
15 : bvule(13, 14) : BOOL
16 : and(12, 15) : BOOL
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(17, 5) : BV:32
19 : bvadd(13, 18) : BV:32
20 : eq(14, 19) : BOOL
21 : and(16, 20) : BOOL
22 : input.memlabel-mem--symbol.1.1_begin : BV:32
23 : input.memlabel-mem--symbol.1.1_end : BV:32
24 : bvule(22, 23) : BOOL
25 : and(21, 24) : BOOL
26 : 8 { 0x8 +1.95e129 } : BV:32
27 : bvadd(26, 5) : BV:32
28 : bvadd(22, 27) : BV:32
29 : eq(23, 28) : BOOL
30 : and(25, 29) : BOOL
31 : input.memlabel-mem--symbol.3.0_begin : BV:32
32 : input.memlabel-mem--symbol.3.0_end : BV:32
33 : bvule(31, 32) : BOOL
34 : and(30, 33) : BOOL
35 : 32 { 0x20 +1.381e129 } : BV:32
36 : bvadd(35, 5) : BV:32
37 : bvadd(31, 36) : BV:32
38 : eq(32, 37) : BOOL
39 : and(34, 38) : BOOL
40 : input.memlabel-mem--esp_begin : BV:32
41 : input.memlabel-mem--esp_end : BV:32
42 : bvule(40, 41) : BOOL
43 : and(39, 42) : BOOL
44 : stack.size : BV:32
45 : bvadd(44, 5) : BV:32
46 : bvadd(40, 45) : BV:32
47 : eq(41, 46) : BOOL
48 : and(43, 47) : BOOL
49 : bvugt(44, 10) : BOOL
50 : and(48, 49) : BOOL
51 : bvuge(1, 13) : BOOL
52 : bvule(1, 14) : BOOL
53 : and(51, 52) : BOOL
54 : bvuge(2, 13) : BOOL
55 : bvule(2, 14) : BOOL
56 : and(54, 55) : BOOL
57 : not(56) : BOOL
58 : andnot1(53, 57) : BOOL
59 : bvuge(13, 1) : BOOL
60 : bvule(13, 2) : BOOL
61 : and(59, 60) : BOOL
62 : bvuge(14, 1) : BOOL
63 : bvule(14, 2) : BOOL
64 : and(62, 63) : BOOL
65 : not(64) : BOOL
66 : andnot1(61, 65) : BOOL
67 : and(58, 66) : BOOL
68 : bvuge(1, 31) : BOOL
69 : bvule(1, 32) : BOOL
70 : and(68, 69) : BOOL
71 : bvuge(2, 31) : BOOL
72 : bvule(2, 32) : BOOL
73 : and(71, 72) : BOOL
74 : not(73) : BOOL
75 : andnot1(70, 74) : BOOL
76 : and(67, 75) : BOOL
77 : bvuge(31, 1) : BOOL
78 : bvule(31, 2) : BOOL
79 : and(77, 78) : BOOL
80 : bvuge(32, 1) : BOOL
81 : bvule(32, 2) : BOOL
82 : and(80, 81) : BOOL
83 : not(82) : BOOL
84 : andnot1(79, 83) : BOOL
85 : and(76, 84) : BOOL
86 : bvuge(1, 40) : BOOL
87 : bvule(1, 41) : BOOL
88 : and(86, 87) : BOOL
89 : bvuge(2, 40) : BOOL
90 : bvule(2, 41) : BOOL
91 : and(89, 90) : BOOL
92 : not(91) : BOOL
93 : andnot1(88, 92) : BOOL
94 : and(85, 93) : BOOL
95 : bvuge(40, 1) : BOOL
96 : bvule(40, 2) : BOOL
97 : and(95, 96) : BOOL
98 : bvuge(41, 1) : BOOL
99 : bvule(41, 2) : BOOL
100 : and(98, 99) : BOOL
101 : not(100) : BOOL
102 : andnot1(97, 101) : BOOL
103 : and(94, 102) : BOOL
104 : bvuge(13, 40) : BOOL
105 : bvule(13, 41) : BOOL
106 : and(104, 105) : BOOL
107 : bvuge(14, 40) : BOOL
108 : bvule(14, 41) : BOOL
109 : and(107, 108) : BOOL
110 : not(109) : BOOL
111 : andnot1(106, 110) : BOOL
112 : and(103, 111) : BOOL
113 : bvuge(40, 13) : BOOL
114 : bvule(40, 14) : BOOL
115 : and(113, 114) : BOOL
116 : bvuge(41, 13) : BOOL
117 : bvule(41, 14) : BOOL
118 : and(116, 117) : BOOL
119 : not(118) : BOOL
120 : andnot1(115, 119) : BOOL
121 : and(112, 120) : BOOL
122 : bvuge(31, 40) : BOOL
123 : bvule(31, 41) : BOOL
124 : and(122, 123) : BOOL
125 : bvuge(32, 40) : BOOL
126 : bvule(32, 41) : BOOL
127 : and(125, 126) : BOOL
128 : not(127) : BOOL
129 : andnot1(124, 128) : BOOL
130 : and(121, 129) : BOOL
131 : bvuge(40, 31) : BOOL
132 : bvule(40, 32) : BOOL
133 : and(131, 132) : BOOL
134 : bvuge(41, 31) : BOOL
135 : bvule(41, 32) : BOOL
136 : and(134, 135) : BOOL
137 : not(136) : BOOL
138 : andnot1(133, 137) : BOOL
139 : and(130, 138) : BOOL
140 : bvuge(22, 1) : BOOL
141 : bvule(23, 2) : BOOL
142 : and(140, 141) : BOOL
143 : and(139, 142) : BOOL
144 : and(50, 143) : BOOL
145 : symbol.2 : BV:32
146 : 3 { 0x3 +1.35e129 } : BV:32
147 : bvand(145, 146) : BV:32
148 : eq(147, 10) : BOOL
149 : symbol.1 : BV:32
150 : bvand(149, 146) : BV:32
151 : eq(150, 10) : BOOL
152 : and(148, 151) : BOOL
153 : and(144, 152) : BOOL
154 : eq(145, 13) : BOOL
155 : eq(149, 22) : BOOL
156 : and(154, 155) : BOOL
157 : symbol.3 : BV:32
158 : eq(157, 31) : BOOL
159 : and(156, 158) : BOOL
160 : and(153, 159) : BOOL
161 : input.dst.sp=L0%0%d=sp : BV:32
162 : bvule(40, 161) : BOOL
163 : bvadd(161, 146) : BV:32
164 : bvule(161, 163) : BOOL
165 : bvule(163, 41) : BOOL
166 : and(164, 165) : BOOL
167 : bvadd(161, 17) : BV:32
168 : 16 { 0x10 +1.0e1025 } : INT
169 : islangaligned(167, 168) : BOOL
170 : and(166, 169) : BOOL
171 : and(162, 170) : BOOL
172 : and(160, 171) : BOOL
173 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
174 : bvand(40, 173) : BV:32
175 : eq(174, 40) : BOOL
176 : 1 { 0x1 +1.11e129 } : BV:32
177 : bvadd(41, 176) : BV:32
178 : bvand(177, 173) : BV:32
179 : eq(178, 177) : BOOL
180 : and(175, 179) : BOOL
181 : and(172, 180) : BOOL
182 : bvugt(40, 10) : BOOL
183 : and(181, 182) : BOOL
184 : dst_symbol_addr.1 : BV:32
185 : eq(149, 184) : BOOL
186 : dst_symbol_addr.2 : BV:32
187 : eq(145, 186) : BOOL
188 : and(185, 187) : BOOL
189 : dst_symbol_addr.3 : BV:32
190 : eq(157, 189) : BOOL
191 : and(188, 190) : BOOL
192 : and(183, 191) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability is assumed eqclass : 1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 6 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability name memlabel-is-absent
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 98
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability point_expr 99
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 0
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability pred 1
=Comment
memlabel-is-absent-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
4 : memlabel_is_absent(2, 3) : BOOL
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 7 type houdini_expects_stability summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability name sp-below-isp
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability expr_group_type HOUDINI_EXPECTS_STABILITY with 1 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability point_expr 15
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability pred 0
=Comment
sp-below-isp-houdini-guess
=LhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : bvule(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 8 type houdini_expects_stability summary: number of exprs=1; number of visited CEs=0; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv name expr-group-bvs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv expr_group_type BV_EQ with 14 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 16
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 17
1 : retaddr_const : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 18
1 : input.dst.sp=L0%0%d=sp : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 19
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 21
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 22
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 23
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 24
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 25
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 26
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 27
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 79
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 80
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv point_expr 100
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 0
=Comment
expr-group-bvs.linear2-32-free_var_idx.100
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 1
=Comment
expr-group-bvs.linear1-32-free_var_idx.80
=LhsExpr
1 : 8 { 0x8 +1.95e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 2
=Comment
expr-group-bvs.linear2-32-free_var_idx.26
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 3
=Comment
expr-group-bvs.linear2-32-free_var_idx.25
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=RhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 4
=Comment
expr-group-bvs.linear1-32-free_var_idx.27
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
=RhsExpr
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 5
=Comment
expr-group-bvs.linear2-32-free_var_idx.19
=LhsExpr
1 : 16 { 0x10 +1.190e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=RhsExpr
1 : input.dst.sp=L0%0%d=sp : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 6
=Comment
expr-group-bvs.linear2-32-free_var_idx.79
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 7
=Comment
expr-group-bvs.linear1-4-free_var_idx.18
=LhsExpr
1 : 12 { 0xc -4 } : BV:4
=RhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:4
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv pred 8
=Comment
expr-group-bvs.linear1-2-free_var_idx.16
=LhsExpr
1 : 0 { 0x0 } : BV:2
=RhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 1 { 0x1 +1.0e1025 } : INT
3 : 0 { 0x0 +1.0e1025 } : INT
4 : bvextract(1, 2, 3) : BV:2
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 0: z3v487.ce9845
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 1: z3v487.ce9035
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 2: z3.ce9449
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 3: z3v487.ce9448
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 4: z3v487.ce9590
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 5: z3.ce9591
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 6: z3v487.ce9956
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ce 7: z3v487.ce9734
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv summary: number of exprs=14; number of visited CEs=8; number of preds=9
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv output matrix
matrix:
16
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->1073741824; 27->0; 79->0; 80->0; 100->0; 
18
-2147483648->1073741824; 16->268435456; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
19
-2147483648->4294967280; 16->4294967295; 17->0; 18->1; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
25
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->1; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->0; 
26
-2147483648->0; 16->4294967295; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->1; 26->0; 27->0; 79->0; 80->0; 100->0; 
27
-2147483648->4294967280; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->1; 79->0; 80->0; 100->0; 
79
-2147483648->0; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->4294967295; 27->0; 79->1; 80->0; 100->0; 
80
-2147483648->4294967288; 16->0; 17->0; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->1; 100->0; 
100
-2147483648->0; 16->0; 17->4294967295; 18->0; 19->0; 21->0; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 79->0; 80->0; 100->1; 
matrix done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 9 type bv state elems done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini name expr-group-region_agrees_with_memlabel
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini expr_group_type HOUDINI with 3 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 101
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 102
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini point_expr 103
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 0
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 1
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 1 { 0x1 +1.11e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini pred 2
=Comment
expr-group-region_agrees_with_memlabel-houdini-guess
=LhsExpr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 10 type houdini summary: number of exprs=3; number of visited CEs=0; number of preds=3
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini name local-sizes-are-equal
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini point_expr 67
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini point_expr 104
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini pred 0
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini pred 1
=Comment
local-sizes-are-equal-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 11 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini name nonarg-locals-iscontiguous
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini point_expr 105
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini point_expr 106
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini pred 0
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini pred 1
=Comment
nonarg-locals-iscontiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : iscontiguous_memlabel(2, 3, 4, 5) : BOOL
7 : xor(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 12 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini name nonarg-locals-isprobably-contiguous
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini point_expr 107
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini point_expr 108
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini pred 0
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini pred 1
=Comment
nonarg-locals-isprobably-contiguous-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
5 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
6 : isprobably_contiguous_memlabel(2, 3, 4, 5) : BOOL
7 : or(1, 6) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 13 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini name sp-ml-lb-ineq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini expr_group_type HOUDINI with 4 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 72
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 73
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 109
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini point_expr 110
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
4 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
5 : bvsub(3, 4) : BV:32
6 : bvule(2, 5) : BOOL
7 : or(1, 6) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini pred 0
=Comment
sp-ml-lb-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
4 : bvule(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini visited ce 0: z3v487.ce9035
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 14 type houdini summary: number of exprs=4; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini name ml-lb-ub-eq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini point_expr 74
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini point_expr 111
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini pred 0
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini pred 1
=Comment
ml-lb-ub-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : eq(5, 6) : BOOL
8 : xor(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 15 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini name ml-lb-ub-ineq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini point_expr 75
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini point_expr 112
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini pred 0
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini pred 1
=Comment
ml-lb-ub-ineq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvadd(2, 3, 4) : BV:32
6 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
7 : bvule(5, 6) : BOOL
8 : or(1, 7) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 16 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini name ml-lb-addr-eq
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini point_expr 76
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini point_expr 113
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini pred 0
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini pred 1
=Comment
ml-lb-addr-eq-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4 : BV:32
3 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 17 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini name locals-ub-upper-bound
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini point_expr 77
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini point_expr 114
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini pred 0
=Comment
locals-ub-upper-bound-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4 : BV:32
3 : input.dst.sp=L0%1%spver=sp.L0%1%spver : BV:32
4 : bvult(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini visited ce 0: z3.ce9449
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 18 type houdini summary: number of exprs=2; number of visited CEs=1; number of preds=1
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini name local-eq-lsprel-guess
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini expr_group_type HOUDINI with 2 exprs
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini point_expr 78
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini point_expr 115
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini pred 0
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini pred 1
=Comment
local-eq-lsprel-guess-houdini-guess
=LhsExpr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
4 : eq(2, 3) : BOOL
5 : or(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini predicate_set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini is assumed eqclass : 0
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini visited ces set done
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants smallest_point_cover 19 type houdini summary: number of exprs=2; number of visited CEs=0; number of preds=2
=pc Lentry%2%allocaI4_L0%2%allocaI2 inductive-invariants invariant_state done
=Invariant state at node E0%0%d_E0%0%d for reason inductive-invariants
=pc E0%0%d_E0%0%d inductive-invariants invariant_state 
is_top 0
is_stable 1
=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond.description

=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond.expr is null
=pc E0%0%d_E0%0%d inductive-invariants invariant_state failcond done
=pc E0%0%d_E0%0%d inductive-invariants invariant_state done
=invariant_state_changed_at_pcs for reason inductive-invariants:
=graph_with_guessing done
=graph_with_correctness_covers begin
=graph_with_correctness_covers done
=m_dst_fcall_edges_already_updated_from_pcs:
=m_internal_pcs:
Lentry%1%allocaI3_L0%2%allocaI3
Lentry%1%allocaI4_L0%2%allocaI4
Lentry%2%allocaI3_L0%2%allocaI1
Lentry%2%allocaI4_L0%2%allocaI2
=m_super_edges:
L0%0%d_L0%0%d=>E0%0%d_E0%0%d
=AllocaPCLocalSprelAssumptionsBegin:
=PC: L0%2%spver
=local.=Lentry%1%d=
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=local.=Lentry%2%d=
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=Local offsets from compile log
=Local offsets from compile log done
=done
=AllocaPCLocalSprelAssumptionsEnd
=DeallocaPCLocalSprelAssumptionsBegin:
=Local offsets from compile log
=Local offsets from compile log done
=done
=DeallocaPCLocalSprelAssumptionsEnd
=src_tfg pcs reaching pcpair L0%0%d_L0%0%d
=src_tfg pc: L0%0%d
=exit_pc_asserts at E0%0%d_E0%0%d
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.sp-preserved
=LhsExpr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.boolbv.llvm-%ret-reg
=LhsExpr
1 : input.src.llvm-%conv.E0%0%d : BV:32
=RhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.heap
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.boolbv.llvm-indir_tgt
=LhsExpr
1 : retaddr_const : BV:32
=RhsExpr
1 : retaddr_const : BV:32
=predicate done
=exit_pc_assert.0 at E0%0%d_E0%0%d
=Comment
exit.memeq.symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge well-formedness condition
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond cg_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond src_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond dst_path
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge-wf-cond pred.0
=Comment
wfcond.from_pcL0%0%d_L0%0%d.to_pcLentry%1%allocaI3_L0%2%allocaI3-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
4 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
5 : 16 { 0x10 +1.190e129 } : BV:32
6 : apply(1, 2, 3, 4, 5) : BV:32
7 : input.dst.sp=L0%0%d=sp : BV:32
8 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
9 : bvadd(7, 8) : BV:32
10 : eq(6, 9) : BOOL
11 : 1 { 0x1 } : BOOL
12 : implies(10, 11) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 edge well-formedness condition done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge well-formedness condition
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond src_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-region-was-stack
=LhsExpr
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : memlabel-mem--esp : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-neq-zero
=LhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-no-overflow
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI3.to_pcLentry%1%allocaI4-alloca-addr-is-aligned
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge-wf-cond pred.0
=Comment
wfcond.from_pcL0%2%allocaI3.to_pcL0%2%allocaI4-alloca-addr-geq-sp
=LhsExpr
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
2 : input.dst.exreg.0.4.L0%2%spver : BV:32
3 : bvuge(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 edge well-formedness condition done
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge well-formedness condition
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond src_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%1%allocaI4_L0%2%allocaI4.to_pcLentry%2%allocaI3_L0%2%allocaI1-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
2 : input.src.local_alloc_count.=L0%0%d= : COUNT
3 : increment_count(2) : COUNT
4 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : apply(1, 3, 4, 5, 6) : BV:32
8 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
9 : eq(7, 8) : BOOL
10 : 1 { 0x1 } : BOOL
11 : implies(9, 10) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 edge well-formedness condition done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge well-formedness condition
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond cg_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond cg_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond src_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond dst_path
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-region-was-stack
=LhsExpr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : memlabel-mem--heap : MEMLABEL
5 : region_agrees_with_memlabel(1, 2, 3, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-neq-zero
=LhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-no-overflow
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(2, 1) : BV:32
4 : bvule(1, 3) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3.to_pcLentry%2%allocaI4-alloca-addr-is-aligned
=LhsExpr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge-wf-cond pred.0
=Comment
wfcond.from_pcLentry%2%allocaI3_L0%2%allocaI1.to_pcLentry%2%allocaI4_L0%2%allocaI2-dst-edgecond-implies-src-edgecond
=LhsExpr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
2 : 4 { 0x4 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : 7 { 0x7 +1.83e129 } : BV:32
5 : bvadd(4, 1) : BV:32
6 : bvule(1, 5) : BOOL
7 : and(3, 6) : BOOL
8 : 0 { 0x0 +1.0e129 } : BV:32
9 : eq(8, 1) : BOOL
10 : andnot2(7, 9) : BOOL
11 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
12 : 8 { 0x8 +1.95e129 } : BV:32
13 : memlabel-mem--heap : MEMLABEL
14 : region_agrees_with_memlabel(11, 1, 12, 13) : BOOL
15 : and(10, 14) : BOOL
16 : 1 { 0x1 } : BOOL
17 : implies(15, 16) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 edge well-formedness condition done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge well-formedness condition
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond cg_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond cg_path.graph_edge_composition
(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond src_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond src_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond dst_path
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond dst_path.graph_edge_composition
(epsilon)
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.symbol.2.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.2.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.symbol.3.0
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--symbol.3.0 : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.memeq.heap
=LhsExpr
1 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
2 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : input.dst.mem.L4%1%d : ARRAY[BV:32 -> BV:8]
4 : input.dst.mem.alloc.L4%1%d : ARRAY[BV:32 -> MEMLABEL]
5 : memlabel-mem--heap : MEMLABEL
6 : memmasks_are_equal(1, 2, 3, 4, 5) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.boolbv.llvm-%ret-reg
=LhsExpr
1 : input.src.llvm-%conv.E0%0%d : BV:32
=RhsExpr
1 : 0 { 0x0 +1.0e129 } : BV:32
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge-wf-cond pred.0
=Comment
exit.sp-preserved
=LhsExpr
1 : input.dst.exreg.0.4.E0%0%d : BV:32
2 : input.dst.sp=L0%0%d=sp : BV:32
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : bvadd(2, 3) : BV:32
5 : eq(1, 4) : BOOL
=RhsExpr
1 : 1 { 0x1 } : BOOL
=predicate done
=well-formedness-conditions for Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d edge well-formedness condition done
=Ranking exprs at node Lentry%1%allocaI3_L0%2%allocaI3
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.2 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%1%allocaI4_L0%2%allocaI4
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.local_size.=Lentry%2%d=.L0%2%d : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%2%allocaI3_L0%2%allocaI1
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Ranking expr 1
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Ranking expr 0
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.mem.L0%2%allocaI4 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.7 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs at node Lentry%2%allocaI4_L0%2%allocaI2
=SRC Ranking expr 0
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=SRC Ranking expr 1
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=SRC Tie Breaking expr 0
1 : retaddr_const : BV:32
=DST Tie Breaking expr 0
1 : input.dst.sp=L0%0%d=sp : BV:32
=DST Tie Breaking expr 1
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=DST Tie Breaking expr 2
1 : input.dst.exreg.0.3.L0%1%spver : BV:32
=DST Tie Breaking expr 3
1 : input.dst.exreg.0.5.L0%1%spver : BV:32
=DST Tie Breaking expr 4
1 : input.dst.exreg.0.6.L0%1%spver : BV:32
=DST Tie Breaking expr 5
1 : input.dst.exreg.0.7.L0%1%spver : BV:32
=DST Tie Breaking expr 6
1 : input.dst.exreg.0.4.L0%2%spver : BV:32
=DST Tie Breaking expr 7
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=DST Tie Breaking expr 8
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=DST Tie Breaking expr 9
1 : input.dst.local_size.=Lentry%1%d=.L0%2%allocaI3 : BV:32
=DST Tie Breaking expr 10
1 : input.dst.mem.L0%2%allocaI2 : ARRAY[BV:32 -> BV:8]
2 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
3 : mlloc.dst.8 : MEMLABEL
4 : input.dst.sp=L0%0%d=sp : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=bv_rank_exprs done
=Ranking exprs done
=dst-to-src submaps at edge-id Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
=dst-to-src mapping #0 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%1%allocaI3=>Lentry%1%allocaI4)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4 : BOOL
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI3=>L0%2%allocaI4)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%allocaI4 : BOOL
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
=dst-to-src mapping #0 dst-expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%1%allocaI4=>Lentry%2%allocaI3)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3 : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI4=>L0%2%allocaI1)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1 : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 8 { 0x8 +1.95e129 } : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
=dst-to-src mapping #0 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4 : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
3 : bvadd(1, 2) : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2 : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : 7 { 0x7 +1.83e129 } : BV:32
2 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
3 : bvadd(1, 2) : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src mapping #1 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst-to-src mapping #1 src-path-expr
=dst-to-src mapping #1 src-path-expr path
=dst-to-src mapping #1 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #1 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4 : BV:32
=dst-to-src mapping #1 src-path-expr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
=dst-to-src mapping #1 src-path-expr done
=dst-to-src mapping #1 dst-path-expr
=dst-to-src mapping #1 dst-path-expr path
=dst-to-src mapping #1 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #1 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2 : BV:32
=dst-to-src mapping #1 dst-path-expr wp_expr
1 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
=dst-to-src mapping #1 dst-path-expr done
=dst-to-src mapping #2 dst-expr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr
=dst-to-src mapping #2 src-path-expr path
=dst-to-src mapping #2 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #2 src-path-expr expr
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr wp_expr
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 src-path-expr done
=dst-to-src mapping #2 dst-path-expr
=dst-to-src mapping #2 dst-path-expr path
=dst-to-src mapping #2 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #2 dst-path-expr expr
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 dst-path-expr wp_expr
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
2 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
3 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
4 : 8 { 0x8 +1.95e129 } : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src mapping #2 dst-path-expr done
=dst-to-src mapping #3 dst-expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=dst-to-src mapping #3 src-path-expr
=dst-to-src mapping #3 src-path-expr path
=dst-to-src mapping #3 src-path-expr.graph_edge_composition
(Lentry%2%allocaI3=>Lentry%2%allocaI4)
=dst-to-src mapping #3 src-path-expr expr
1 : input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4 : BOOL
=dst-to-src mapping #3 src-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #3 src-path-expr done
=dst-to-src mapping #3 dst-path-expr
=dst-to-src mapping #3 dst-path-expr path
=dst-to-src mapping #3 dst-path-expr.graph_edge_composition
(L0%2%allocaI1=>L0%2%allocaI2)
=dst-to-src mapping #3 dst-path-expr expr
1 : input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2 : BOOL
=dst-to-src mapping #3 dst-path-expr wp_expr
1 : 0 { 0x0 } : BOOL
=dst-to-src mapping #3 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=dst-to-src-submap done
=dst-to-src submaps at edge-id Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
=dst-to-src mapping #0 dst-expr
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 src-path-expr
=dst-to-src mapping #0 src-path-expr path
=dst-to-src mapping #0 src-path-expr.graph_edge_composition
((((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))*(Lfor.end%1%d=>E0%0%d))
=dst-to-src mapping #0 src-path-expr expr
1 : input.src.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 src-path-expr wp_expr
1 : retaddr_const : BV:32
=dst-to-src mapping #0 src-path-expr done
=dst-to-src mapping #0 dst-path-expr
=dst-to-src mapping #0 dst-path-expr path
=dst-to-src mapping #0 dst-path-expr.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*((L1%1%d=>L3%1%spver)*((L3%1%spver=>L4%1%d)*(L4%1%d=>E0%0%d))))
=dst-to-src mapping #0 dst-path-expr expr
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=dst-to-src mapping #0 dst-path-expr wp_expr
1 : retaddr_const : BV:32
=dst-to-src mapping #0 dst-path-expr done
=dst-to-src mapping #1 dst-expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=dst-to-src mapping #1 src-path-expr
=dst-to-src mapping #1 src-path-expr path
=dst-to-src mapping #1 src-path-expr.graph_edge_composition
(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
=dst-to-src mapping #1 src-path-expr expr
1 : input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry : BV:32
=dst-to-src mapping #1 src-path-expr wp_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst-to-src mapping #1 src-path-expr done
=dst-to-src mapping #1 dst-path-expr
=dst-to-src mapping #1 dst-path-expr path
=dst-to-src mapping #1 dst-path-expr.graph_edge_composition
((L0%2%allocaI2=>L1%1%d)*(L1%1%d=>L3%1%spver))
=dst-to-src mapping #1 dst-path-expr expr
1 : input.dst.exreg.0.0.L3%1%spver : BV:32
=dst-to-src mapping #1 dst-path-expr wp_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst-to-src mapping #1 dst-path-expr done
=dst-to-src-from-pc-submap-for-non-atomic-keys
=submap done
=dst-to-src-from-pc-submap-for-atomic-keys
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.sp=L0%2%spver=sp.L0%2%spver : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
=dst-to-src-from-pc-submap-for-atomic-keys from
1 : input.dst.mem.alloc.L0%2%allocaI2 : ARRAY[BV:32 -> MEMLABEL]
=dst-to-src-from-pc-submap-for-atomic-keys to
1 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
=submap done
=dst-to-src-memlabels-with-identical-mem-contents
 memlabel-mem--rodata memlabel-mem--symbol.2.0 memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ memlabel-mem--symbol.3.0 memlabel-mem--heap
=dst-to-src-memlabels-src-addr-to-ml-map
=src-addr-to-ml mapping #0 src-addr
=src-addr-to-ml mapping #0 src-addr path
=src-addr-to-ml mapping #0 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #0 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #0 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #0 src-addr done
=src-addr-to-ml mapping #0 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #1 src-addr
=src-addr-to-ml mapping #1 src-addr path
=src-addr-to-ml mapping #1 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #1 src-addr expr
1 : symbol.1 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #1 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #1 src-addr done
=src-addr-to-ml mapping #1 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #2 src-addr
=src-addr-to-ml mapping #2 src-addr path
=src-addr-to-ml mapping #2 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #2 src-addr expr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #2 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #2 src-addr done
=src-addr-to-ml mapping #2 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #3 src-addr
=src-addr-to-ml mapping #3 src-addr path
=src-addr-to-ml mapping #3 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #3 src-addr expr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #3 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #3 src-addr done
=src-addr-to-ml mapping #3 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #4 src-addr
=src-addr-to-ml mapping #4 src-addr path
=src-addr-to-ml mapping #4 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #4 src-addr expr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #4 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #4 src-addr done
=src-addr-to-ml mapping #4 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #5 src-addr
=src-addr-to-ml mapping #5 src-addr path
=src-addr-to-ml mapping #5 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #5 src-addr expr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #5 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #5 src-addr done
=src-addr-to-ml mapping #5 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #6 src-addr
=src-addr-to-ml mapping #6 src-addr path
=src-addr-to-ml mapping #6 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #6 src-addr expr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #6 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #6 src-addr done
=src-addr-to-ml mapping #6 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #7 src-addr
=src-addr-to-ml mapping #7 src-addr path
=src-addr-to-ml mapping #7 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #7 src-addr expr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #7 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #7 src-addr done
=src-addr-to-ml mapping #7 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #8 src-addr
=src-addr-to-ml mapping #8 src-addr path
=src-addr-to-ml mapping #8 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #8 src-addr expr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #8 src-addr wp_expr
1 : symbol.1 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #8 src-addr done
=src-addr-to-ml mapping #8 memlabel: memlabel-mem--rodata
=src-addr-to-ml mapping #9 src-addr
=src-addr-to-ml mapping #9 src-addr path
=src-addr-to-ml mapping #9 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #9 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #9 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #9 src-addr done
=src-addr-to-ml mapping #9 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #10 src-addr
=src-addr-to-ml mapping #10 src-addr path
=src-addr-to-ml mapping #10 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #10 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #10 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #10 src-addr done
=src-addr-to-ml mapping #10 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #11 src-addr
=src-addr-to-ml mapping #11 src-addr path
=src-addr-to-ml mapping #11 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #11 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #11 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #11 src-addr done
=src-addr-to-ml mapping #11 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #12 src-addr
=src-addr-to-ml mapping #12 src-addr path
=src-addr-to-ml mapping #12 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #12 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #12 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #12 src-addr done
=src-addr-to-ml mapping #12 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #13 src-addr
=src-addr-to-ml mapping #13 src-addr path
=src-addr-to-ml mapping #13 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #13 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #13 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #13 src-addr done
=src-addr-to-ml mapping #13 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #14 src-addr
=src-addr-to-ml mapping #14 src-addr path
=src-addr-to-ml mapping #14 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #14 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #14 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #14 src-addr done
=src-addr-to-ml mapping #14 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #15 src-addr
=src-addr-to-ml mapping #15 src-addr path
=src-addr-to-ml mapping #15 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #15 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #15 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #15 src-addr done
=src-addr-to-ml mapping #15 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #16 src-addr
=src-addr-to-ml mapping #16 src-addr path
=src-addr-to-ml mapping #16 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #16 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #16 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #16 src-addr done
=src-addr-to-ml mapping #16 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #17 src-addr
=src-addr-to-ml mapping #17 src-addr path
=src-addr-to-ml mapping #17 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #17 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #17 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #17 src-addr done
=src-addr-to-ml mapping #17 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #18 src-addr
=src-addr-to-ml mapping #18 src-addr path
=src-addr-to-ml mapping #18 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #18 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 9 { 0x9 +1.107e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #18 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 9 { 0x9 +1.107e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #18 src-addr done
=src-addr-to-ml mapping #18 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #19 src-addr
=src-addr-to-ml mapping #19 src-addr path
=src-addr-to-ml mapping #19 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #19 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 10 { 0xa +1.119e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #19 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 10 { 0xa +1.119e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #19 src-addr done
=src-addr-to-ml mapping #19 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #20 src-addr
=src-addr-to-ml mapping #20 src-addr path
=src-addr-to-ml mapping #20 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #20 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 11 { 0xb +1.131e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #20 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 11 { 0xb +1.131e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #20 src-addr done
=src-addr-to-ml mapping #20 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #21 src-addr
=src-addr-to-ml mapping #21 src-addr path
=src-addr-to-ml mapping #21 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #21 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #21 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #21 src-addr done
=src-addr-to-ml mapping #21 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #22 src-addr
=src-addr-to-ml mapping #22 src-addr path
=src-addr-to-ml mapping #22 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #22 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 13 { 0xd +1.154e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #22 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 13 { 0xd +1.154e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #22 src-addr done
=src-addr-to-ml mapping #22 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #23 src-addr
=src-addr-to-ml mapping #23 src-addr path
=src-addr-to-ml mapping #23 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #23 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 14 { 0xe +1.166e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #23 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 14 { 0xe +1.166e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #23 src-addr done
=src-addr-to-ml mapping #23 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #24 src-addr
=src-addr-to-ml mapping #24 src-addr path
=src-addr-to-ml mapping #24 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #24 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #24 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 15 { 0xf +1.178e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #24 src-addr done
=src-addr-to-ml mapping #24 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #25 src-addr
=src-addr-to-ml mapping #25 src-addr path
=src-addr-to-ml mapping #25 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #25 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #25 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #25 src-addr done
=src-addr-to-ml mapping #25 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #26 src-addr
=src-addr-to-ml mapping #26 src-addr path
=src-addr-to-ml mapping #26 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #26 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #26 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #26 src-addr done
=src-addr-to-ml mapping #26 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #27 src-addr
=src-addr-to-ml mapping #27 src-addr path
=src-addr-to-ml mapping #27 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #27 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #27 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #27 src-addr done
=src-addr-to-ml mapping #27 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #28 src-addr
=src-addr-to-ml mapping #28 src-addr path
=src-addr-to-ml mapping #28 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #28 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #28 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #28 src-addr done
=src-addr-to-ml mapping #28 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #29 src-addr
=src-addr-to-ml mapping #29 src-addr path
=src-addr-to-ml mapping #29 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #29 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #29 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #29 src-addr done
=src-addr-to-ml mapping #29 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #30 src-addr
=src-addr-to-ml mapping #30 src-addr path
=src-addr-to-ml mapping #30 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #30 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #30 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #30 src-addr done
=src-addr-to-ml mapping #30 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #31 src-addr
=src-addr-to-ml mapping #31 src-addr path
=src-addr-to-ml mapping #31 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #31 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #31 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #31 src-addr done
=src-addr-to-ml mapping #31 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #32 src-addr
=src-addr-to-ml mapping #32 src-addr path
=src-addr-to-ml mapping #32 src-addr.graph_edge_composition
(epsilon)
=src-addr-to-ml mapping #32 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #32 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #32 src-addr done
=src-addr-to-ml mapping #32 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #33 src-addr
=src-addr-to-ml mapping #33 src-addr path
=src-addr-to-ml mapping #33 src-addr.graph_edge_composition
(Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
=src-addr-to-ml mapping #33 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #33 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #33 src-addr done
=src-addr-to-ml mapping #33 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #34 src-addr
=src-addr-to-ml mapping #34 src-addr path
=src-addr-to-ml mapping #34 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #34 src-addr expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #34 src-addr wp_expr
1 : symbol.2 : BV:32
=src-addr-to-ml mapping #34 src-addr done
=src-addr-to-ml mapping #34 memlabel: memlabel-mem--symbol.2.0
=src-addr-to-ml mapping #35 src-addr
=src-addr-to-ml mapping #35 src-addr path
=src-addr-to-ml mapping #35 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #35 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #35 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #35 src-addr done
=src-addr-to-ml mapping #35 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #36 src-addr
=src-addr-to-ml mapping #36 src-addr path
=src-addr-to-ml mapping #36 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #36 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #36 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #36 src-addr done
=src-addr-to-ml mapping #36 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #37 src-addr
=src-addr-to-ml mapping #37 src-addr path
=src-addr-to-ml mapping #37 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #37 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #37 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #37 src-addr done
=src-addr-to-ml mapping #37 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #38 src-addr
=src-addr-to-ml mapping #38 src-addr path
=src-addr-to-ml mapping #38 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #38 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #38 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #38 src-addr done
=src-addr-to-ml mapping #38 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #39 src-addr
=src-addr-to-ml mapping #39 src-addr path
=src-addr-to-ml mapping #39 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #39 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #39 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #39 src-addr done
=src-addr-to-ml mapping #39 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #40 src-addr
=src-addr-to-ml mapping #40 src-addr path
=src-addr-to-ml mapping #40 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #40 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #40 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #40 src-addr done
=src-addr-to-ml mapping #40 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #41 src-addr
=src-addr-to-ml mapping #41 src-addr path
=src-addr-to-ml mapping #41 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #41 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #41 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 6 { 0x6 +1.71e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #41 src-addr done
=src-addr-to-ml mapping #41 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #42 src-addr
=src-addr-to-ml mapping #42 src-addr path
=src-addr-to-ml mapping #42 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #42 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #42 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 7 { 0x7 +1.83e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=src-addr-to-ml mapping #42 src-addr done
=src-addr-to-ml mapping #42 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=src-addr-to-ml mapping #43 src-addr
=src-addr-to-ml mapping #43 src-addr path
=src-addr-to-ml mapping #43 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #43 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : bvadd(16, 2) : BV:32
=src-addr-to-ml mapping #43 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 2) : BV:32
=src-addr-to-ml mapping #43 src-addr done
=src-addr-to-ml mapping #43 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #44 src-addr
=src-addr-to-ml mapping #44 src-addr path
=src-addr-to-ml mapping #44 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #44 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 1 { 0x1 +1.11e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #44 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 13) : BV:32
=src-addr-to-ml mapping #44 src-addr done
=src-addr-to-ml mapping #44 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #45 src-addr
=src-addr-to-ml mapping #45 src-addr path
=src-addr-to-ml mapping #45 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #45 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 2 { 0x2 +1.23e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #45 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 16) : BV:32
=src-addr-to-ml mapping #45 src-addr done
=src-addr-to-ml mapping #45 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #46 src-addr
=src-addr-to-ml mapping #46 src-addr path
=src-addr-to-ml mapping #46 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #46 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 3 { 0x3 +1.35e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #46 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 19) : BV:32
=src-addr-to-ml mapping #46 src-addr done
=src-addr-to-ml mapping #46 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #47 src-addr
=src-addr-to-ml mapping #47 src-addr path
=src-addr-to-ml mapping #47 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #47 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 4 { 0x4 +1.47e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #47 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 22) : BV:32
=src-addr-to-ml mapping #47 src-addr done
=src-addr-to-ml mapping #47 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #48 src-addr
=src-addr-to-ml mapping #48 src-addr path
=src-addr-to-ml mapping #48 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #48 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 5 { 0x5 +1.59e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #48 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 25) : BV:32
=src-addr-to-ml mapping #48 src-addr done
=src-addr-to-ml mapping #48 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #49 src-addr
=src-addr-to-ml mapping #49 src-addr path
=src-addr-to-ml mapping #49 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #49 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 6 { 0x6 +1.71e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #49 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 28) : BV:32
=src-addr-to-ml mapping #49 src-addr done
=src-addr-to-ml mapping #49 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #50 src-addr
=src-addr-to-ml mapping #50 src-addr path
=src-addr-to-ml mapping #50 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #50 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lfor.cond%1%bbentry : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : mlvar.src.llvm.main.34 : MEMLABEL
9 : symbol.2 : BV:32
10 : 4 { 0x4 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : select(6, 7, 8, 9, 10, 11) : BV:32
13 : 8 { 0x8 +1.95e129 } : BV:32
14 : bvmul(12, 13) : BV:32
15 : bvadd(5, 14) : BV:32
16 : bvadd(1, 15) : BV:32
17 : 7 { 0x7 +1.83e129 } : BV:32
18 : bvadd(16, 17) : BV:32
=src-addr-to-ml mapping #50 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
7 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
8 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
9 : 0 { 0x0 } : BV:8
10 : 1 { 0x1 +1.0e1025 } : INT
11 : 0 { 0x0 } : BOOL
12 : store(6, 7, 8, 1, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : bvadd(13, 1) : BV:32
15 : store(12, 7, 8, 14, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
16 : 2 { 0x2 +1.23e129 } : BV:32
17 : bvadd(16, 1) : BV:32
18 : store(15, 7, 8, 17, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
19 : 3 { 0x3 +1.35e129 } : BV:32
20 : bvadd(19, 1) : BV:32
21 : store(18, 7, 8, 20, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
22 : 4 { 0x4 +1.47e129 } : BV:32
23 : bvadd(22, 1) : BV:32
24 : store(21, 7, 8, 23, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
25 : 5 { 0x5 +1.59e129 } : BV:32
26 : bvadd(25, 1) : BV:32
27 : store(24, 7, 8, 26, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
28 : 6 { 0x6 +1.71e129 } : BV:32
29 : bvadd(28, 1) : BV:32
30 : store(27, 7, 8, 29, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
31 : 7 { 0x7 +1.83e129 } : BV:32
32 : bvadd(31, 1) : BV:32
33 : store(30, 7, 8, 32, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
34 : 8 { 0x8 +1.95e129 } : BV:32
35 : bvadd(34, 1) : BV:32
36 : store(33, 7, 8, 35, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
37 : 9 { 0x9 +1.107e129 } : BV:32
38 : bvadd(37, 1) : BV:32
39 : store(36, 7, 8, 38, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
40 : 10 { 0xa +1.119e129 } : BV:32
41 : bvadd(40, 1) : BV:32
42 : store(39, 7, 8, 41, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
43 : 11 { 0xb +1.131e129 } : BV:32
44 : bvadd(43, 1) : BV:32
45 : store(42, 7, 8, 44, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
46 : 12 { 0xc +1.143e129 } : BV:32
47 : bvadd(46, 1) : BV:32
48 : store(45, 7, 8, 47, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
49 : 13 { 0xd +1.154e129 } : BV:32
50 : bvadd(49, 1) : BV:32
51 : store(48, 7, 8, 50, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
52 : 14 { 0xe +1.166e129 } : BV:32
53 : bvadd(52, 1) : BV:32
54 : store(51, 7, 8, 53, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
55 : 15 { 0xf +1.178e129 } : BV:32
56 : bvadd(55, 1) : BV:32
57 : store(54, 7, 8, 56, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
58 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
59 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
60 : memlabel-mem--rodata : MEMLABEL
61 : symbol.1 : BV:32
62 : select(6, 7, 60, 61, 10, 11) : BV:8
63 : store(57, 7, 58, 59, 62, 10, 11) : ARRAY[BV:32 -> BV:8]
64 : bvadd(13, 59) : BV:32
65 : bvadd(61, 13) : BV:32
66 : select(6, 7, 60, 65, 10, 11) : BV:8
67 : store(63, 7, 58, 64, 66, 10, 11) : ARRAY[BV:32 -> BV:8]
68 : bvadd(16, 59) : BV:32
69 : bvadd(61, 16) : BV:32
70 : select(6, 7, 60, 69, 10, 11) : BV:8
71 : store(67, 7, 58, 68, 70, 10, 11) : ARRAY[BV:32 -> BV:8]
72 : bvadd(19, 59) : BV:32
73 : bvadd(61, 19) : BV:32
74 : select(6, 7, 60, 73, 10, 11) : BV:8
75 : store(71, 7, 58, 72, 74, 10, 11) : ARRAY[BV:32 -> BV:8]
76 : bvadd(22, 59) : BV:32
77 : bvadd(61, 22) : BV:32
78 : select(6, 7, 60, 77, 10, 11) : BV:8
79 : store(75, 7, 58, 76, 78, 10, 11) : ARRAY[BV:32 -> BV:8]
80 : bvadd(25, 59) : BV:32
81 : bvadd(61, 25) : BV:32
82 : select(6, 7, 60, 81, 10, 11) : BV:8
83 : store(79, 7, 58, 80, 82, 10, 11) : ARRAY[BV:32 -> BV:8]
84 : bvadd(28, 59) : BV:32
85 : bvadd(61, 28) : BV:32
86 : select(6, 7, 60, 85, 10, 11) : BV:8
87 : store(83, 7, 58, 84, 86, 10, 11) : ARRAY[BV:32 -> BV:8]
88 : bvadd(31, 59) : BV:32
89 : bvadd(61, 31) : BV:32
90 : select(6, 7, 60, 89, 10, 11) : BV:8
91 : store(87, 7, 58, 88, 90, 10, 11) : ARRAY[BV:32 -> BV:8]
92 : memlabel-mem--symbol.2.0 : MEMLABEL
93 : symbol.2 : BV:32
94 : 4 { 0x4 +1.0e1025 } : INT
95 : store(91, 7, 92, 93, 2, 94, 11) : ARRAY[BV:32 -> BV:8]
96 : mlvar.src.llvm.main.34 : MEMLABEL
97 : select(95, 7, 96, 93, 94, 11) : BV:32
98 : bvmul(97, 34) : BV:32
99 : bvadd(5, 98) : BV:32
100 : bvadd(1, 99) : BV:32
101 : bvadd(100, 31) : BV:32
=src-addr-to-ml mapping #50 src-addr done
=src-addr-to-ml mapping #50 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #51 src-addr
=src-addr-to-ml mapping #51 src-addr path
=src-addr-to-ml mapping #51 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #51 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : bvadd(9, 2) : BV:32
=src-addr-to-ml mapping #51 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : bvadd(9, 2) : BV:32
=src-addr-to-ml mapping #51 src-addr done
=src-addr-to-ml mapping #51 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #52 src-addr
=src-addr-to-ml mapping #52 src-addr path
=src-addr-to-ml mapping #52 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #52 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #52 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #52 src-addr done
=src-addr-to-ml mapping #52 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #53 src-addr
=src-addr-to-ml mapping #53 src-addr path
=src-addr-to-ml mapping #53 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #53 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 2 { 0x2 +1.23e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #53 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 2 { 0x2 +1.23e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #53 src-addr done
=src-addr-to-ml mapping #53 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #54 src-addr
=src-addr-to-ml mapping #54 src-addr path
=src-addr-to-ml mapping #54 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #54 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 3 { 0x3 +1.35e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #54 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 3 { 0x3 +1.35e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #54 src-addr done
=src-addr-to-ml mapping #54 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #55 src-addr
=src-addr-to-ml mapping #55 src-addr path
=src-addr-to-ml mapping #55 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #55 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 4 { 0x4 +1.47e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #55 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 4 { 0x4 +1.47e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #55 src-addr done
=src-addr-to-ml mapping #55 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #56 src-addr
=src-addr-to-ml mapping #56 src-addr path
=src-addr-to-ml mapping #56 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #56 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 5 { 0x5 +1.59e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #56 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 5 { 0x5 +1.59e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #56 src-addr done
=src-addr-to-ml mapping #56 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #57 src-addr
=src-addr-to-ml mapping #57 src-addr path
=src-addr-to-ml mapping #57 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #57 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 6 { 0x6 +1.71e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #57 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 6 { 0x6 +1.71e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #57 src-addr done
=src-addr-to-ml mapping #57 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #58 src-addr
=src-addr-to-ml mapping #58 src-addr path
=src-addr-to-ml mapping #58 src-addr.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))
=src-addr-to-ml mapping #58 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 7 { 0x7 +1.83e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #58 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 16 { 0x10 +1.190e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(2, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(1, 8) : BV:32
10 : 7 { 0x7 +1.83e129 } : BV:32
11 : bvadd(9, 10) : BV:32
=src-addr-to-ml mapping #58 src-addr done
=src-addr-to-ml mapping #58 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%1%d=/
=src-addr-to-ml mapping #59 src-addr
=src-addr-to-ml mapping #59 src-addr path
=src-addr-to-ml mapping #59 src-addr.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))))))))
=src-addr-to-ml mapping #59 src-addr expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src-addr-to-ml mapping #59 src-addr wp_expr
1 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=src-addr-to-ml mapping #59 src-addr done
=src-addr-to-ml mapping #59 memlabel: memlabel-mem--local./*___y___main__x__=Lentry%2%d=/
=dst-to-src-submap done
=dst-to-src submaps done
=cg-edge-contains-repeated-src-tfg-edge at edge-id L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
0
=cg-edge-contains-repeated-src-tfg-edge at edge-id Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
0
=cg-edge-contains-repeated-src-tfg-edge-map done
=cg.assumes_around_edge
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #0.pred
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140629 : memlabel_is_absent(140271, 140335) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #1.pred
=Comment
precond-src-mem.alloc-memlabel-is-absent
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140630 : memlabel_is_absent(140271, 140326) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #2.pred
=Comment
undef-behavioursome.edge.L0%0%d=>L0%1%spver
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #3.pred
=Comment
precond-memmask-memlabel-mem--rodata
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140291 : memlabel-mem--rodata : MEMLABEL
144552 : memmasks_are_equal(140270, 140271, 142112, 142113, 140291) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #4.pred
=Comment
precond-memmask-memlabel-mem--symbol.2.0
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
144553 : memmasks_are_equal(140270, 140271, 142112, 142113, 140284) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #5.pred
=Comment
precond-memmask-memlabel-mem--symbol.3.0
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140286 : memlabel-mem--symbol.3.0 : MEMLABEL
144554 : memmasks_are_equal(140270, 140271, 142112, 142113, 140286) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #6.pred
=Comment
precond-memmask-memlabel-mem--heap
=LhsExpr
140270 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142112 : input.dst.mem : ARRAY[BV:32 -> BV:8]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140288 : memlabel-mem--heap : MEMLABEL
144555 : memmasks_are_equal(140270, 140271, 142112, 142113, 140288) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #7.pred
=Comment
precond-mlasserts
=LhsExpr
144358 : input.memlabel-mem--rodata_begin : BV:32
144359 : input.memlabel-mem--rodata_end : BV:32
144360 : bvule(144358, 144359) : BOOL
144361 : rodata.size : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
144362 : bvadd(144361, 140470) : BV:32
144363 : bvadd(144358, 144362) : BV:32
144364 : eq(144359, 144363) : BOOL
144365 : and(144360, 144364) : BOOL
140292 : 0 { 0x0 +1.0e129 } : BV:32
144366 : bvugt(144361, 140292) : BOOL
144367 : and(144365, 144366) : BOOL
144368 : input.memlabel-mem--symbol.2.0_begin : BV:32
144369 : input.memlabel-mem--symbol.2.0_end : BV:32
144370 : bvule(144368, 144369) : BOOL
144371 : and(144367, 144370) : BOOL
140307 : 4 { 0x4 +1.47e129 } : BV:32
144372 : bvadd(140307, 140470) : BV:32
144373 : bvadd(144368, 144372) : BV:32
144374 : eq(144369, 144373) : BOOL
144375 : and(144371, 144374) : BOOL
144376 : input.memlabel-mem--symbol.1.1_begin : BV:32
144377 : input.memlabel-mem--symbol.1.1_end : BV:32
144378 : bvule(144376, 144377) : BOOL
144379 : and(144375, 144378) : BOOL
140334 : 8 { 0x8 +1.95e129 } : BV:32
144380 : bvadd(140334, 140470) : BV:32
144381 : bvadd(144376, 144380) : BV:32
144382 : eq(144377, 144381) : BOOL
144383 : and(144379, 144382) : BOOL
144384 : input.memlabel-mem--symbol.3.0_begin : BV:32
144385 : input.memlabel-mem--symbol.3.0_end : BV:32
144386 : bvule(144384, 144385) : BOOL
144387 : and(144383, 144386) : BOOL
144388 : 32 { 0x20 +1.381e129 } : BV:32
144389 : bvadd(144388, 140470) : BV:32
144390 : bvadd(144384, 144389) : BV:32
144391 : eq(144385, 144390) : BOOL
144392 : and(144387, 144391) : BOOL
144393 : input.memlabel-mem--esp_begin : BV:32
144394 : input.memlabel-mem--esp_end : BV:32
144395 : bvule(144393, 144394) : BOOL
144396 : and(144392, 144395) : BOOL
144397 : stack.size : BV:32
144398 : bvadd(144397, 140470) : BV:32
144399 : bvadd(144393, 144398) : BV:32
144400 : eq(144394, 144399) : BOOL
144401 : and(144396, 144400) : BOOL
144402 : bvugt(144397, 140292) : BOOL
144403 : and(144401, 144402) : BOOL
144404 : bvuge(144358, 144368) : BOOL
144405 : bvule(144358, 144369) : BOOL
144406 : and(144404, 144405) : BOOL
144408 : bvuge(144359, 144368) : BOOL
144409 : bvule(144359, 144369) : BOOL
144410 : and(144408, 144409) : BOOL
144411 : not(144410) : BOOL
144412 : andnot1(144406, 144411) : BOOL
144407 : bvuge(144368, 144358) : BOOL
144413 : bvule(144368, 144359) : BOOL
144414 : and(144407, 144413) : BOOL
144416 : bvuge(144369, 144358) : BOOL
144417 : bvule(144369, 144359) : BOOL
144418 : and(144416, 144417) : BOOL
144419 : not(144418) : BOOL
144420 : andnot1(144414, 144419) : BOOL
144415 : and(144412, 144420) : BOOL
144421 : bvuge(144358, 144384) : BOOL
144422 : bvule(144358, 144385) : BOOL
144423 : and(144421, 144422) : BOOL
144425 : bvuge(144359, 144384) : BOOL
144426 : bvule(144359, 144385) : BOOL
144427 : and(144425, 144426) : BOOL
144428 : not(144427) : BOOL
144429 : andnot1(144423, 144428) : BOOL
144432 : and(144415, 144429) : BOOL
144424 : bvuge(144384, 144358) : BOOL
144430 : bvule(144384, 144359) : BOOL
144431 : and(144424, 144430) : BOOL
144433 : bvuge(144385, 144358) : BOOL
144434 : bvule(144385, 144359) : BOOL
144435 : and(144433, 144434) : BOOL
144436 : not(144435) : BOOL
144437 : andnot1(144431, 144436) : BOOL
144438 : and(144432, 144437) : BOOL
144439 : bvuge(144358, 144393) : BOOL
144440 : bvule(144358, 144394) : BOOL
144441 : and(144439, 144440) : BOOL
144443 : bvuge(144359, 144393) : BOOL
144444 : bvule(144359, 144394) : BOOL
144445 : and(144443, 144444) : BOOL
144446 : not(144445) : BOOL
144447 : andnot1(144441, 144446) : BOOL
144450 : and(144438, 144447) : BOOL
144442 : bvuge(144393, 144358) : BOOL
144448 : bvule(144393, 144359) : BOOL
144449 : and(144442, 144448) : BOOL
144451 : bvuge(144394, 144358) : BOOL
144452 : bvule(144394, 144359) : BOOL
144453 : and(144451, 144452) : BOOL
144454 : not(144453) : BOOL
144455 : andnot1(144449, 144454) : BOOL
144456 : and(144450, 144455) : BOOL
144475 : bvuge(144368, 144393) : BOOL
144476 : bvule(144368, 144394) : BOOL
144477 : and(144475, 144476) : BOOL
144479 : bvuge(144369, 144393) : BOOL
144480 : bvule(144369, 144394) : BOOL
144481 : and(144479, 144480) : BOOL
144482 : not(144481) : BOOL
144483 : andnot1(144477, 144482) : BOOL
144556 : and(144456, 144483) : BOOL
144478 : bvuge(144393, 144368) : BOOL
144484 : bvule(144393, 144369) : BOOL
144485 : and(144478, 144484) : BOOL
144487 : bvuge(144394, 144368) : BOOL
144488 : bvule(144394, 144369) : BOOL
144489 : and(144487, 144488) : BOOL
144490 : not(144489) : BOOL
144491 : andnot1(144485, 144490) : BOOL
144557 : and(144556, 144491) : BOOL
144493 : bvuge(144384, 144393) : BOOL
144494 : bvule(144384, 144394) : BOOL
144495 : and(144493, 144494) : BOOL
144497 : bvuge(144385, 144393) : BOOL
144498 : bvule(144385, 144394) : BOOL
144499 : and(144497, 144498) : BOOL
144500 : not(144499) : BOOL
144501 : andnot1(144495, 144500) : BOOL
144558 : and(144557, 144501) : BOOL
144496 : bvuge(144393, 144384) : BOOL
144502 : bvule(144393, 144385) : BOOL
144503 : and(144496, 144502) : BOOL
144505 : bvuge(144394, 144384) : BOOL
144506 : bvule(144394, 144385) : BOOL
144507 : and(144505, 144506) : BOOL
144508 : not(144507) : BOOL
144509 : andnot1(144503, 144508) : BOOL
144584 : and(144558, 144509) : BOOL
144511 : bvuge(144376, 144358) : BOOL
144512 : bvule(144377, 144359) : BOOL
144513 : and(144511, 144512) : BOOL
144586 : and(144584, 144513) : BOOL
144588 : and(144403, 144586) : BOOL
259 : symbol.2 : BV:32
140304 : 3 { 0x3 +1.35e129 } : BV:32
144516 : bvand(259, 140304) : BV:32
144517 : eq(144516, 140292) : BOOL
258 : symbol.1 : BV:32
144518 : bvand(258, 140304) : BV:32
144519 : eq(144518, 140292) : BOOL
144520 : and(144517, 144519) : BOOL
144590 : and(144588, 144520) : BOOL
144522 : eq(259, 144368) : BOOL
144523 : eq(258, 144376) : BOOL
144524 : and(144522, 144523) : BOOL
260 : symbol.3 : BV:32
144525 : eq(260, 144384) : BOOL
144526 : and(144524, 144525) : BOOL
144591 : and(144590, 144526) : BOOL
140269 : input.dst.sp=L0%0%d=sp : BV:32
144528 : bvule(144393, 140269) : BOOL
143102 : bvadd(140269, 140304) : BV:32
144529 : bvule(140269, 143102) : BOOL
144530 : bvule(143102, 144394) : BOOL
144531 : and(144529, 144530) : BOOL
143891 : bvadd(140269, 140307) : BV:32
140474 : 16 { 0x10 +1.0e1025 } : INT
144532 : islangaligned(143891, 140474) : BOOL
144533 : and(144531, 144532) : BOOL
144534 : and(144528, 144533) : BOOL
144592 : and(144591, 144534) : BOOL
144536 : 4294963200 { 0xfffff000 -4096 -1.99951171e128 } : BV:32
144538 : bvand(144393, 144536) : BV:32
144539 : eq(144538, 144393) : BOOL
140298 : 1 { 0x1 +1.11e129 } : BV:32
144537 : bvadd(144394, 140298) : BV:32
144540 : bvand(144537, 144536) : BV:32
144541 : eq(144540, 144537) : BOOL
144542 : and(144539, 144541) : BOOL
144593 : and(144592, 144542) : BOOL
144544 : bvugt(144393, 140292) : BOOL
144594 : and(144593, 144544) : BOOL
65794 : dst_symbol_addr.1 : BV:32
144546 : eq(258, 65794) : BOOL
65795 : dst_symbol_addr.2 : BV:32
144547 : eq(259, 65795) : BOOL
144548 : and(144546, 144547) : BOOL
65796 : dst_symbol_addr.3 : BV:32
144549 : eq(260, 65796) : BOOL
144550 : and(144548, 144549) : BOOL
144595 : and(144594, 144550) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #8.pred
=Comment
precond-mem.alloc
=LhsExpr
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
144596 : eq(140271, 142113) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #9.pred
=Comment
undef-behavioursome.edge.L0%2%d=>L0%2%spver
=LhsExpr
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
146274 : region_agrees_with_memlabel(142113, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
146275 : and(146274, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #10.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.ec
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 assume #11.pred
=Comment
cg-edge-assume
=LhsExpr
140324 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
140271 : input.src.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140323 : 16 { 0x10 +1.190e129 } : BV:32
140827 : apply(140324, 140321, 140271, 140326, 140323) : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
146107 : eq(140827, 142369) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%2%allocaI3 done
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.ec
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI3_L0%2%allocaI3=>Lentry%1%allocaI4_L0%2%allocaI4 done
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.ec
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 assume #3.pred
=Comment
cg-edge-assume
=LhsExpr
140324 : alloca_ptr : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
140321 : input.src.local_alloc_count.=L0%0%d= : COUNT
141268 : increment_count(140321) : COUNT
140968 : input.src.llvm-mem.alloc.Lentry%1%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140334 : 8 { 0x8 +1.95e129 } : BV:32
141269 : apply(140324, 141268, 140968, 140335, 140334) : BV:32
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
146206 : eq(141269, 145234) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%1%allocaI4_L0%2%allocaI4=>Lentry%2%allocaI3_L0%2%allocaI1 done
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #0.pred
=Comment
undef-behavioursome
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #3.pred
=Comment
cg-edge-assume
=LhsExpr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
146253 : islangaligned(145234, 140450) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #4.pred
=Comment
cg-edge-assume
=LhsExpr
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140317 : 7 { 0x7 +1.83e129 } : BV:32
145685 : bvadd(140317, 145234) : BV:32
146257 : bvule(145234, 145685) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #5.pred
=Comment
cg-edge-assume
=LhsExpr
140292 : 0 { 0x0 +1.0e129 } : BV:32
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
146251 : eq(140292, 145234) : BOOL
146252 : not(146251) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.ec
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 assume #6.pred
=Comment
cg-edge-assume
=LhsExpr
145258 : input.dst.mem.alloc.L0%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
145234 : input.dst.local./*___y___main__x__=Lentry%2%d=/ : BV:32
140334 : 8 { 0x8 +1.95e129 } : BV:32
140288 : memlabel-mem--heap : MEMLABEL
146248 : region_agrees_with_memlabel(145258, 145234, 140334, 140288) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 done
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #0.pred
=Comment
undef-behavioursome.edge.L1%1%d=>L3%1%spver
=LhsExpr
140320 : 1 { 0x1 } : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #1.pred
=Comment
undef-behavioursome
=LhsExpr
142038 : input.dst.exreg.0.4 : BV:32
140269 : input.dst.sp=L0%0%d=sp : BV:32
140470 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
142413 : bvmul(140269, 140470) : BV:32
142414 : bvadd(142038, 142413) : BV:32
142135 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
142415 : bvule(142414, 142135) : BOOL
142139 : bvule(140269, 142038) : BOOL
142113 : input.dst.mem.alloc : ARRAY[BV:32 -> MEMLABEL]
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
142416 : region_agrees_with_memlabel(142113, 140269, 142414, 142137) : BOOL
142417 : and(142139, 142416) : BOOL
142418 : implies(142415, 142417) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #2.pred
=Comment
undef-behavioursome
=LhsExpr
142906 : input.dst.mem.alloc.L0%2%d : ARRAY[BV:32 -> MEMLABEL]
140269 : input.dst.sp=L0%0%d=sp : BV:32
142329 : 4294967280 { 0xfffffff0 -16 -1.99999809e128 } : BV:32
142369 : bvadd(140269, 142329) : BV:32
140323 : 16 { 0x10 +1.190e129 } : BV:32
142137 : memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp : MEMLABEL
143500 : region_agrees_with_memlabel(142906, 142369, 140323, 142137) : BOOL
143502 : bvule(142369, 140269) : BOOL
143504 : and(143500, 143502) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.ec.graph_edge_composition
(epsilon)
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #3.pred
=Comment
merged-predicate
=LhsExpr
258 : symbol.1 : BV:32
140294 : 1 { 0x1 +1.0e1025 } : INT
140799 : islangaligned(258, 140294) : BOOL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
141059 : islangaligned(140958, 140294) : BOOL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
141060 : islangaligned(140969, 140294) : BOOL
141472 : and(140799, 141059, 141060) : BOOL
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
146336 : and(141472, 140452) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #4.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
140452 : islangaligned(259, 140450) : BOOL
140320 : 1 { 0x1 } : BOOL
169619 : eq(140452, 140320) : BOOL
169620 : implies(146337, 169619) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159549 : isgepoffset(159548, 159547) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
159550 : bvsign_ext(141525, 140464) : BV:64
159551 : bvmul(140803, 159550) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
159552 : bvextract(159551, 140468, 140464) : BV:32
159553 : eq(140292, 159552) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
159554 : isindexforsize(159553, 140487) : BOOL
159555 : islangaligned(159548, 140294) : BOOL
159556 : and(140452, 141059, 141060, 141807, 159549, 159554, 159555) : BOOL
159557 : and(159556, 140452) : BOOL
159559 : eq(159557, 140320) : BOOL
159560 : implies(146337, 159559) : BOOL
169621 : and(169620, 159560) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #5.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
140452 : islangaligned(259, 140450) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159549 : isgepoffset(159548, 159547) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
159550 : bvsign_ext(141525, 140464) : BV:64
159551 : bvmul(140803, 159550) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
159552 : bvextract(159551, 140468, 140464) : BV:32
159553 : eq(140292, 159552) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
159554 : isindexforsize(159553, 140487) : BOOL
159555 : islangaligned(159548, 140294) : BOOL
159556 : and(140452, 141059, 141060, 141807, 159549, 159554, 159555) : BOOL
159557 : and(159556, 140452) : BOOL
140320 : 1 { 0x1 } : BOOL
159559 : eq(159557, 140320) : BOOL
159560 : implies(146337, 159559) : BOOL
169619 : eq(140452, 140320) : BOOL
169620 : implies(146337, 169619) : BOOL
169622 : and(159560, 169620) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d)))))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #6.pred
=Comment
fold-conjunct
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169627 : bvmul(140334, 159675) : BV:32
169628 : bvadd(140958, 169627) : BV:32
170413 : select(159674, 140983, 140335, 140969, 140294, 140295) : BV:8
170414 : store(159674, 140983, 140326, 169628, 170413, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170415 : bvadd(140298, 140958, 169627) : BV:32
170416 : select(159674, 140983, 140335, 141339, 140294, 140295) : BV:8
170417 : store(170414, 140983, 140326, 170415, 170416, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170418 : bvadd(140301, 140958, 169627) : BV:32
170558 : select(159674, 140983, 140335, 141341, 140294, 140295) : BV:8
170559 : store(170417, 140983, 140326, 170418, 170558, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170560 : bvadd(140304, 140958, 169627) : BV:32
170561 : select(159674, 140983, 140335, 141343, 140294, 140295) : BV:8
170562 : store(170559, 140983, 140326, 170560, 170561, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170563 : bvadd(140307, 140958, 169627) : BV:32
170564 : select(159674, 140983, 140335, 141345, 140294, 140295) : BV:8
170594 : store(170562, 140983, 140326, 170563, 170564, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170595 : bvadd(140311, 140958, 169627) : BV:32
170596 : select(159674, 140983, 140335, 141347, 140294, 140295) : BV:8
170597 : store(170594, 140983, 140326, 170595, 170596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170598 : bvadd(140314, 140958, 169627) : BV:32
170599 : select(159674, 140983, 140335, 141349, 140294, 140295) : BV:8
170600 : store(170597, 140983, 140326, 170598, 170599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170638 : bvadd(140317, 140958, 169627) : BV:32
170639 : select(159674, 140983, 140335, 141290, 140294, 140295) : BV:8
170640 : store(170600, 140983, 140326, 170638, 170639, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170641 : select(170640, 140983, 140326, 140958, 140294, 140295) : BV:8
170642 : store(170640, 140983, 140335, 140969, 170641, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170678 : select(170640, 140983, 140326, 141318, 140294, 140295) : BV:8
170679 : store(170642, 140983, 140335, 141339, 170678, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170680 : select(170640, 140983, 140326, 141319, 140294, 140295) : BV:8
170681 : store(170679, 140983, 140335, 141341, 170680, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170682 : select(170640, 140983, 140326, 141320, 140294, 140295) : BV:8
170720 : store(170681, 140983, 140335, 141343, 170682, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170721 : select(170640, 140983, 140326, 141321, 140294, 140295) : BV:8
170722 : store(170720, 140983, 140335, 141345, 170721, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170723 : select(170640, 140983, 140326, 141322, 140294, 140295) : BV:8
170724 : store(170722, 140983, 140335, 141347, 170723, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170761 : select(170640, 140983, 140326, 141323, 140294, 140295) : BV:8
170762 : store(170724, 140983, 140335, 141349, 170761, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170763 : select(170640, 140983, 140326, 141324, 140294, 140295) : BV:8
170764 : store(170762, 140983, 140335, 141290, 170763, 140294, 140295) : ARRAY[BV:32 -> BV:8]
170765 : bvadd(140298, 159675) : BV:32
170766 : store(170764, 140983, 140284, 259, 170765, 140450, 140295) : ARRAY[BV:32 -> BV:8]
170767 : select(170766, 140983, 140284, 259, 140450, 140295) : BV:32
170768 : bvslt(170767, 140301) : BOOL
170769 : andnot2(169616, 170768) : BOOL
170770 : and(146337, 170769) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
169640 : implies(170770, 146371) : BOOL
169641 : and(140452, 169640) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d)))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #7.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169617 : andnot2(146337, 169616) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
169615 : implies(169617, 146371) : BOOL
140452 : islangaligned(259, 140450) : BOOL
169618 : and(169615, 140452) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.ec.graph_edge_composition
(((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.end%1%d))+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry))))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #8.pred
=Comment
fold-conjunct
=LhsExpr
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
259 : symbol.2 : BV:32
140292 : 0 { 0x0 +1.0e129 } : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
146338 : not(146337) : BOOL
142012 : isgepoffset(140969, 140292) : BOOL
142017 : isgepoffset(141345, 140307) : BOOL
142021 : islangaligned(141345, 140450) : BOOL
142026 : and(142012, 142017, 142021) : BOOL
140320 : 1 { 0x1 } : BOOL
146371 : eq(142026, 140320) : BOOL
159546 : implies(146338, 146371) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169624 : and(146337, 169616) : BOOL
140452 : islangaligned(259, 140450) : BOOL
169619 : eq(140452, 140320) : BOOL
169638 : implies(169624, 169619) : BOOL
169639 : and(159546, 169638) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.ec
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.ec.graph_edge_composition
((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)+((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d)))))
cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d assume #9.pred
=Comment
fold-conjunct
=LhsExpr
259 : symbol.2 : BV:32
140450 : 4 { 0x4 +1.0e1025 } : INT
140452 : islangaligned(259, 140450) : BOOL
140999 : input.src.llvm-mem.Lentry%2%allocaI4 : ARRAY[BV:32 -> BV:8]
140983 : input.src.llvm-mem.alloc.Lentry%2%allocaI4 : ARRAY[BV:32 -> MEMLABEL]
140326 : memlabel-mem--local./*___y___main__x__=Lentry%1%d=/ : MEMLABEL
140958 : input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3 : BV:32
140297 : 0 { 0x0 } : BV:8
140294 : 1 { 0x1 +1.0e1025 } : INT
140295 : 0 { 0x0 } : BOOL
141384 : store(140999, 140983, 140326, 140958, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140298 : 1 { 0x1 +1.11e129 } : BV:32
141318 : bvadd(140298, 140958) : BV:32
141387 : store(141384, 140983, 140326, 141318, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140301 : 2 { 0x2 +1.23e129 } : BV:32
141319 : bvadd(140301, 140958) : BV:32
141389 : store(141387, 140983, 140326, 141319, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140304 : 3 { 0x3 +1.35e129 } : BV:32
141320 : bvadd(140304, 140958) : BV:32
141391 : store(141389, 140983, 140326, 141320, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140307 : 4 { 0x4 +1.47e129 } : BV:32
141321 : bvadd(140307, 140958) : BV:32
141393 : store(141391, 140983, 140326, 141321, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140311 : 5 { 0x5 +1.59e129 } : BV:32
141322 : bvadd(140311, 140958) : BV:32
141395 : store(141393, 140983, 140326, 141322, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140314 : 6 { 0x6 +1.71e129 } : BV:32
141323 : bvadd(140314, 140958) : BV:32
141397 : store(141395, 140983, 140326, 141323, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140317 : 7 { 0x7 +1.83e129 } : BV:32
141324 : bvadd(140317, 140958) : BV:32
141399 : store(141397, 140983, 140326, 141324, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140334 : 8 { 0x8 +1.95e129 } : BV:32
141325 : bvadd(140334, 140958) : BV:32
141401 : store(141399, 140983, 140326, 141325, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140371 : 9 { 0x9 +1.107e129 } : BV:32
141326 : bvadd(140371, 140958) : BV:32
141403 : store(141401, 140983, 140326, 141326, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140375 : 10 { 0xa +1.119e129 } : BV:32
141328 : bvadd(140375, 140958) : BV:32
141405 : store(141403, 140983, 140326, 141328, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140379 : 11 { 0xb +1.131e129 } : BV:32
141330 : bvadd(140379, 140958) : BV:32
141407 : store(141405, 140983, 140326, 141330, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140383 : 12 { 0xc +1.143e129 } : BV:32
141332 : bvadd(140383, 140958) : BV:32
141409 : store(141407, 140983, 140326, 141332, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140387 : 13 { 0xd +1.154e129 } : BV:32
141334 : bvadd(140387, 140958) : BV:32
141411 : store(141409, 140983, 140326, 141334, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140391 : 14 { 0xe +1.166e129 } : BV:32
141336 : bvadd(140391, 140958) : BV:32
141413 : store(141411, 140983, 140326, 141336, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140395 : 15 { 0xf +1.178e129 } : BV:32
141237 : bvadd(140395, 140958) : BV:32
141415 : store(141413, 140983, 140326, 141237, 140297, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140335 : memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ : MEMLABEL
140969 : input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3 : BV:32
140291 : memlabel-mem--rodata : MEMLABEL
258 : symbol.1 : BV:32
141418 : select(140999, 140983, 140291, 258, 140294, 140295) : BV:8
141420 : store(141415, 140983, 140335, 140969, 141418, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141339 : bvadd(140298, 140969) : BV:32
140299 : bvadd(258, 140298) : BV:32
141423 : select(140999, 140983, 140291, 140299, 140294, 140295) : BV:8
141425 : store(141420, 140983, 140335, 141339, 141423, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141341 : bvadd(140301, 140969) : BV:32
140302 : bvadd(258, 140301) : BV:32
141428 : select(140999, 140983, 140291, 140302, 140294, 140295) : BV:8
141430 : store(141425, 140983, 140335, 141341, 141428, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141343 : bvadd(140304, 140969) : BV:32
140305 : bvadd(258, 140304) : BV:32
141433 : select(140999, 140983, 140291, 140305, 140294, 140295) : BV:8
141435 : store(141430, 140983, 140335, 141343, 141433, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141345 : bvadd(140307, 140969) : BV:32
140308 : bvadd(258, 140307) : BV:32
141438 : select(140999, 140983, 140291, 140308, 140294, 140295) : BV:8
141440 : store(141435, 140983, 140335, 141345, 141438, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141347 : bvadd(140311, 140969) : BV:32
140312 : bvadd(258, 140311) : BV:32
141443 : select(140999, 140983, 140291, 140312, 140294, 140295) : BV:8
141445 : store(141440, 140983, 140335, 141347, 141443, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141349 : bvadd(140314, 140969) : BV:32
140315 : bvadd(258, 140314) : BV:32
141448 : select(140999, 140983, 140291, 140315, 140294, 140295) : BV:8
141450 : store(141445, 140983, 140335, 141349, 141448, 140294, 140295) : ARRAY[BV:32 -> BV:8]
141290 : bvadd(140317, 140969) : BV:32
140318 : bvadd(258, 140317) : BV:32
141453 : select(140999, 140983, 140291, 140318, 140294, 140295) : BV:8
141455 : store(141450, 140983, 140335, 141290, 141453, 140294, 140295) : ARRAY[BV:32 -> BV:8]
140284 : memlabel-mem--symbol.2.0 : MEMLABEL
140292 : 0 { 0x0 +1.0e129 } : BV:32
141457 : store(141455, 140983, 140284, 259, 140292, 140450, 140295) : ARRAY[BV:32 -> BV:8]
141525 : select(141457, 140983, 140284, 259, 140450, 140295) : BV:32
146337 : bvslt(141525, 140301) : BOOL
159547 : bvmul(140334, 141525) : BV:32
159548 : bvadd(140958, 159547) : BV:32
159578 : select(141457, 140983, 140335, 140969, 140294, 140295) : BV:8
159579 : store(141457, 140983, 140326, 159548, 159578, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159580 : bvadd(140298, 140958, 159547) : BV:32
159581 : select(141457, 140983, 140335, 141339, 140294, 140295) : BV:8
159582 : store(159579, 140983, 140326, 159580, 159581, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159583 : bvadd(140301, 140958, 159547) : BV:32
159584 : select(141457, 140983, 140335, 141341, 140294, 140295) : BV:8
159585 : store(159582, 140983, 140326, 159583, 159584, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159586 : bvadd(140304, 140958, 159547) : BV:32
159587 : select(141457, 140983, 140335, 141343, 140294, 140295) : BV:8
159588 : store(159585, 140983, 140326, 159586, 159587, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159589 : bvadd(140307, 140958, 159547) : BV:32
159590 : select(141457, 140983, 140335, 141345, 140294, 140295) : BV:8
159591 : store(159588, 140983, 140326, 159589, 159590, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159592 : bvadd(140311, 140958, 159547) : BV:32
159593 : select(141457, 140983, 140335, 141347, 140294, 140295) : BV:8
159594 : store(159591, 140983, 140326, 159592, 159593, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159595 : bvadd(140314, 140958, 159547) : BV:32
159596 : select(141457, 140983, 140335, 141349, 140294, 140295) : BV:8
159597 : store(159594, 140983, 140326, 159595, 159596, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159598 : bvadd(140317, 140958, 159547) : BV:32
159599 : select(141457, 140983, 140335, 141290, 140294, 140295) : BV:8
159600 : store(159597, 140983, 140326, 159598, 159599, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159658 : select(159600, 140983, 140326, 140958, 140294, 140295) : BV:8
159659 : store(159600, 140983, 140335, 140969, 159658, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159660 : select(159600, 140983, 140326, 141318, 140294, 140295) : BV:8
159661 : store(159659, 140983, 140335, 141339, 159660, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159662 : select(159600, 140983, 140326, 141319, 140294, 140295) : BV:8
159663 : store(159661, 140983, 140335, 141341, 159662, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159664 : select(159600, 140983, 140326, 141320, 140294, 140295) : BV:8
159665 : store(159663, 140983, 140335, 141343, 159664, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159666 : select(159600, 140983, 140326, 141321, 140294, 140295) : BV:8
159667 : store(159665, 140983, 140335, 141345, 159666, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159668 : select(159600, 140983, 140326, 141322, 140294, 140295) : BV:8
159669 : store(159667, 140983, 140335, 141347, 159668, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159670 : select(159600, 140983, 140326, 141323, 140294, 140295) : BV:8
159671 : store(159669, 140983, 140335, 141349, 159670, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159672 : select(159600, 140983, 140326, 141324, 140294, 140295) : BV:8
159673 : store(159671, 140983, 140335, 141290, 159672, 140294, 140295) : ARRAY[BV:32 -> BV:8]
159573 : bvadd(140298, 141525) : BV:32
159674 : store(159673, 140983, 140284, 259, 159573, 140450, 140295) : ARRAY[BV:32 -> BV:8]
159675 : select(159674, 140983, 140284, 259, 140450, 140295) : BV:32
169616 : bvslt(159675, 140301) : BOOL
169624 : and(146337, 169616) : BOOL
141059 : islangaligned(140958, 140294) : BOOL
141060 : islangaligned(140969, 140294) : BOOL
141807 : isgepoffset(140958, 140292) : BOOL
169627 : bvmul(140334, 159675) : BV:32
169628 : bvadd(140958, 169627) : BV:32
169629 : isgepoffset(169628, 169627) : BOOL
140803 : 8 { 0x8 +1.0e1025 } : BV:64
140464 : 32 { 0x20 +1.0e1025 } : INT
169630 : bvsign_ext(159675, 140464) : BV:64
169631 : bvmul(140803, 169630) : BV:64
140468 : 63 { 0x3f +1.0e1025 } : INT
169632 : bvextract(169631, 140468, 140464) : BV:32
169633 : eq(140292, 169632) : BOOL
140487 : 8 { 0x8 +1.0e1025 } : INT
169634 : isindexforsize(169633, 140487) : BOOL
169635 : islangaligned(169628, 140294) : BOOL
169636 : and(140452, 141059, 141060, 141807, 169629, 169634, 169635) : BOOL
169637 : and(169636, 140452) : BOOL
140320 : 1 { 0x1 } : BOOL
169623 : eq(169637, 140320) : BOOL
169625 : implies(169624, 169623) : BOOL
169626 : and(140452, 169625) : BOOL
=RhsExpr
140320 : 1 { 0x1 } : BOOL
=predicate done

cg.assumes_around_edge at Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d done
cg.assumes_around_edge done
=corr_graph_done
=bv_rank_map
=bv_rank at L0%0%d_L0%0%d
m_dst_rank: 0, m_src_rank: 0
=bv_rank at Lentry%1%allocaI3_L0%2%allocaI3
m_dst_rank: 1, m_src_rank: 0
=bv_rank at Lentry%1%allocaI4_L0%2%allocaI4
m_dst_rank: 1, m_src_rank: 0
=bv_rank at Lentry%2%allocaI3_L0%2%allocaI1
m_dst_rank: 0, m_src_rank: 0
=bv_rank at Lentry%2%allocaI4_L0%2%allocaI2
m_dst_rank: 0, m_src_rank: 0
=bv_rank at E0%0%d_E0%0%d
m_dst_rank: 0, m_src_rank: 0
=cg_with_rank done
=cg_with_backtracker done
=asm filename
emi9f.fixed.s
=cg_with_asm_annotation done
