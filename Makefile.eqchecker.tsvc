# rules for building all compilers executables

# GCC

%.gcc.eqchecker.O0.i386.o: %.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
tsvc_helper.gcc.eqchecker.O0.i386.o: tsvc_helper.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
%.gcc.eqchecker.O0.i386: %.gcc.eqchecker.O0.i386.o tsvc_helper.gcc.eqchecker.O0.i386.o
	$(GCC_I386) $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O0 $^ -o $@ $(LIBS)

%.gcc.eqchecker.O2.i386.o: %.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
tsvc_helper.gcc.eqchecker.O2.i386.o: tsvc_helper.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
%.gcc.eqchecker.O2.i386: %.gcc.eqchecker.O2.i386.o tsvc_helper.gcc.eqchecker.O2.i386.o
	$(GCC_I386) $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O2 $^ -o $@ $(LIBS)

%.gcc.eqchecker.O3.i386.o: %.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
tsvc_helper.gcc.eqchecker.O3.i386.o: tsvc_helper.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
%.gcc.eqchecker.O3.i386: %.gcc.eqchecker.O3.i386.o tsvc_helper.gcc.eqchecker.O3.i386.o
	$(GCC_I386) $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O3 $^ -o $@ $(LIBS)

# CLANG

%.clang.eqchecker.O0.i386.o: %.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
tsvc_helper.clang.eqchecker.O0.i386.o: tsvc_helper.c
	$(GCC_I386) -c $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
%.clang.eqchecker.O0.i386: %.clang.eqchecker.O0.i386.o tsvc_helper.clang.eqchecker.O0.i386.o
	$(GCC_I386) $(CFLAGS) $(GCC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O0 $^ -o $@ $(LIBS)

%.clang.eqchecker.O2.i386.o: %.c
	$(CLANG_I386) -c $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
tsvc_helper.clang.eqchecker.O2.i386.o: tsvc_helper.c
	$(CLANG_I386) -c $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
%.clang.eqchecker.O2.i386: %.clang.eqchecker.O2.i386.o tsvc_helper.clang.eqchecker.O2.i386.o
	$(CLANG_I386) $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O2 $^ -o $@ $(LIBS)

%.clang.eqchecker.O3.i386.o: %.c
	$(CLANG_I386) -c $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
tsvc_helper.clang.eqchecker.O3.i386.o: tsvc_helper.c
	$(CLANG_I386) -c $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
%.clang.eqchecker.O3.i386: %.clang.eqchecker.O3.i386.o tsvc_helper.clang.eqchecker.O3.i386.o
	$(CLANG_I386) $(CFLAGS) $(CLANG_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O3 $^ -o $@ $(LIBS)

# ICC

%.icc.eqchecker.O0.i386.o: %.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
tsvc_helper.icc.eqchecker.O0.i386.o: tsvc_helper.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O0 $< -o $@
%.icc.eqchecker.O0.i386: %.icc.eqchecker.O0.i386.o tsvc_helper.icc.eqchecker.O0.i386.o
	$(ICC_I386) $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O0 $^ -o $@ $(LIBS)

%.icc.eqchecker.O2.i386.o: %.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
tsvc_helper.icc.eqchecker.O2.i386.o: tsvc_helper.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O2 $< -o $@
%.icc.eqchecker.O2.i386: %.icc.eqchecker.O2.i386.o tsvc_helper.icc.eqchecker.O2.i386.o
	$(ICC_I386) $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O2 $^ -o $@ $(LIBS)

%.icc.eqchecker.O3.i386.o: %.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
tsvc_helper.icc.eqchecker.O3.i386.o: tsvc_helper.c
	$(ICC_I386) -c $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  -O3 $< -o $@
%.icc.eqchecker.O3.i386: %.icc.eqchecker.O3.i386.o tsvc_helper.icc.eqchecker.O3.i386.o
	$(ICC_I386) $(CFLAGS) $(ICC_I386_EQCHECKER_FLAGS_UNROLL)  $(LINKER_SCRIPT_I386_FLAG) -O3 $^ -o $@ $(LIBS)

# CCOMP

%.ccomp.eqchecker.O2.i386.o: %.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS) $(LINKER_SCRIPT_I386_FLAG)  -O2 $< -o $@
tsvc_helper.ccomp.eqchecker.O2.i386.o: tsvc_helper.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS)  -O2 $< -o $@
%.ccomp.eqchecker.O2.i386: %.ccomp.eqchecker.O2.i386.o tsvc_helper.ccomp.eqchecker.O2.i386.o
	$(CCOMP_I386) $(CCOMP_CFLAGS)  $(LINKER_SCRIPT_I386_FLAG) -O2 $^ -o $@ $(LIBS)

%.ccomp.O0.i386.o: %.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS) $(LINKER_SCRIPT_I386_FLAG)  -O0 $< -o $@
tsvc_helper.ccomp.O0.i386.o: tsvc_helper.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS) $(LINKER_SCRIPT_I386_FLAG)  -O0 $< -o $@
%.ccomp.O0.i386: %.ccomp.O0.i386.o tsvc_helper.ccomp.O0.i386.o
	$(CCOMP_I386) $(CCOMP_CFLAGS)  $(LINKER_SCRIPT_I386_FLAG) -O0 $^ -o $@ $(LIBS)

%.ccomp.O2.i386.o: %.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS) $(LINKER_SCRIPT_I386_FLAG)  -O2 $< -o $@
tsvc_helper.ccomp.O2.i386.o: tsvc_helper.c
	$(CCOMP_I386) -c $(CCOMP_CFLAGS) $(LINKER_SCRIPT_I386_FLAG)  -O2 $< -o $@
%.ccomp.O2.i386: %.ccomp.O2.i386.o tsvc_helper.ccomp.O2.i386.o
	$(CCOMP_I386) $(CCOMP_CFLAGS)  $(LINKER_SCRIPT_I386_FLAG) -O2 $^ -o $@ $(LIBS)

# LLVM BC

%.c.O0.eqchecker.bc: %.c
	CLANG_REVERSE_ARGS=1 $(CLANG_I386) $(EQCHECKER_DEFINES) -Xclang -disable-O0-optnone $(INCLUDES) -m32 -O0 -emit-llvm $^ -c -o $@.tmp
	$(LLVM_OPT) -mem2reg -strip-debug -o $@ $@.tmp

%.c.O0.bc: %.c
	$(CLANG_I386) $(CFLAGS) -Xclang -disable-O0-optnone $(INCLUDES) -m32 -O0 -emit-llvm $^ -c -o $@.tmp
	$(LLVM_OPT) -mem2reg -strip-debug -die -o $@ $@.tmp

%.bc.O0: %.c.O0.bc tsvc_helper.c.O0.bc
	$(LLVM_LINK) $^ -o $@

%.bc.O2: %.bc.O0
	$(LLVM_OPT) -O2 -o $@ $<

#see http://lists.llvm.org/pipermail/llvm-dev/2017-April/111989.html for the sequence of commands used to generate bc.O3 below
%.bc.O3: %.c
	$(CLANG_I386) $(CFLAGS) -Xclang -disable-llvm-passes $(INCLUDES) -m32 -O3 -emit-llvm $^ -c -o $@.tmp
	$(LLVM_OPT) $(LLVM_OPT_FLAGS) -o $@ $@.tmp

%.bc.O3.cg: %.bc.O3
	#$(MYLLC) -O3 $< -o $<.cg.tmp
	#rm -f $<.cg.tmp
	#$(MYLLVM_AS) $@.ll -o $@

#%.bc.O3.cg: %.c
#	$(CLANG_I386) $(CFLAGS) -Xclang -disable-llvm-passes $(INCLUDES) -m32 -O3 -emit-llvm $^ -c -o $@.tmp
#	$(MYLLC) -O3 $@.tmp -o $@.cg.tmp
#	#rm -f $@.cg.tmp
#	mv -f $@.tmp.cg.ll $@.ll
#	$(MYLLVM_AS) $@.ll -o $@

# LLVM BC text

%.s: %
	$(LLVM_DIS) < $< > $@
